<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>QTP功能测试</title>
    <link href="/2022/09/03/QTP%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <url>/2022/09/03/QTP%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1 id="一、前言（课设目的及内容）"><a href="#一、前言（课设目的及内容）" class="headerlink" title="一、前言（课设目的及内容）"></a>一、前言（课设目的及内容）</h1><p>QTP是quicktest Professional的简称，是一种自动测试工具。使用QTP的目的是想用它来执行重复的手动测试，主要是用于回归测试和测试同一软件的新版本。因此你在测试前要考虑好如何对应用程序进行测试，例如要测试那些功能、操作步骤、输入数据和期望的输出数据等</p><h2 id="1-1-测试目的"><a href="#1-1-测试目的" class="headerlink" title="1.1   测试目的"></a>1.1   测试目的</h2><p>（1）  使学生能掌握网站功能测试的基本思路和方法，学会使用自动化测试工具QTP进行功能测试；</p><p>（2）  培养学生分析、解决问题的能力；</p><p>（3）  提高学生的创新思维能力与动手能力；</p><p>（4）  提高学生的科技论文写作能力。</p><h2 id="1-2-测试内容"><a href="#1-2-测试内容" class="headerlink" title="1.2 测试内容"></a>1.2 测试内容</h2><p>QTP进行功能测试的测试流程的五个步骤：</p><p>1.制定测试计划</p><p>自动测试的测试计划是根据被测项目的具体需求，以及所使用的测试工具而制定的，完全用于指导测试全工程。</p><p>2.创建测试脚本</p><p>当测试人员浏览站点或在应用程序上操作的时候，QTP的自动录制机制能够将测试人员的每一个操作步骤及被操作的对象记录下来，自动生成测试脚本语句。</p><p>3.增强测试脚本的功能</p><p>录制脚本只是为了实现创建或者设计脚本的第一步，基本的脚本录制完毕后，测试人员可以根据需要增加一些扩展功能，QTP允许测试人员通过在脚本中增加或更改测试步骤来修正或自定义测试流程。</p><p>4.运行测试</p><p>QTP从脚本的第一行开始执行语句，运行过程中会对设置的检查点进行验证，用实际数据代替参数值，并给出相应的输出结构信息。测试过程中测试人员还可以调试自己的脚本，直到脚本完全符合要求。</p><p>5.分析测试</p><p>运行结束后系统会自动生成一份详细完整的测试结果报告。<br>二、测试计划及测试需求</p><h2 id="2-1-测试原理分析"><a href="#2-1-测试原理分析" class="headerlink" title="2.1 测试原理分析"></a>2.1 测试原理分析</h2><p>QTP主要采用的是使用GUI模拟人的操作。它在模拟人的操作时会记录操作的对象及所做的操作和顺序，然后在回放时按记录顺序操作这些对象。而在这个模拟的过程中，最重要的莫过于界面对象（控件）的识别。</p><p>例如，在“用户名输入框”中输入“a用户”，伪代码如下：<br>WebEdit(“用户名输入框”).Set “a用户”，下面分析这个测试原理。</p><p>首先，QTP会通过“用户名输入框”这个名字到对象库的对象名中查找；</p><p>然后通过找到的对象名，找到对象名映射的属性包；</p><p>接着QTP就会通过这个属性包来匹配页面上的控件的属性，如果在页面上找到一个唯一与此属性包匹配的控件，那QTP就会认为此控件为要找的控件；</p><p>最后QTP根据“WebEdit”来确定控件的类型，并调用QTP对于此类控件内置的操作方法“Set”把“a用户”赋予了控件。</p><p>至于其他控件的识别和操作，基本原理和上面一样。</p><h2 id="2-2测试流程图"><a href="#2-2测试流程图" class="headerlink" title="2.2测试流程图"></a>2.2测试流程图</h2><p>根据测试原理的分析以及QTP测试的基本步骤可以设计如图2-1的测试流程图。</p><p> <img src="/../img/2090353-20220513094101515-1070407113-16621756129811.png" alt="img"></p><p>​       图2-1 测试流程图</p><p>·2.3 测试计划设计</p><p>根据测试原理分析与测试思想设计，设计如图2-2所示的测试过程计划流程图。</p><p><img src="/../img/2090353-20220513094154405-1628762981-16621756129813.png" alt="img"></p><p>图2-2 测试计划流程图</p><h2 id="2-4-测试需求分析"><a href="#2-4-测试需求分析" class="headerlink" title="2.4 测试需求分析"></a>2.4 测试需求分析</h2><p>对于一个网站系统，其链接的正确性和各个功能模块的功能实现的准确性是其测试的关键性环节。同时在最短的时间内开发出需求分析中的网站系统的软件产品，以最快的速度能先于其他竞争对手占领软件市场，从而获取最大的利益，所以测试速度也是至关重要的。</p><p>传统的软件测试是靠人进行手工测试，也就是现在各个公司的主流方法，我们称之为Manual test。测试部门每天都要计算在某个项目上Charge多少个人。这样的测试耗费时间、人力、物力以及成本。自动化测试的目的就是尽可能的减少在测试上的人力和财力的开销，以最便捷省时省事的方法完成同样的任务。</p><p>因此以QTP自动化测试工具对网站的链接正确性检查和各个功能模块的功能实现的准确性测试能够在满足测试需求的前提下加快测试进度。</p><h2 id="2-5-测试环境搭建"><a href="#2-5-测试环境搭建" class="headerlink" title="2.5 测试环境搭建"></a>2.5 测试环境搭建</h2><p>操作系统：Windows 10</p><p>语言：中文</p><p>浏览器：IE浏览器</p><p>网络：宽带连接</p><p>网站：<a href="http://127.0.0.1:5000/newstype">http://127.0.0.1:5000/newstype</a></p><p>软件：QuickTest Professional</p><p>其他软件需求：Microsoft Visio2007和Microsoft Word2016</p><p>三、测试用例的设计</p><h2 id="3-1-登录与注册测试用例"><a href="#3-1-登录与注册测试用例" class="headerlink" title="3.1 登录与注册测试用例"></a>3.1 登录与注册测试用例</h2><p>(1).注册测试用例设计如表3-1所示：</p><p>表3-1注册测试用例</p><table><thead><tr><th>前置条件</th><th>输入数据</th><th>预期结果</th><th>实际结果</th></tr></thead><tbody><tr><td>输入姓名：</td><td>小明</td><td>注册成功</td><td>注册成功</td></tr><tr><td>输入电话：</td><td>154567327890</td><td></td><td></td></tr><tr><td>输入密码：</td><td>******</td><td></td><td></td></tr></tbody></table><p>(2). 登录测试用例如表3-2所示：</p><p>表3-2 登录测试用例</p><table><thead><tr><th>前置条件</th><th>输入数据</th><th>预期结果</th><th>实际结果</th></tr></thead><tbody><tr><td>已注册用户</td><td></td><td>登录成功</td><td>登录成功</td></tr><tr><td>输入电话：</td><td>154567327890</td><td></td><td></td></tr><tr><td>输入密码：</td><td>******</td><td></td><td></td></tr></tbody></table><h2 id="3-2-查看新闻的测试用例"><a href="#3-2-查看新闻的测试用例" class="headerlink" title="3.2 查看新闻的测试用例"></a>3.2 查看新闻的测试用例</h2><p>(1). 查看新闻的测试用例如表3-3所示：</p><p>表3-3 查看新闻的测试用例</p><table><thead><tr><th>前置条件</th><th>输入数据</th><th>预期结果</th><th>实际结果</th></tr></thead><tbody><tr><td>点击想要查看的新闻类别</td><td>点击对应新闻类别链接</td><td>进入对应类别的新闻列表页面</td><td>进入对应类别的新闻列表页面</td></tr><tr><td>点击想要查看的新闻</td><td>点击对应新闻链接</td><td>进入对应新闻详情页面</td><td>进入对应新闻详情页面</td></tr></tbody></table><h2 id="3-3-关闭新闻返回新闻咨询页面的测试用例"><a href="#3-3-关闭新闻返回新闻咨询页面的测试用例" class="headerlink" title="3.3 关闭新闻返回新闻咨询页面的测试用例"></a>3.3 关闭新闻返回新闻咨询页面的测试用例</h2><p>(1). 关闭新闻返回新闻咨询页面的测试用例如表3-4所示：</p><p>表3-4 关闭新闻返回新闻咨询页面的测试用例</p><table><thead><tr><th>前置条件</th><th>输入数据</th><th>预期结果</th><th>实际结果</th></tr></thead><tbody><tr><td>关闭新闻详情页面</td><td>点击关闭页面按钮</td><td>新闻详情页面关闭进入新闻列表页面</td><td>新闻详情页面关闭进入新闻列表页面</td></tr><tr><td>点击导航栏中的“新闻首页”</td><td>点击导航栏中“新闻首页”链接</td><td>进入新闻咨询页面</td><td>进入新闻咨询页面</td></tr></tbody></table><h2 id="3-4-脚本"><a href="#3-4-脚本" class="headerlink" title="3.4 脚本"></a>3.4 脚本</h2><p>SBrowser(“Accordion Slider”).Page(“Accordion Slider”).Link(“登录|注册”).Click</p><p>Browser(“Accordion Slider”).Page(“注册或登录”).WebEdit(“WebEdit”).Set “15297323390”</p><p>Browser(“Accordion Slider”).Page(“注册或登录”).WebEdit(“WebEdit_2”).SetSecure “627c7a0e614001379ef301f87ebc5b3ea454”</p><p>Browser(“Accordion Slider”).Page(“注册或登录”).WebButton(“登录”).Drag 137,142</p><p>Browser(“Accordion Slider”).Page(“注册或登录”).WebButton(“登录”).Drop 137,142</p><p>Browser(“Accordion Slider”).Page(“Accordion Slider_2”).Link(“新闻资讯”).Click</p><p>Browser(“Accordion Slider”).Page(“新闻资讯”).Link(“旅游”).Click</p><p>Browser(“Accordion Slider”).Page(“旅游”).Link(“最火五一小长假将来临！这三座热门城市就别去了，火车票已秒光”).Click</p><p>Browser(“Accordion Slider”).Page(“旅游_2”).Link(“新闻首页”).Click</p><p>Browser(“Accordion Slider”).Page(“新闻资讯”).Link(“返回首页”).Click</p><h1 id="四、测试过程"><a href="#四、测试过程" class="headerlink" title="四、测试过程"></a>四、测试过程</h1><h2 id="4-1开始录制脚本："><a href="#4-1开始录制脚本：" class="headerlink" title="4.1开始录制脚本："></a>4.1开始录制脚本：</h2><p>点击打开QTP，创建一个Blank Test；</p><p> <img src="/../img/2090353-20220513094239504-1037138058-16621756129815.png" alt="img"></p><p> 　　　　　　　　　　　　　图4-1 创建空白测试</p><p>点击Record来录制一个脚本：</p><p> <img src="/../img/2090353-20220513094326174-221197351-16621756129817.png" alt="img"></p><p>　　　　　　　　　　　　图4-2 开始录制脚本</p><p>点击“确定”后进入新闻网站主页：</p><p> <img src="/../img/2090353-20220513094343711-24348268-16621756129819.png" alt="img"></p><p>　　　　　　　　　　　　图4-3 进入新闻网站主页</p><p>然后进入用户登录页面，如下图所示：</p><p> <img src="/../img/2090353-20220513094357427-1581079608-166217561298211.png" alt="img"></p><p>　　　　　　　　　　　　图4-4 进入用户登录页面</p><p>输入用户名和密码后，进入网站首页：</p><p> <img src="/../img/2090353-20220513094456351-2066260157-166217561298213.png" alt="img"></p><p>　　　　　　　　　　　　图4-5 进入网站首页</p><p>点击新闻资讯，进入新闻类别页面：</p><p> <img src="/../img/2090353-20220513094554304-1202620497-166217561298215.png" alt="img"></p><p> 　　　　　　　　　　　图4-6 新闻类别界面</p><p>点击想要查看的新闻类别进入新闻列表页面：</p><p> <img src="/../img/2090353-20220513094632432-244872926-166217561298217.png" alt="img"></p><p> 　　　　　　　　　　　图4-7 新闻列表界面</p><p>点击新闻链接进入新闻详情界面：</p><p> <img src="/../img/2090353-20220513094720466-797501180-166217561298219.png" alt="img"></p><p>　　　　　　　　　　　　 图4-8 新闻详情界面</p><p>返回新闻首页：</p><p> <img src="/../img/2090353-20220513094752505-1750372953-166217561298221.png" alt="img"></p><p> 　　　　　　　　　　　图4-9 返回新闻首页</p><p>进入QTP的Keyword视图：</p><p> <img src="/../img/2090353-20220513094922701-774495374-166217561298223.png" alt="img"></p><p>　　　　　　　　　　图4-10 进入QTP的Keyword视图</p><p>而下图是其Expert View（Expert就是代码视图，一般编写脚本都在这个区域）：</p><p> <img src="/../img/2090353-20220513094952301-993805214-166217561298225.png" alt="img"></p><p> 　　　　　　　　　图4-11进入QTP的Expert视图</p><h2 id="4-2-回放录制脚本："><a href="#4-2-回放录制脚本：" class="headerlink" title="4.2 回放录制脚本："></a>4.2 回放录制脚本：</h2><p>录制完成后，点击按钮，由于没有加入检查点，故而结果都是Done，出现如下图：</p><p> <img src="/../img/2090353-20220513095051779-1129550280-166217561298227.png" alt="img"></p><p> 　　　　　　　　　　　图4-12 脚本回放完成界面</p><h2 id="4-3-加入检查点"><a href="#4-3-加入检查点" class="headerlink" title="4.3 加入检查点"></a>4.3 加入检查点</h2><p>下面加入检查点，在用户页面的输入用户名时加入一个检查点，以检查输入的用户名是否正确：，</p><p> <img src="/../img/2090353-20220513095111654-757802340-166217561298229.png" alt="img"></p><p> 　　　　　　　　　　　图4-13 在用户名处加入检查点</p><p>然后设置检查点属性，检查点插入位置设为后，检查点超时设为2））：</p><p> <img src="/../img/2090353-20220513095130074-636747558-166217561298231.png" alt="img"></p><p>　　　　　　　　　　　　　　图4-14 设置检查点属性</p><p>插入检查点后效果：</p><p> <img src="/../img/2090353-20220513095146298-1674035012-166217561298333.png" alt="img"></p><p> 　　　　　　　　　　　图4-15 插入检查点后效果</p><p>Expert View：</p><p> <img src="/../img/2090353-20220513095202047-1249280818-166217561298335.png" alt="img"></p><p> 　　　　　　　　　图4-16 插入检查点后的Expert视图</p><h2 id="4-4-重新运行脚本"><a href="#4-4-重新运行脚本" class="headerlink" title="4.4 重新运行脚本"></a>4.4 重新运行脚本</h2><p>再次点击按钮，得到结果如下：</p><p> <img src="/../img/2090353-20220513095215623-933466238-166217561298337.png" alt="img"></p><p> 　　　　　　　　　　　图4-17 脚本回放完成界面</p><p>两个结果都是Passed，表示都通过了，功能验证测试完成。<br>五、测试结果分析</p><p>本次实验主要利用QTP的检查点功能来测试登录时输入用户名功能。在开始设置检查点的时候，我开始将检查点放在了输入用户名之前，导致用户名还没有输入就进行检查，所以一直失败，后来发现检查点位置放错了，应该放在输入用户名之后，修改之后测试通过。</p><p> <img src="/../img/2090353-20220513095236837-1411401006-166217561298339.png" alt="img"></p><p> 　　　　　　　　　　　　　图5-1 测试通过界面</p><h1 id="六、课设小结及心得体会"><a href="#六、课设小结及心得体会" class="headerlink" title="六、课设小结及心得体会"></a>六、课设小结及心得体会</h1><p>QTP是一款非常强大自动化测试工具，它的用途非常广泛，各项功能如对象库，同步点，检查点等也非常好用。通过本次的课程设计，使我对软件测试这门课程有了一个更加深入的了解，尤其是相对于小学期之前来说，使用QTP进行功能测试熟练了很多，尤其是插入检查点这一环节，之前做实验时对这一环节并没有完全理解，所以在这次测试过程中卡在了插入检查点这一环节，测试一直不通过，后来通过网上查找资料以及查看学习通的视频才对这一环节完全理解，测试过程中除了插入检查点之外，基本没有出现其他问题。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>软件过程与管理核心要义</title>
    <link href="/2022/09/01/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%AE%A1%E7%90%86%E6%A0%B8%E5%BF%83%E8%A6%81%E4%B9%89/"/>
    <url>/2022/09/01/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%AE%A1%E7%90%86%E6%A0%B8%E5%BF%83%E8%A6%81%E4%B9%89/</url>
    
    <content type="html"><![CDATA[<h2 id="概论"><a href="#概论" class="headerlink" title="概论"></a>概论</h2><ol><li><p>软件工程三要素</p><ol><li>过程</li><li>方法</li><li>工具</li></ol></li><li><p>软件过程的定义</p><blockquote><p><strong>软件过程</strong>是用于软件开发及维护的一系列<strong>活动、方法及实践</strong>。</p></blockquote></li><li><p>常见软件过程分类（五大类）</p><ol><li>客户-供应商过程：内部直接影响到客户、外部直接影响开发、向客户交付软件以及软件正确操作与使用的过程。</li><li>工程过程：软件系统、产品的定义、设计、实现以及维护的过程。</li><li>支持过程</li><li>管理过程：整个软件生命周期中为工程过程、支持过程和客户-供应商过程的实践活动提供指导、跟踪和监控的过程。</li><li>组织过程</li></ol></li><li><p>常见软件过程（主要列举管理过程）</p><ol><li>项目管理：计划、跟踪和协调项目执行及生产所需资源的管理过程。（主要关注时间、成本）</li><li>质量管理：对项目产品和服务的质量加以管理，从而获得最大的客户满意度。（主要关注质量）</li><li>风险管理：整个项目的生命周期中对风险不断的识别、诊断和分析，回避风险、降低风险或消除风险，并在项目以及组织层次上建立有效的风险管理机制。</li><li>子合同管理：选择合格的子合同商并对其进行管理的过程。</li></ol></li></ol><p><img src="/../img/image-20220521161238773.png" alt="image-20220521161238773"></p><h2 id="软件质量管理"><a href="#软件质量管理" class="headerlink" title="软件质量管理"></a>软件质量管理</h2><h3 id="软件质量"><a href="#软件质量" class="headerlink" title="软件质量"></a>软件质量</h3><ol><li>定义：软件质量是软件产品满足明确或隐含需要能力的性能和特性的总体。</li></ol><h3 id="ISO-x2F-IEC-9126"><a href="#ISO-x2F-IEC-9126" class="headerlink" title="ISO&#x2F;IEC 9126"></a>ISO&#x2F;IEC 9126</h3><ol><li>软件质量度量模型的组成：<ol><li>软件质量特性</li><li>软件质量子特性</li><li>软件质量度量评价标准</li></ol></li><li>六个一级质量特性<ol><li>功能性</li><li>可靠性</li><li>易用性</li><li>效率</li><li>可维护性</li><li>可移植性</li></ol></li><li>一级特性对应的二级特性（选择题）</li></ol><p><img src="/../img/image-20220521171203683.png" alt="image-20220521171203683"></p><h3 id="朱兰质量管理三部曲"><a href="#朱兰质量管理三部曲" class="headerlink" title="朱兰质量管理三部曲"></a>朱兰质量管理三部曲</h3><ol><li>质量计划：确定项目应达到的质量标准，以及如何满足质量标准的计划安排和方法。<ol><li>质量成本：为达到产品或服务质量而付出所有努力的总成本。<ul><li>预防成本</li><li>评价成本</li><li>失效成本</li></ul></li></ol></li><li>质量保证：确保项目达到有关标准而开展的有计划、有组织的工作活动。<ol><li>正规的质量评价：质量审计</li><li>总结性的质量评价：质量改进</li></ol></li><li>质量控制：确定项目结果与质量标准是否相符，并及时纠正产品缺陷的过程。<ol><li>静态方法：审计</li><li>动态方法：测试</li></ol></li></ol><h2 id="软件项目管理"><a href="#软件项目管理" class="headerlink" title="软件项目管理"></a><strong>软件项目管理</strong></h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><ol><li><p>项目：项目是为完成某一独特的<strong>产品</strong>、<strong>服务</strong>或<strong>成果</strong>所做的<strong>一次性</strong>努力。</p></li><li><p>项目管理：项目管理就是在项目活动中运用相关知识, 技能, 工具和技术满足项目的要求。</p></li><li><p>项目管理的五大过程组：启动、计划、执行、控制和收尾。</p></li><li><p>项目管理的十大知识领域：</p><ol><li>项目集成管理</li><li>项目范围管理</li><li>项目时间管理</li><li>项目成本管理</li><li>项目质量管理</li><li>项目人力资源管理</li><li>项目沟通管理</li><li>项目风险管理</li><li>项目采购管理</li><li>项目相关利益者管理</li></ol></li></ol><h3 id="可行性分析"><a href="#可行性分析" class="headerlink" title="可行性分析"></a>可行性分析</h3><ol><li><p>可行性分析——净现值</p><ol><li>定义：净现值是成本效益分析的有力工具之一。</li><li>优点：<ul><li>适用性强，能基本满足项目年限相同的互斥投资方案决策。</li><li>能灵活地考虑投资风险。</li></ul></li></ol></li></ol><h3 id="识别软件项目的活动"><a href="#识别软件项目的活动" class="headerlink" title="识别软件项目的活动"></a>识别软件项目的活动</h3><ol><li>WBS：WBS是面向可交付成果的对项目任务的分组,它组织并定义了整个项目范围。它是一个分级的树型结构，是对项目由粗到细的分解过程。</li></ol><h3 id="软件工作量估计方法"><a href="#软件工作量估计方法" class="headerlink" title="软件工作量估计方法"></a>软件工作量估计方法</h3><ol><li>算法模型</li><li>专家判断</li><li>类比</li><li>自顶向下</li><li>自底向上</li></ol><h3 id="软件项目的进度安排"><a href="#软件项目的进度安排" class="headerlink" title="软件项目的进度安排"></a>软件项目的进度安排</h3><ol><li><p>甘特图</p><ol><li>缺点：无法描述任务的逻辑关系</li></ol></li><li><p><strong>关键路径法（CPM）</strong></p><ol><li><p>定义</p><ul><li>关键路径：项目网络图中花费时间最长的活动路线叫做关键路径。</li><li>关键活动；组成关键路径的活动。</li><li>关键路径法的缺点：关键路径法中的活动周期是确定的，固定不变的，这与现实不太符合。</li></ul></li><li><p>关键路径的特点：</p><ul><li>关键路径上活动持续时间总和是项目的工期。</li><li>关键路径上任何一个活动的延迟都会导致整个项目完工时间延迟。</li><li>关键路径是相对的，也是变化的，非关键路径可能变为关键路径，关键路径也可能变为非关键路径。</li></ul></li><li><p>计算</p><ul><li><p>核心：正向求最早开始时间和最早结束时间，二者取大作为最早开始时间；反向求最晚开始时间和最晚结束时间，二者取小作为最晚结束时间。</p></li><li><p>$$<br>自由时差（空闲缓冲期）&#x3D;后续活动的最早开始时间-当前活动的最早完成时间<br>$$</p><p>$$<br>总时差（总缓冲期）&#x3D;最晚完成时间-最早完成时间<br>$$</p><p>$$<br>干预缓冲期&#x3D;总缓冲期-空闲缓冲期<br>$$</p></li><li><p><strong>例题1：</strong></p></li></ul><p><img src="/../img/image-20220522151823291.png" alt="image-20220522151823291"></p><p><img src="/../img/image-20220522151852491.png" alt="image-20220522151852491"></p><p><img src="/../img/image-20220522152508431.png" alt="image-20220522152508431"></p><ul><li><strong>例题2：</strong></li></ul><p><img src="/../img/image-20220522164030228.png" alt="image-20220522164030228"></p><p><strong>例题3：</strong></p><p><img src="/../img/image-20220522164753829.png" alt="image-20220522164753829"></p><p><strong>（DHC为关键路径）</strong></p></li></ol></li><li><p>PERT技术（工程评估评审技术）的步骤：</p><ul><li>估计每个活动的最可能的时间，乐观的时间，悲观的时间，计算活动的期望周期与标准偏差；</li><li>正向遍历得到期望达到事件的日期；</li><li>满足目标的可能性。</li></ul></li><li><p>关键链法（CCPM）步骤：</p><p><img src="/../img/image-20220522165929322.png" alt="image-20220522165929322"></p></li></ol><h3 id="软件项目的资源管理"><a href="#软件项目的资源管理" class="headerlink" title="软件项目的资源管理"></a>软件项目的资源管理</h3><ol><li>资源：资源是执行项目所需要的任何项和人。</li><li>资源分配直方图</li></ol><p><img src="/../img/image-20220522170508876.png" alt="image-20220522170508876"></p><h3 id="软件项目的风险管理"><a href="#软件项目的风险管理" class="headerlink" title="软件项目的风险管理"></a>软件项目的风险管理</h3><ol><li><p>风险的定义：一个不确定的事件或者情况，若其一旦发生，会对项目的目标，例如：进度、成本和质量，产生积极或消极的影响。</p></li><li><p>风险管理的框架</p><p><img src="/../img/image-20220522170747335.png" alt="image-20220522170747335"></p></li><li><p>风险处理方法</p><ul><li><p>风险处理的方法—接受风险，规避风险，降低风险，转移风险</p></li><li><p>风险的分类–4大类：参与者，技术，结构，任务</p></li></ul></li></ol><h3 id="软件项目的监督和控制"><a href="#软件项目的监督和控制" class="headerlink" title="软件项目的监督和控制"></a>软件项目的监督和控制</h3><ol><li><p>挣值分析（计算题）</p><ol><li><p>挣值：赋予每个任务一个“挣值”，表示完成这个任务需要的支出，一般用时间或金钱衡量。</p></li><li><p>赋值方法：0&#x2F;100</p></li><li><p>三个数值：</p><ul><li>计划价值（PV)：已计划工作的预测成本 </li><li>挣值(EV)：已执行工作的预测成本</li><li>实际成本(AC)：已执行工作的实际成本</li></ul></li><li><p>两个偏差：</p><ul><li><p>进度偏差（SV）：挣值与计划价值的差<br>$$<br>SV&#x3D;EV-PV<br>$$</p></li><li><p>成本偏差（CV）：挣值与实际成本的差</p></li></ul><p>$$<br>CV&#x3D;EV-AC<br>$$</p></li><li><p>两个性能比：</p><ul><li><p>进度性能指标（SPI）：SPI &lt; 1——进度落后<br>$$<br>SPI&#x3D;EV&#x2F;PV<br>$$</p></li><li><p>成本性能指标：CPI &lt; 1——成本超支<br>$$<br>CPI&#x3D;EV&#x2F;AC<br>$$</p></li></ul></li><li><p>完成时间的估计值（TEAC）：按照当前进度项目的完成时间估计</p><p>项目的计划周期（SAC）<br>$$<br>TEAC &#x3D; SAC &#x2F; SPI<br>$$<br>项目成本预算（EAC）：按照当前的进度，项目的总支出的估计</p><p>全部工作的预算（按照原计划，完成所有工作所需的预算成本）（BAC）<br>$$<br>EAC &#x3D; BAC &#x2F; CPI<br>$$</p></li></ol></li><li><p>例题1：</p><img src="../img/image-20220523160842621.png" alt="image-20220523160842621" style="zoom:80%;" /><img src="../img/image-20220523160815831.png" alt="image-20220523160815831" style="zoom:80%;" /></li><li><p>挣值法参数分析与对应措施表</p><table><thead><tr><th><strong>序号</strong></th><th>*</th><th><strong>三参数关系</strong></th><th><strong>分析（含义）</strong></th><th><strong>措施</strong></th></tr></thead><tbody><tr><td><strong>1</strong></td><td></td><td><strong>AC &gt; PV &gt; EV</strong>           <strong>SV&lt;0    CV&lt;O</strong></td><td><strong>效率低</strong>  <strong>速度较慢</strong>  <strong>投入超前</strong></td><td><strong>用工作效率高的人员更换一批工作效率低的人员</strong></td></tr><tr><td><strong>2</strong></td><td></td><td><strong>EV  &gt; PV &gt; AC</strong>      <strong>SV&gt;0  CV&gt;0</strong></td><td><strong>效率高</strong>  <strong>速度较快</strong>  <strong>投入延后</strong></td><td><strong>若偏离不大，维持现状</strong></td></tr><tr><td><strong>3</strong></td><td></td><td><strong>EV  &gt; AC &gt; PV</strong>      <strong>SV&gt;0  CV&gt;0</strong></td><td><strong>效率较高</strong>  <strong>速度快</strong>  <strong>投入超前</strong></td><td><strong>抽出部分人员，放慢进度</strong></td></tr><tr><td><strong>4</strong></td><td></td><td><strong>AC  &gt; EV &gt; PV</strong>      <strong>SV&gt;0  CV&lt;0</strong></td><td><strong>效率较低</strong>  <strong>速度较快</strong>  <strong>投入超前</strong></td><td><strong>抽出部分人员，增加少量骨干人员</strong></td></tr><tr><td><strong>5</strong></td><td></td><td><strong>PV  &gt; AC &gt; EV</strong>      <strong>SV&lt;0  CV&lt;0</strong></td><td><strong>效率较低</strong>  <strong>速度慢</strong>  <strong>投入延后</strong></td><td><strong>增加高效人员投入</strong></td></tr></tbody></table></li></ol><h3 id="软件项目的配置管理"><a href="#软件项目的配置管理" class="headerlink" title="软件项目的配置管理"></a>软件项目的配置管理</h3><ol><li>配置管理的任务<ul><li>标志变更</li><li>控制变更</li><li>确保变更正确实现</li><li>向受变更影响的组织和个人报告变更</li></ul></li><li>配置项：软件配置管理的对象，一个软件配置项是项目中一个特定的、可文档化的工作产品集。</li></ol><h2 id="经典的软件过程管理"><a href="#经典的软件过程管理" class="headerlink" title="经典的软件过程管理"></a><strong>经典的软件过程管理</strong></h2><h3 id="CMM"><a href="#CMM" class="headerlink" title="CMM"></a>CMM</h3><ol><li><p>CMM——软件过程能力成熟度模型</p></li><li><p>出发点：<strong>CMM描述软件组织一条从无序的、混乱的过程到成熟的、有纪律的过程的改进途径</strong>，描绘出软件组织如何增加对软件开发和维护的过程控制，如何向软件工程和管理的优秀文化演变等方面的指导 。</p></li><li><p>CMM不是过程，不是技术，不是方法，它是一种指导思想。</p></li><li><p>体系结构</p><img src="../img/image-20220523171439077.png" alt="image-20220523171439077" style="zoom:67%;" /><img src="../img/image-20220523171510128.png" alt="image-20220523171510128" style="zoom: 67%;" /><ul><li><p>CMM由5个成熟度级别组成。</p><ul><li>初始级：软件过程不稳定，项目执行无序、混乱，没有稳定的开发环境。</li><li>可重复级：规则化的</li><li>已定义级：标准的、一致的</li><li>已管理级：可预测的</li><li>优化级：不断改进</li></ul><img src="../img/image-20220523172046935.png" alt="image-20220523172046935" style="zoom:67%;" /></li><li><p>每个成熟度级别（除级别1）包含了实现该级别的若干个关键过程域（KPA）。</p></li><li><p>每一个KPA进一步被分为称为公共特征的5个部分：<strong>执行约定、执行能力、执行活动、测量和分析、验证实施</strong>。</p></li><li><p>这些公共特征包括了关键实践（KP），即每一个KPA包括5类KP，实现了这些KP后，就实现了关键过程域的目标。</p></li></ul></li><li><p>关键过程域</p><ol><li><p>定义：一系列相互关联的操作活动，标识了达到某个成熟度级别时所必须满足的条件。</p><blockquote><p>一个软件企业如果希望达到某一个成熟度级别，就必须完全满足该级别的关键过程域的要求，即满足每个关键过程域的目标。</p></blockquote></li><li><p>CMM共有18个KPA，每一级都有自己的KPA，KPA分为三大类：管理过程、组织过程和工程过程。</p></li></ol></li><li><p>关键实践</p><ol><li>定义：描述对KPA的有效实施和制度化起最重要作用的基础设施和活动。</li></ol></li></ol><h3 id="CMMI"><a href="#CMMI" class="headerlink" title="CMMI"></a>CMMI</h3><ol><li><p>CMMI的两种表示方法：</p><ul><li>阶段式表示法：作为整个组织已建立的一个过程域集合</li><li>连续式表示法：作为单一过程域或者过程域集合</li></ul></li><li><p>CMM和CMMI的区别与联系</p><ol><li><p>区别：</p><ul><li>CMM适用于软件的组织成熟度测评。CMMI适用于多种组织成熟度测评。CMMI相对CMM更完整，更适用于大环境。</li></ul></li><li><p>联系：CMMI有两种表示方法，一种就是与CMM一样的阶段式表现方法（把CMMI中的若干个过程区域分成5个成熟度级别）；</p><p>另一种是连续式的表现方法（将CMMI中过程区域分为四大类，过程管理，项目管理，工程以及支持）</p></li></ol></li></ol><h3 id="PSP"><a href="#PSP" class="headerlink" title="PSP"></a>PSP</h3><ol><li><p>体系结构</p><ol><li><p>PSP成熟度模型：PSP具有4个等级<strong>，</strong>7个台阶组成的成熟度框架 。4个等级分别为个体度量过程、个体计划过程、个体质量管理过程和个体循环过程。</p><img src="../img/image-20220523193430349.png" alt="image-20220523193430349" style="zoom:67%;" /></li><li><p>PSP过程框架：PSP过程由一系列方法、表格、脚本等组成，用以指导软件开发人员计划、度量和管理他们的工作。</p></li></ol></li><li><p>两种日志</p><ol><li>时间日志</li><li>缺陷日志</li></ol></li><li><p>评审比测试有效的原因：在评审时发现的错误比测试时发现的多；成本低。缺陷发现的越早，修复的花费越低；且避免缺陷比发现和修复缺陷更有效。</p></li><li><p>四个设计模板：</p><ol><li>操作规格模板（UML:用例图）：描述了系统与外界的交互；描述了用户与待设计系统的正常情况下和异常情况下的交互。</li><li>功能规格模板（UML:类图）：描述系统与外界的接口。</li><li>状态规格模板：可以精确定义程序的所有状态、状态之间转换以及伴随每次状态转换的动作。</li><li>逻辑规格模板：可以精确描述系统的内部逻辑状态。</li></ol></li></ol><h3 id="软件过程模型"><a href="#软件过程模型" class="headerlink" title="软件过程模型"></a>软件过程模型</h3><ol><li>瀑布模型<ol><li>特点：<ul><li>开发阶段严格按照线性方式进行</li><li>阶段间有因果关系</li><li>每个阶段需评审确认</li><li>允许反馈</li><li>强调文档</li></ul></li><li>适用场所：需求易于完善定义的软件</li><li>缺点：<ul><li>各个阶段的划分完全固定，阶段之间产生大量的文档，极大地增加了工作量</li><li>开发过程中很难响应客户的变更要求</li><li>早期的错误可能要等到开发后期的测试阶段才能发现，进而带来 严重的后果</li></ul></li></ol></li><li>快速原型模型<ol><li>优点：<ul><li>加强用户和软件人员之间的沟通，明确系统的需求</li><li>尽早得到系统可用性的反馈信息，及时修改以获得完整、正确需求</li></ul></li><li>缺点：<ul><li>用户会由于看到的原型系统不完善，而对产品产生怀疑</li><li>可能为了快速开发原型系统，而采用未经充分论证的技术（如操作系统平台、主要的算法）导致质量低下</li></ul></li></ol></li><li>增量模型<ol><li>优点：<ul><li>整个产品被分解成若干个构件逐步交付，用户可以不断地看到所开发软件的可运行中间版本</li><li>将早期增量作为原型有助于明确后期增量的需求</li><li>降低开发风险</li><li>重要功能被首先交付，从而使其得到最多的测试</li></ul></li><li>缺点：<ul><li>需要软件具备开放式的体系结构，以便各个构件逐步进入</li><li>需求难以在增量实现之前详细定义，因此增量与需求的准确映射以及所有增量的有效集成可能会比较困难，容易退化为边做边改方式，使软件过程的控制失去整体性</li></ul></li></ol></li><li>螺旋模型<ol><li>优点：（风险驱动）<ul><li>关注软件的重用</li><li>关注早期错误的消除</li><li>将质量目标放在首位</li><li>将开发阶段与维护阶段结合在一起</li></ul></li><li>缺点：<ul><li>需要风险评估的经验</li><li>只适应内部大规模软件开发</li></ul></li></ol></li><li>形式化方法模型<ol><li>优点：<ul><li>由于数学方法具有严密性和准确性，形式化方法开发过程所交付的软件系统具有较少的缺陷和较高的安全性</li></ul></li><li>缺点：<ul><li>开发人员需要具备一定技能并经过特殊训练</li><li>形式化描述和转换是一项费时费力的工作,成本高，质量不一定高</li><li>现实应用的系统大多数是交互性强的软件，但是这些系统难以用形式化方法进行描述</li></ul></li></ol></li><li>基于组件的开发模型<ol><li>优点：<ul><li>充分体现软件复用的思想</li><li>实现快速交付软件</li><li>利用开源组件与软件</li></ul></li><li>缺点：<ul><li>商业组件的修改受到限制，影响系统的演化</li></ul></li></ol></li></ol><h3 id="MSF"><a href="#MSF" class="headerlink" title="MSF"></a>MSF</h3><ol><li>六个角色：产品管理，程序管理，开发，测试，发布管理，用户体验</li><li>过程模型中的五个阶段：构思阶段，计划阶段，开发阶段，稳定阶段，部署阶段</li></ol><h3 id="RUP"><a href="#RUP" class="headerlink" title="RUP"></a>RUP</h3><ol><li>九个软件过程<ol><li>6个核心过程流：商业建模，需求，分析和设计，实现，测试，部署</li><li>3个辅助过程流：配置和变更管理，项目管理，环境</li></ol></li><li>四个阶段：<ul><li>初始阶段：里程碑：生命期目标</li><li>细化阶段：里程碑：生命期构架</li><li>构造阶段：里程碑：初始运作功能。构造阶段的结束是项目开发的<strong>第三个重要的里程碑</strong>。这个阶段产生的版本通常被称为β版。</li><li>交付阶段：里程碑：产品发布</li></ul></li><li>六大经验：迭代式开发，管理需求，基于组件的体系结构，可视化建模，验证软件质量，控制软件变更</li></ol><h2 id="敏捷软件开发"><a href="#敏捷软件开发" class="headerlink" title="敏捷软件开发"></a><strong>敏捷软件开发</strong></h2><ol><li>敏捷宣言<ul><li>注重个人及互动胜于过程和工具</li><li>注重可用的软件胜于详尽的文档</li><li>注重客户协作胜于合同谈判</li><li>注重响应变化胜于恪守计划</li></ul></li><li>Scrum：一个敏捷开发框架，是一个增量的、迭代的开发过程</li><li>极限编程（XP）：一种全新而快捷的软件开发方法。XP团队使用现场客户、特殊计划方法和持续测试来提供快速的反馈和全面的交流。这可以帮助团队最大化地发挥他们的价值。<ul><li>XP认为沟通是项目成功的关键</li><li>实践：现场客户，计划游戏，系统隐喻，简单设计，代码集体所有</li><li>XP特别适合于小型的有责任心的、自觉自励的团队开发需求不确定或者迅速变化的软件</li></ul></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
