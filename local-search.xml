<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hbase——API操作</title>
    <link href="/2022/09/05/Hbase%E2%80%94%E2%80%94API%E6%93%8D%E4%BD%9C/"/>
    <url>/2022/09/05/Hbase%E2%80%94%E2%80%94API%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<p>1.判断表是否存在</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs awk">public static boolean isTableExit(String tableName) throws IOException &#123;<br><span class="hljs-regexp">//</span>        <span class="hljs-regexp">//</span>获取配置文件信息<br><span class="hljs-regexp">//</span>        <span class="hljs-regexp">//</span>HBaseConfiguration configuration=new HBaseConfiguration();<br><span class="hljs-regexp">//</span>        Configuration configuration=HBaseConfiguration.create();<br><span class="hljs-regexp">//</span>        configuration.set(<span class="hljs-string">&quot;hbase.zookeeper.quorum&quot;</span>,<span class="hljs-string">&quot;master,s1,s2&quot;</span>);<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>        <span class="hljs-regexp">//</span>获取管理员对象<br><span class="hljs-regexp">//</span>        <span class="hljs-regexp">//</span>HBaseAdmin admin=new HBaseAdmin(configuration);<br><span class="hljs-regexp">//</span>        Connection connection=ConnectionFactory.createConnection(configuration);<br><span class="hljs-regexp">//</span>        Admin admin=connection.getAdmin();<br><br>        <span class="hljs-regexp">//</span>判断表是否存在<br>        boolean exists=admin.tableExists(TableName.valueOf(tableName));<br><br>        <span class="hljs-regexp">//</span>关闭连接<br><span class="hljs-regexp">//</span>        admin.close();<br><br>        <span class="hljs-regexp">//</span>返回结果<br>        return exists;<br>    &#125;<br></code></pre></td></tr></table></figure><p>2.创建表</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">public  static  void  create<span class="hljs-constructor">Table(String <span class="hljs-params">tableName</span>,String<span class="hljs-operator">...</span> <span class="hljs-params">cfs</span>)</span> throws IOException &#123;<br><br>        <span class="hljs-comment">// 判断是否存在列族信息</span><br>        <span class="hljs-keyword">if</span>(cfs.length&lt;=<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;请设置列族信息&quot;</span>);<br>            return;<br>        &#125;<br><br>        <span class="hljs-comment">//判断表是否存在</span><br>        <span class="hljs-keyword">if</span>(is<span class="hljs-constructor">TableExit(<span class="hljs-params">tableName</span>)</span>)&#123;<br>            <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(tableName+<span class="hljs-string">&quot;表已存在&quot;</span>);<br>            return;<br>        &#125;<br><br>        <span class="hljs-comment">//创建表描述器</span><br>        HTableDescriptor hTableDescriptor=<span class="hljs-keyword">new</span> <span class="hljs-constructor">HTableDescriptor(TableName.<span class="hljs-params">valueOf</span>(<span class="hljs-params">tableName</span>)</span>);<br><br>        <span class="hljs-comment">//循环添加列族信息</span><br>        <span class="hljs-keyword">for</span>(String cf:cfs)&#123;<br><br>            <span class="hljs-comment">//创建列祖描述器</span><br>            HColumnDescriptor hColumnDescriptor=<span class="hljs-keyword">new</span> <span class="hljs-constructor">HColumnDescriptor(<span class="hljs-params">cf</span>)</span>;<br><br>            <span class="hljs-comment">// 添加具体列族信息</span><br>            hTableDescriptor.add<span class="hljs-constructor">Family(<span class="hljs-params">hColumnDescriptor</span>)</span>;<br>        &#125;<br><br>        <span class="hljs-comment">//创建表</span><br>        admin.create<span class="hljs-constructor">Table(<span class="hljs-params">hTableDescriptor</span>)</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><p>3.删除表</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">public static void drop<span class="hljs-constructor">Table(String <span class="hljs-params">tableName</span>)</span> throws IOException &#123;<br><br>        <span class="hljs-comment">//判断表是否存在</span><br>        <span class="hljs-keyword">if</span> (!is<span class="hljs-constructor">TableExit(<span class="hljs-params">tableName</span>)</span>)&#123;<br>            <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(tableName+<span class="hljs-string">&quot;表不存在!&quot;</span>);<br>            return;<br>        &#125;<br><br>        <span class="hljs-comment">//先使表下线</span><br>        admin.disable<span class="hljs-constructor">Table(TableName.<span class="hljs-params">valueOf</span>(<span class="hljs-params">tableName</span>)</span>);<br><br>        <span class="hljs-comment">// 删除表</span><br>        admin.delete<span class="hljs-constructor">Table(TableName.<span class="hljs-params">valueOf</span>(<span class="hljs-params">tableName</span>)</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><p>4.创建命名空间</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">createNameSpace</span>(<span class="hljs-params"><span class="hljs-built_in">String</span> ns</span>)&#123;<br>        <span class="hljs-comment">//创建命名空间描述器</span><br>        <span class="hljs-title class_">NamespaceDescriptor</span> namespaceDescriptor=<span class="hljs-title class_">NamespaceDescriptor</span>.<span class="hljs-title function_">create</span>(ns).<span class="hljs-title function_">build</span>();<br><br>         <span class="hljs-comment">//创建命名空间</span><br>        <span class="hljs-keyword">try</span> &#123;<br>            admin.<span class="hljs-title function_">createNamespace</span>(namespaceDescriptor);<br>        &#125; <span class="hljs-keyword">catch</span> (<span class="hljs-title class_">NamespaceExistException</span> e)&#123;<br>            <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(ns+<span class="hljs-string">&quot;命名空间已存在&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">catch</span> (<span class="hljs-title class_">IOException</span> e) &#123;<br>            e.<span class="hljs-title function_">printStackTrace</span>();<br>        &#125;<br><br>    &#125;<br></code></pre></td></tr></table></figure><p><strong>完整代码：</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><code class="hljs awk">package test;<br><br>import org.apache.hadoop.conf.Configuration;<br>import org.apache.hadoop.hbase.*;<br>import org.apache.hadoop.hbase.client.Admin;<br>import org.apache.hadoop.hbase.client.Connection;<br>import org.apache.hadoop.hbase.client.ConnectionFactory;<br>import org.apache.hadoop.hbase.client.HBaseAdmin;<br><br>import java.io.IOException;<br><br>/*<br>DDL:<br><span class="hljs-number">1</span>.判断表是否存在<br><span class="hljs-number">2</span>.创建表<br><span class="hljs-number">3</span>.删除表<br><br>DML：<br><span class="hljs-number">5</span>.插入数据<br><span class="hljs-number">6</span>.查数据（get，scan）<br><span class="hljs-number">7</span>.删除数据<br> */<br>public class TestAPI &#123;<br><br>    private  static Connection connection=null;<br>    private  static Admin admin=null;<br><br>    static &#123;<br><br>        try &#123;<br><br>            <span class="hljs-regexp">//</span>获取配置信息<br>            Configuration configuration=HBaseConfiguration.create();<br>            configuration.set(<span class="hljs-string">&quot;hbase.zookeeper.quorum&quot;</span>,<span class="hljs-string">&quot;master,s1,s2&quot;</span>);<br><br>            <span class="hljs-regexp">//</span>创建连接对象<br>            connection=ConnectionFactory.createConnection(configuration);<br><br>            <span class="hljs-regexp">//</span>创建admin对象<br>            admin=connection.getAdmin();<br>        &#125; catch (IOException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>    <span class="hljs-regexp">//</span><span class="hljs-number">1</span>.判断表是否存在<br>    public static boolean isTableExit(String tableName) throws IOException &#123;<br><span class="hljs-regexp">//</span>        <span class="hljs-regexp">//</span>获取配置文件信息<br><span class="hljs-regexp">//</span>        <span class="hljs-regexp">//</span>HBaseConfiguration configuration=new HBaseConfiguration();<br><span class="hljs-regexp">//</span>        Configuration configuration=HBaseConfiguration.create();<br><span class="hljs-regexp">//</span>        configuration.set(<span class="hljs-string">&quot;hbase.zookeeper.quorum&quot;</span>,<span class="hljs-string">&quot;master,s1,s2&quot;</span>);<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>        <span class="hljs-regexp">//</span>获取管理员对象<br><span class="hljs-regexp">//</span>        <span class="hljs-regexp">//</span>HBaseAdmin admin=new HBaseAdmin(configuration);<br><span class="hljs-regexp">//</span>        Connection connection=ConnectionFactory.createConnection(configuration);<br><span class="hljs-regexp">//</span>        Admin admin=connection.getAdmin();<br><br>        <span class="hljs-regexp">//</span>判断表是否存在<br>        boolean exists=admin.tableExists(TableName.valueOf(tableName));<br><br>        <span class="hljs-regexp">//</span>关闭连接<br><span class="hljs-regexp">//</span>        admin.close();<br><br>        <span class="hljs-regexp">//</span>返回结果<br>        return exists;<br>    &#125;<br><br>    <span class="hljs-regexp">//</span><span class="hljs-number">2</span>.创建表<br>    public  static  void  createTable(String tableName,String... cfs) throws IOException &#123;<br><br>        <span class="hljs-regexp">//</span> 判断是否存在列族信息<br>        <span class="hljs-keyword">if</span>(cfs.length&lt;=<span class="hljs-number">0</span>)&#123;<br>            System.out.println(<span class="hljs-string">&quot;请设置列族信息&quot;</span>);<br>            return;<br>        &#125;<br><br>        <span class="hljs-regexp">//</span>判断表是否存在<br>        <span class="hljs-keyword">if</span>(isTableExit(tableName))&#123;<br>            System.out.println(tableName+<span class="hljs-string">&quot;表已存在&quot;</span>);<br>            return;<br>        &#125;<br><br>        <span class="hljs-regexp">//</span>创建表描述器<br>        HTableDescriptor hTableDescriptor=new HTableDescriptor(TableName.valueOf(tableName));<br><br>        <span class="hljs-regexp">//</span>循环添加列族信息<br>        <span class="hljs-keyword">for</span>(String cf:cfs)&#123;<br><br>            <span class="hljs-regexp">//</span>创建列祖描述器<br>            HColumnDescriptor hColumnDescriptor=new HColumnDescriptor(cf);<br><br>            <span class="hljs-regexp">//</span> 添加具体列族信息<br>            hTableDescriptor.addFamily(hColumnDescriptor);<br>        &#125;<br><br>        <span class="hljs-regexp">//</span>创建表<br>        admin.createTable(hTableDescriptor);<br>    &#125;<br>    public static void close()&#123;<br>        <span class="hljs-keyword">if</span> (admin!=null)&#123;<br>            try &#123;<br>                admin.close();<br>            &#125; catch (IOException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(connection!=null)&#123;<br>            try &#123;<br>                connection.close();<br>            &#125; catch (IOException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-regexp">//</span><span class="hljs-number">3</span>.删除表<br>    public static void dropTable(String tableName) throws IOException &#123;<br><br>        <span class="hljs-regexp">//</span>判断表是否存在<br>        <span class="hljs-keyword">if</span> (!isTableExit(tableName))&#123;<br>            System.out.println(tableName+<span class="hljs-string">&quot;表不存在!&quot;</span>);<br>            return;<br>        &#125;<br><br>        <span class="hljs-regexp">//</span>先使表下线<br>        admin.disableTable(TableName.valueOf(tableName));<br><br>        <span class="hljs-regexp">//</span> 删除表<br>        admin.deleteTable(TableName.valueOf(tableName));<br>    &#125;<br><br>    <span class="hljs-regexp">//</span><span class="hljs-number">4</span>.创建命名空间<br>    public static void createNameSpace(String ns)&#123;<br>        <span class="hljs-regexp">//</span>创建命名空间描述器<br>        NamespaceDescriptor namespaceDescriptor=NamespaceDescriptor.create(ns).build();<br><br>         <span class="hljs-regexp">//</span>创建命名空间<br>        try &#123;<br>            admin.createNamespace(namespaceDescriptor);<br>        &#125; catch (NamespaceExistException e)&#123;<br>            System.out.println(ns+<span class="hljs-string">&quot;命名空间已存在&quot;</span>);<br>        &#125;<br>        catch (IOException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br><br>    &#125;<br>    public static void main(String[] args) throws IOException &#123;<br><br>        <span class="hljs-regexp">//</span><span class="hljs-number">1</span>.测试表是否存在<br><span class="hljs-regexp">//</span>        System.out.println(isTableExit(<span class="hljs-string">&quot;stu5&quot;</span>));<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>        <span class="hljs-regexp">//</span><span class="hljs-number">2</span>.创建表测试<br>        createTable(<span class="hljs-string">&quot;0919:stu5&quot;</span>,<span class="hljs-string">&quot;info1&quot;</span>,<span class="hljs-string">&quot;info2&quot;</span>);<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>        <span class="hljs-regexp">//</span>检测表创建是否成功<br><span class="hljs-regexp">//</span>        System.out.println(isTableExit(<span class="hljs-string">&quot;stu5&quot;</span>));<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>        <span class="hljs-regexp">//</span><span class="hljs-number">3</span>.删除表测试<br><span class="hljs-regexp">//</span>        dropTable(<span class="hljs-string">&quot;stu5&quot;</span>);<br><span class="hljs-regexp">//</span><br><span class="hljs-regexp">//</span>        <span class="hljs-regexp">//</span>检测表删除是否成功<br><span class="hljs-regexp">//</span>        System.out.println(isTableExit(<span class="hljs-string">&quot;stu5&quot;</span>));<br><br>        <span class="hljs-regexp">//</span><span class="hljs-number">4</span>.创建命名空间<br>        createNameSpace(<span class="hljs-string">&quot;0919&quot;</span>);<br>        <span class="hljs-regexp">//</span>关闭资源<br>        close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Hbase</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WTF表单验证</title>
    <link href="/2022/09/05/WTF%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81/"/>
    <url>/2022/09/05/WTF%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81/</url>
    
    <content type="html"><![CDATA[<h3 id="WTF表单验证可分为3个步骤："><a href="#WTF表单验证可分为3个步骤：" class="headerlink" title="WTF表单验证可分为3个步骤："></a>WTF表单验证可分为3个步骤：</h3><p>①导入wtf扩展提供的表单验证器。（from wtforms.validators import DataRequired,EqualTo）</p><p>②定义表单类</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"># 定义表单类<br><span class="hljs-keyword">class</span> <span class="hljs-symbol">RegisterForm</span>(<span class="hljs-symbol">FlaskForm</span>):<br>    <span class="hljs-symbol">username</span> =<span class="hljs-symbol">StringField</span>(&#x27;账号：&#x27;,<span class="hljs-symbol">validators</span>=[<span class="hljs-symbol">DataRequired</span>()])<br>    <span class="hljs-symbol">password</span> =<span class="hljs-symbol">PasswordField</span>(&#x27;密码：&#x27;,<span class="hljs-symbol">validators</span>=[<span class="hljs-symbol">DataRequired</span>()])<br>    <span class="hljs-symbol">password2</span> = <span class="hljs-symbol">PasswordField</span>(&#x27;确认密码：&#x27;,<span class="hljs-symbol">validators</span>=[<span class="hljs-symbol">DataRequired</span>(),<span class="hljs-symbol">EqualTo</span>(&#x27;<span class="hljs-symbol">password</span>&#x27;,&#x27;两次密码不一致&#x27;)])<br>    <span class="hljs-symbol">submit</span>=<span class="hljs-symbol">SubmitField</span>(&#x27;提交&#x27;)<br></code></pre></td></tr></table></figure><p>③验证逻辑（判断请求方式——&gt;请求参数——&gt;验证）</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">redist_form</span>=RegisterForm()<br><br>    <span class="hljs-keyword">if</span> request.<span class="hljs-attribute">method</span>==&#x27;POST&#x27;:<br>        <span class="hljs-attribute">username</span>=request.form.get(&#x27;username&#x27;)<br>        password = request.form.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;password&#x27;</span>)<br>        password2 = request.form.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;password2&#x27;</span>)<br>        <span class="hljs-keyword">if</span> redist_form.validate_on_submit():<br>            <span class="hljs-built_in">print</span>(username,password)<br>            return <span class="hljs-string">&#x27;success&#x27;</span><br>        <span class="hljs-keyword">else</span>:<br>            flash(<span class="hljs-string">&#x27;参数有误&#x27;</span>)<br>    return render_template(<span class="hljs-string">&#x27;registform.html&#x27;</span>,<span class="hljs-attribute">form</span>=redist_form)<br></code></pre></td></tr></table></figure><p><strong>完整代码：</strong></p><p><strong>app.py</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> flask import Flask,render_template,request,flash<br><span class="hljs-keyword">from</span> flask_wtf import FlaskForm<br><span class="hljs-keyword">from</span> wtforms import StringField, PasswordField,SubmitField<br><span class="hljs-keyword">from</span> wtforms.validators import EqualTo,DataRequired<br>app = Flask(__name__)<br>app.<span class="hljs-attribute">secret_key</span>=<span class="hljs-string">&#x27;yingjie&#x27;</span><br><br><span class="hljs-comment"># 定义表单类</span><br>class RegisterForm(FlaskForm):<br>    username =StringField(<span class="hljs-string">&#x27;账号：&#x27;</span>,validators=[DataRequired()])<br>    password =PasswordField(<span class="hljs-string">&#x27;密码：&#x27;</span>,validators=[DataRequired()])<br>    password2 = PasswordField(<span class="hljs-string">&#x27;确认密码：&#x27;</span>,validators=[DataRequired(),EqualTo(<span class="hljs-string">&#x27;password&#x27;</span>,<span class="hljs-string">&#x27;两次密码不一致&#x27;</span>)])<br>    <span class="hljs-attribute">submit</span>=SubmitField(&#x27;提交&#x27;)<br><br>@app.route(<span class="hljs-string">&#x27;/regist&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;POST&#x27;</span>])<br>def regist_form():<br>    <span class="hljs-attribute">redist_form</span>=RegisterForm()<br><br>    <span class="hljs-keyword">if</span> request.<span class="hljs-attribute">method</span>==&#x27;POST&#x27;:<br>        <span class="hljs-attribute">username</span>=request.form.get(&#x27;username&#x27;)<br>        password = request.form.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;password&#x27;</span>)<br>        password2 = request.form.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;password2&#x27;</span>)<br>        <span class="hljs-keyword">if</span> redist_form.validate_on_submit():<br>            <span class="hljs-built_in">print</span>(username,password)<br>            return <span class="hljs-string">&#x27;success&#x27;</span><br>        <span class="hljs-keyword">else</span>:<br>            flash(<span class="hljs-string">&#x27;参数有误&#x27;</span>)<br>    return render_template(<span class="hljs-string">&#x27;registform.html&#x27;</span>,<span class="hljs-attribute">form</span>=redist_form)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.<span class="hljs-built_in">run</span>()<br></code></pre></td></tr></table></figure><p><strong>registform.html</strong></p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span></span><br><span class="language-xml">        </span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">form.csrf_token</span>() &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">        </span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">form.username.label</span> &#125;&#125;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">form.username</span> &#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span></span><br><span class="language-xml">        </span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">form.password.label</span> &#125;&#125;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">form.password</span> &#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span></span><br><span class="language-xml">        </span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">form.password2.label</span> &#125;&#125;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">form.password2</span> &#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span></span><br><span class="language-xml">        </span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">form.submit</span> &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br><span class="language-xml">&#123;% for message in get_flashed_messages() %&#125;</span><br><span class="language-xml">        </span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">message</span> &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">&#123;% endfor %&#125;</span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p><strong>运行截图：</strong></p><p><strong><img src="/../img/2090353-20211006083807576-725700789.png" alt="img"></strong></p><p> <img src="/../img/2090353-20211006083840009-1190454674.png" alt="img"></p>]]></content>
    
    
    
    <tags>
      
      <tag>表单验证</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文本特征提取</title>
    <link href="/2022/09/05/%E6%96%87%E6%9C%AC%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96/"/>
    <url>/2022/09/05/%E6%96%87%E6%9C%AC%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96/</url>
    
    <content type="html"><![CDATA[<h2 id="英文文本特征提取"><a href="#英文文本特征提取" class="headerlink" title="英文文本特征提取"></a>英文文本特征提取</h2><h3 id="方法步骤："><a href="#方法步骤：" class="headerlink" title="方法步骤："></a>方法步骤：</h3><p>①导入相关API</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span> sklearn.feature_extraction.text <span class="hljs-keyword">import</span> CountVectorizer<br></code></pre></td></tr></table></figure><p>②实例化CountVectorizer</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">text</span><span class="hljs-operator">=</span>CountVectorizer()<br></code></pre></td></tr></table></figure><p>③调用fit_transform()方法进行特征提取</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">results</span><span class="hljs-operator">=</span>text.fit_transform(data)　　　　<br></code></pre></td></tr></table></figure><h3 id="主要代码："><a href="#主要代码：" class="headerlink" title="主要代码："></a>主要代码：</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs scss">def <span class="hljs-built_in">text_demo</span>():<br>    data=[<span class="hljs-string">&quot;I am going to school&quot;</span>,<span class="hljs-string">&quot;What do you want to do&quot;</span>]<br>    #实例化CountVectorizer<br>    text=<span class="hljs-built_in">CountVectorizer</span>()<br>    #调用<span class="hljs-built_in">fit_transform</span>()方法<br>    results=text.<span class="hljs-built_in">fit_transform</span>(data)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特征值：\n&quot;</span>,text.<span class="hljs-built_in">get_feature_names</span>())<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特征值提取结果：\n&quot;</span>,results.<span class="hljs-built_in">toarray</span>())       #results.<span class="hljs-built_in">toarray</span>()将稀疏矩阵转换为二维数组的形式<br></code></pre></td></tr></table></figure><h4 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h4><p><img src="/../img/2090353-20211016203918076-47450002.png" alt="img"></p><h2 id="中文文本特征提取"><a href="#中文文本特征提取" class="headerlink" title="中文文本特征提取"></a>中文文本特征提取</h2><p>中文文本特征提取步骤与英文类似，主要区别在于中文文本特征提取需要进行分词处理，否则就会出现如下结果，将一句话作为一个词处理：</p><p><img src="/../img/2090353-20211016204139982-2035092266.png" alt="img"></p><h3 id="一、-中文分词（使用jieba）："><a href="#一、-中文分词（使用jieba）：" class="headerlink" title="一、 中文分词（使用jieba）："></a>一、 中文分词（使用jieba）：</h3><p>①导入jieba</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">import</span> jieba<br></code></pre></td></tr></table></figure><p>②将目标进行分词处理</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">jieba.<span class="hljs-built_in">cut</span>(<span class="hljs-built_in">text</span>)<br></code></pre></td></tr></table></figure><p>③将分词处理结果转化为列表形式</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">list</span><span class="hljs-params">(jieba.cut(text)</span></span>)<br></code></pre></td></tr></table></figure><p>④将列表转化为字符串形式</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-string">&quot; &quot;</span><span class="hljs-selector-class">.join</span>(<span class="hljs-built_in">list</span>(jieba<span class="hljs-selector-class">.cut</span>(text)))<br></code></pre></td></tr></table></figure><p>主要代码：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs applescript">def cut_text(<span class="hljs-built_in">text</span>):<br>    <span class="hljs-literal">result</span>=<span class="hljs-string">&quot; &quot;</span>.join(<span class="hljs-built_in">list</span>(jieba.cut(<span class="hljs-built_in">text</span>)))<br>    <span class="hljs-comment"># print(result)</span><br><span class="hljs-built_in">    return</span> <span class="hljs-literal">result</span><br></code></pre></td></tr></table></figure><h3 id="二、中文文本特征提取"><a href="#二、中文文本特征提取" class="headerlink" title="二、中文文本特征提取"></a>二、中文文本特征提取</h3><p>①定义一个空数组，并利用该空数组接收中文分词后的结果</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">data_cut=<span class="hljs-selector-attr">[]</span>         #定义一个空数组<br><span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> data:<br>    data_cut<span class="hljs-selector-class">.append</span>(<span class="hljs-built_in">cut_text</span>(i))        #利用空数组接收分词后的结果<br></code></pre></td></tr></table></figure><p>②实例化CountVectorizer</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">CountVectorizer</span><span class="hljs-params">()</span></span><br></code></pre></td></tr></table></figure><p>③调用fit_transform()方法</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">text.fit<span class="hljs-constructor">_transform(<span class="hljs-params">data_cut</span>)</span><br></code></pre></td></tr></table></figure><p>主要代码：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs scss">def <span class="hljs-built_in">chinese_text_demo</span>():<br>    data=[<span class="hljs-string">&quot;我们也可以将数据存储在文件中&quot;</span>,<span class="hljs-string">&quot;但是在文件中读写数据速度相对较慢&quot;</span>,<span class="hljs-string">&quot;优秀的文件很优秀&quot;</span>]<br>    data_cut=[]         #定义一个空数组<br>    for i in data:<br>        data_cut.<span class="hljs-built_in">append</span>(<span class="hljs-built_in">cut_text</span>(i))        #利用空数组接收分词后的结果<br>    #实例化CountVectorizer<br>    text=<span class="hljs-built_in">CountVectorizer</span>()<br>    #调用<span class="hljs-built_in">fit_transform</span>()方法<br>    results=text.<span class="hljs-built_in">fit_transform</span>(data_cut)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特征值：\n&quot;</span>,text.<span class="hljs-built_in">get_feature_names</span>())<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特征值提取结果：\n&quot;</span>,results.<span class="hljs-built_in">toarray</span>())<br></code></pre></td></tr></table></figure><h4 id="运行结果：-1"><a href="#运行结果：-1" class="headerlink" title="运行结果："></a>运行结果：</h4><p><img src="/../img/2090353-20211016205147559-1681417473.png" alt="img"></p>]]></content>
    
    
    
    <tags>
      
      <tag>文本特征提取</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>决策树——非正常企业数目预测</title>
    <link href="/2022/09/05/%E5%86%B3%E7%AD%96%E6%A0%91%E2%80%94%E2%80%94%E9%9D%9E%E6%AD%A3%E5%B8%B8%E4%BC%81%E4%B8%9A%E6%95%B0%E7%9B%AE%E9%A2%84%E6%B5%8B/"/>
    <url>/2022/09/05/%E5%86%B3%E7%AD%96%E6%A0%91%E2%80%94%E2%80%94%E9%9D%9E%E6%AD%A3%E5%B8%B8%E4%BC%81%E4%B8%9A%E6%95%B0%E7%9B%AE%E9%A2%84%E6%B5%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="核心步骤："><a href="#核心步骤：" class="headerlink" title="核心步骤："></a>核心步骤：</h2><p>①将nsrxx.csv和zzsfp.csv两个表进行了合并和缩减，最终保留下了6个字段存入business.csv</p><p>字段含义：</p><p>　　id：企业id</p><p>　　xf_count：作为销方次数</p><p>　　gf_count：作为购方次数</p><p>　　del_count：销方购方次数之差</p><p>　　zfcs：作废次数</p><p>　　problem：是否为问题企业</p><p><img src="/../img/2090353-20211022104303658-2061965526.png" alt="img"></p><p> ②导入相关扩展包</p><figure class="highlight capnproto"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs capnproto"><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split  <span class="hljs-comment"># 划分数据集</span><br><span class="hljs-keyword">from</span> sklearn.feature_extraction <span class="hljs-keyword">import</span> DictVectorizer  <span class="hljs-comment">#字典特征值提取</span><br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeClassifier  <span class="hljs-comment"># 决策树</span><br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> export_graphviz  <span class="hljs-comment"># 决策树可视化</span><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br></code></pre></td></tr></table></figure><p>③获取数据</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">business</span><span class="hljs-operator">=</span>pd.read_csv(<span class="hljs-string">&quot;./business.csv&quot;</span>)<br></code></pre></td></tr></table></figure><p>④筛选特征值和目标值</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">x</span>=business[[<span class="hljs-string">&quot;xf_count&quot;</span>,<span class="hljs-string">&quot;gf_count&quot;</span>,<span class="hljs-string">&quot;del_count&quot;</span>,<span class="hljs-string">&quot;zfcs&quot;</span>]]        <span class="hljs-comment">#特征值</span><br><span class="hljs-attr">y</span>=business[<span class="hljs-string">&quot;problem&quot;</span>]                   <span class="hljs-comment">#目标值</span><br></code></pre></td></tr></table></figure><p>⑤将特征值转化为字典格式</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">x</span><span class="hljs-operator">=</span>x.to_dict(orient<span class="hljs-operator">=</span><span class="hljs-string">&quot;records&quot;</span>)<br></code></pre></td></tr></table></figure><p>⑥划分数据集</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">x_train,x_test,y_train,y_test=train<span class="hljs-constructor">_test_split(<span class="hljs-params">x</span>,<span class="hljs-params">y</span>)</span><br></code></pre></td></tr></table></figure><p>⑦字典特征抽取</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">transfer</span>=DictVectorizer()<br><span class="hljs-attr">x_train</span>=transfer.fit_transform(x_train)<br><span class="hljs-attr">x_test</span>=transfer.transform(x_test)<br></code></pre></td></tr></table></figure><p>⑧决策树预估器(estimator)</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">estimator = DecisionTreeClassifier(criterion=<span class="hljs-string">&quot;entropy&quot;</span>)  <span class="hljs-meta"># criterion默认为<span class="hljs-string">&#x27;gini&#x27;</span>系数，也可选择信息增益熵<span class="hljs-string">&#x27;entropy&#x27;</span></span><br>estimator.fit(x_train, y_train)  <span class="hljs-meta"># 调用fit()方法进行训练,()内为训练集的特征值与目标值</span><br></code></pre></td></tr></table></figure><p>⑨模型评估</p><ul><li>&#96;&#96;&#96;<br>直接对比真实值和预测值<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure>y_predict &#x3D; estimator.predict(x_test)  # 传入测试集特征值，预测所给测试集的目标值<br>print(“y_predict:\n”, y_predict)<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><br>- ```<br>  计算有问题的企业数<br></code></pre></td></tr></table></figure></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">flag</span>=0;<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> y_train:<br>    <span class="hljs-keyword">if</span>(<span class="hljs-attribute">i</span>==1):<br>        <span class="hljs-attribute">flag</span>=flag+1<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> y_test:<br>    <span class="hljs-keyword">if</span>(<span class="hljs-attribute">i</span>==1):<br>        <span class="hljs-attribute">flag</span>=flag+1<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;有问题的企业数为：&quot;</span>,flag)<br></code></pre></td></tr></table></figure><ul><li>&#96;&#96;&#96;<br>对比真实值和预测值：<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure>print(“直接对比真实值和预测值：\n”, y_test &#x3D;&#x3D; y_predict)<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><br>- ```<br>  计算准确率<br></code></pre></td></tr></table></figure></li></ul><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">score</span> = estimator.<span class="hljs-keyword">score</span>(x_test, y_test)  # 传入测试集的特征值和目标值<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;准确率为：\n&quot;</span>, <span class="hljs-keyword">score</span>)<br></code></pre></td></tr></table></figure><p>⑩决策树可视化</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">export<span class="hljs-constructor">_graphviz(<span class="hljs-params">estimator</span>, <span class="hljs-params">out_file</span>=<span class="hljs-string">&quot;tree_business.dot&quot;</span>, <span class="hljs-params">feature_names</span>=<span class="hljs-params">transfer</span>.<span class="hljs-params">get_feature_names</span>()</span>)<br></code></pre></td></tr></table></figure><h2 id="核心代码："><a href="#核心代码：" class="headerlink" title="核心代码："></a>核心代码：</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs routeros">def tree_business():<br>    # 1.获取数据<br>    <span class="hljs-attribute">business</span>=pd.read_csv(&quot;./business.csv&quot;)<br><br>    # 2.筛选特征值和目标值<br>    <span class="hljs-attribute">x</span>=business[[<span class="hljs-string">&quot;xf_count&quot;</span>,<span class="hljs-string">&quot;gf_count&quot;</span>,<span class="hljs-string">&quot;del_count&quot;</span>,<span class="hljs-string">&quot;zfcs&quot;</span>]]        #特征值<br>    <span class="hljs-attribute">y</span>=business[<span class="hljs-string">&quot;problem&quot;</span>]                   #目标值<br><br>    # 3.数据处理（缺失值处理，特征值——&gt;字典类型）<br>        #转换为字典<br>    <span class="hljs-attribute">x</span>=x.to_dict(orient=&quot;records&quot;)<br><br>    # 4.划分数据集<br>    x_train,x_test,y_train,<span class="hljs-attribute">y_test</span>=train_test_split(x,y)<br><br>    # 5.字典特征抽取<br>    <span class="hljs-attribute">transfer</span>=DictVectorizer()<br>    <span class="hljs-attribute">x_train</span>=transfer.fit_transform(x_train)<br>    <span class="hljs-attribute">x_test</span>=transfer.transform(x_test)<br><br>    # 6.决策树预估器(estimator)<br>    estimator = DecisionTreeClassifier(<span class="hljs-attribute">criterion</span>=<span class="hljs-string">&quot;entropy&quot;</span>)  # criterion默认为<span class="hljs-string">&#x27;gini&#x27;</span>系数，也可选择信息增益熵<span class="hljs-string">&#x27;entropy&#x27;</span><br>    estimator.fit(x_train, y_train)  # 调用fit()方法进行训练,()内为训练集的特征值与目标值<br><br>    # 7.模型评估<br>    # 方法一：直接对比真实值和预测值<br>    y_predict = estimator.predict(x_test)  # 传入测试集特征值，预测所给测试集的目标值<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;y_predict:\n&quot;</span>, y_predict)<br>    #计算有问题的企业数：<br>    <span class="hljs-attribute">flag</span>=0;<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> y_train:<br>        <span class="hljs-keyword">if</span>(<span class="hljs-attribute">i</span>==1):<br>            <span class="hljs-attribute">flag</span>=flag+1<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> y_test:<br>        <span class="hljs-keyword">if</span>(<span class="hljs-attribute">i</span>==1):<br>            <span class="hljs-attribute">flag</span>=flag+1<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;有问题的企业数为：&quot;</span>,flag)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;直接对比真实值和预测值：\n&quot;</span>, y_test == y_predict)<br>    # 方法二：计算准确率<br>    score = estimator.score(x_test, y_test)  # 传入测试集的特征值和目标值<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;准确率为：\n&quot;</span>, score)<br><br>    # 8.决策树可视化<br>    export_graphviz(estimator, <span class="hljs-attribute">out_file</span>=<span class="hljs-string">&quot;tree_business.dot&quot;</span>, <span class="hljs-attribute">feature_names</span>=transfer.get_feature_names())<br><br><br>    return None<br></code></pre></td></tr></table></figure><h2 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h2><p><img src="/../img/2090353-20211022105943774-816050043.png" alt="img"></p><h2 id="决策树可视化："><a href="#决策树可视化：" class="headerlink" title="决策树可视化："></a>决策树可视化：</h2><p>（因图规模过大无法展示完整）</p><p><img src="/../img/2090353-20211022110102971-62174821.png" alt="img"></p>]]></content>
    
    
    
    <tags>
      
      <tag>决策树</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Flask框架实现登录注册功能（mysql数据库）</title>
    <link href="/2022/09/05/Flask%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%EF%BC%88mysql%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%89/"/>
    <url>/2022/09/05/Flask%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%EF%BC%88mysql%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>本例使用Flask框架完成登录和注册操作，包括前端（index.html，regist.html）和后端（app.py）两部分，前端页面不过多介绍，直接进入后端部分：</p><h1 id="逻辑思路："><a href="#逻辑思路：" class="headerlink" title="逻辑思路："></a>逻辑思路：</h1><p>登录部分：运行程序默认进入登录界面，输入账号和密码点击登录，系统进入”获取登录请求参数及处理“阶段（@app.route(‘&#x2F;login’)），验证账号密码正确后跳转到目标界面。</p><p>注册部分：运行程序输入注册部分的路由进入注册界面，输入账号、密码和确认密码，系统进入”获取注册请求及处理“阶段（@app.route(‘&#x2F;registuser’)），判断两次输入密码是否一致，一致则跳转到登录界面，否则弹出警告框提示用户重新输入。</p><h2 id="主要步骤："><a href="#主要步骤：" class="headerlink" title="主要步骤："></a>主要步骤：</h2><p>①导入需要的扩展包</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-meta">#导入数据库模块</span><br><span class="hljs-keyword">import</span> pymysql<br><br><span class="hljs-title">from</span> flask <span class="hljs-keyword">import</span> Flask<br><span class="hljs-title">from</span> flask <span class="hljs-keyword">import</span> render_template<br><br><span class="hljs-meta">#导入前台请求的request模块</span><br><span class="hljs-title">from</span> flask <span class="hljs-keyword">import</span> request<br><span class="hljs-keyword">import</span> traceback<br><span class="hljs-meta">#导入弹出警告框模块</span><br><span class="hljs-keyword">import</span> win32api,win32con<br></code></pre></td></tr></table></figure><p>②定义登录界面路由</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment">#默认登录页面</span><br><span class="hljs-variable">@app</span>.route(<span class="hljs-string">&#x27;/&#x27;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">login</span>():<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;login.html&#x27;</span>)<br></code></pre></td></tr></table></figure><p>③定义注册界面路由</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment">#访问注册页面</span><br><span class="hljs-variable">@app</span>.route(<span class="hljs-string">&#x27;/regist&#x27;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">regist</span>():<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;regist.html&#x27;</span>)<br></code></pre></td></tr></table></figure><p>④获取登录请求参数及处理</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@app</span>.<span class="hljs-built_in">route</span>(<span class="hljs-string">&#x27;/login&#x27;</span>)<br>def <span class="hljs-built_in">getLoginRequest</span>():<br>    # 查询用户名及密码是否匹配及存在<br>    # 连接数据库,此前在数据库中创建数据库TESTDB<br>    db = pymysql.<span class="hljs-built_in">connect</span>(host=<span class="hljs-string">&quot;localhost&quot;</span>, user=<span class="hljs-string">&quot;root&quot;</span>, password=<span class="hljs-string">&quot;417020&quot;</span>, database=<span class="hljs-string">&quot;flask&quot;</span>,charset=<span class="hljs-string">&quot;utf8&quot;</span>)<br>    # 使用<span class="hljs-built_in">cursor</span>()方法获取操作游标<br>    cursor = db.<span class="hljs-built_in">cursor</span>()<br>    # SQL 查询语句<br>    sql = <span class="hljs-string">&quot;select * from user where user=&quot;</span> + request.args.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;user&#x27;</span>) + <span class="hljs-string">&quot; and password=&quot;</span> + request.args.<span class="hljs-built_in">get</span>(<br>        <span class="hljs-string">&#x27;password&#x27;</span>) + <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attribute">try</span>:<br>        # 执行sql语句<br>        cursor.<span class="hljs-built_in">execute</span>(sql)<br>        results = cursor.<span class="hljs-built_in">fetchall</span>()<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(results))<br>        if <span class="hljs-built_in">len</span>(results) == <span class="hljs-number">1</span>:<br>            return <span class="hljs-string">&#x27;登录成功&#x27;</span>       #返回需要跳转的页面或需要显示的字符串<br>        <span class="hljs-attribute">else</span>:<br>            return <span class="hljs-string">&#x27;用户名或密码不正确&#x27;</span><br>        # 提交到数据库执行<br>        db.<span class="hljs-built_in">commit</span>()<br>    <span class="hljs-attribute">except</span>:<br>        # 如果发生错误则回滚<br>        traceback.<span class="hljs-built_in">print_exc</span>()<br>        db.<span class="hljs-built_in">rollback</span>()<br>    # 关闭数据库连接<br>    db.<span class="hljs-built_in">close</span>()<br></code></pre></td></tr></table></figure><p>⑤获取注册请求及处理</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@app</span>.<span class="hljs-built_in">route</span>(<span class="hljs-string">&#x27;/registuser&#x27;</span>)<br>def <span class="hljs-built_in">getRigistRequest</span>():<br>#把用户名和密码注册到数据库中<br><br>    #连接数据库,此前在数据库中创建数据库flask<br>    db = pymysql.<span class="hljs-built_in">connect</span>(host=<span class="hljs-string">&quot;localhost&quot;</span>, user=<span class="hljs-string">&quot;root&quot;</span>, password=<span class="hljs-string">&quot;417020&quot;</span>, database=<span class="hljs-string">&quot;flask&quot;</span>,charset=<span class="hljs-string">&quot;utf8&quot;</span>)<br>    #使用<span class="hljs-built_in">cursor</span>()方法获取操作游标<br>    cursor = db.<span class="hljs-built_in">cursor</span>()<br>    #获取输入框内容<br>    username=request.args.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;user&#x27;</span>)<br>    password=request.args.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;password&#x27;</span>)<br>    password2=request.args.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;password2&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(password)<br>    <span class="hljs-built_in">print</span>(password2)<br>    #判断两次输入密码是否一致，一致则跳转到登录界面，不一致则弹出警告，要求用户重新输入<br>    if password==<span class="hljs-attribute">password2</span>:<br>        # SQL 插入语句<br>        sql = <span class="hljs-string">&quot;INSERT INTO user(user, password) VALUES (&quot;</span>+username+<span class="hljs-string">&quot;, &quot;</span>+password+<span class="hljs-string">&quot;)&quot;</span><br>        <span class="hljs-attribute">try</span>:<br>            # 执行sql语句<br>            cursor.<span class="hljs-built_in">execute</span>(sql)<br>            # 提交到数据库执行<br>            db.<span class="hljs-built_in">commit</span>()<br>             #注册成功之后跳转到登录页面<br>            return <span class="hljs-built_in">render_template</span>(<span class="hljs-string">&#x27;login.html&#x27;</span>)<br>        <span class="hljs-attribute">except</span>:<br>            #抛出错误信息<br>            traceback.<span class="hljs-built_in">print_exc</span>()<br>            # 如果发生错误则回滚<br>            db.<span class="hljs-built_in">rollback</span>()<br>            return <span class="hljs-string">&#x27;注册失败&#x27;</span><br>        # 关闭数据库连接<br>        db.<span class="hljs-built_in">close</span>()<br>    <span class="hljs-attribute">else</span>:<br>        win32api.<span class="hljs-built_in">MessageBox</span>(<span class="hljs-number">0</span>,<span class="hljs-string">&quot;两次输入密码不一致，请重新输入！&quot;</span>,<span class="hljs-string">&quot;提醒&quot;</span>,win32con.MB_ICONWARNING)<br>        return <span class="hljs-built_in">render_template</span>(<span class="hljs-string">&#x27;regist.html&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="完整代码："><a href="#完整代码：" class="headerlink" title="完整代码："></a>完整代码：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#导入数据库模块</span><br><span class="hljs-keyword">import</span> pymysql<br><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> render_template<br><br><span class="hljs-comment">#导入前台请求的request模块</span><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> request<br><span class="hljs-keyword">import</span> traceback<br><span class="hljs-comment">#导入弹出警告框模块</span><br><span class="hljs-keyword">import</span> win32api,win32con<br><br><span class="hljs-comment">#创建Flask应用实例</span><br>app = Flask(__name__)<br><br><br><span class="hljs-comment">#默认登录页面</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">login</span>():<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;login.html&#x27;</span>)<br><br><span class="hljs-comment">#访问注册页面</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/regist&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">regist</span>():<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;regist.html&#x27;</span>)<br><br><span class="hljs-comment">#获取注册请求及处理</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/registuser&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getRigistRequest</span>():<br><span class="hljs-comment">#把用户名和密码注册到数据库中</span><br><br>    <span class="hljs-comment">#连接数据库,此前在数据库中创建数据库flask</span><br>    db = pymysql.connect(host=<span class="hljs-string">&quot;localhost&quot;</span>, user=<span class="hljs-string">&quot;root&quot;</span>, password=<span class="hljs-string">&quot;417020&quot;</span>, database=<span class="hljs-string">&quot;flask&quot;</span>,charset=<span class="hljs-string">&quot;utf8&quot;</span>)<br>    <span class="hljs-comment">#使用cursor()方法获取操作游标</span><br>    cursor = db.cursor()<br>    <span class="hljs-comment">#获取输入框内容</span><br>    username=request.args.get(<span class="hljs-string">&#x27;user&#x27;</span>)<br>    password=request.args.get(<span class="hljs-string">&#x27;password&#x27;</span>)<br>    password2=request.args.get(<span class="hljs-string">&#x27;password2&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(password)<br>    <span class="hljs-built_in">print</span>(password2)<br>    <span class="hljs-comment">#判断两次输入密码是否一致，一致则跳转到登录界面，不一致则弹出警告，要求用户重新输入</span><br>    <span class="hljs-keyword">if</span> password==password2:<br>        <span class="hljs-comment"># SQL 插入语句</span><br>        sql = <span class="hljs-string">&quot;INSERT INTO user(user, password) VALUES (&quot;</span>+username+<span class="hljs-string">&quot;, &quot;</span>+password+<span class="hljs-string">&quot;)&quot;</span><br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-comment"># 执行sql语句</span><br>            cursor.execute(sql)<br>            <span class="hljs-comment"># 提交到数据库执行</span><br>            db.commit()<br>             <span class="hljs-comment">#注册成功之后跳转到登录页面</span><br>            <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;login.html&#x27;</span>)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-comment">#抛出错误信息</span><br>            traceback.print_exc()<br>            <span class="hljs-comment"># 如果发生错误则回滚</span><br>            db.rollback()<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;注册失败&#x27;</span><br>        <span class="hljs-comment"># 关闭数据库连接</span><br>        db.close()<br>    <span class="hljs-keyword">else</span>:<br>        win32api.MessageBox(<span class="hljs-number">0</span>,<span class="hljs-string">&quot;两次输入密码不一致，请重新输入！&quot;</span>,<span class="hljs-string">&quot;提醒&quot;</span>,win32con.MB_ICONWARNING)<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;regist.html&#x27;</span>)<br><br><span class="hljs-comment"># 获取登录参数及处理</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/login&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getLoginRequest</span>():<br>    <span class="hljs-comment"># 查询用户名及密码是否匹配及存在</span><br>    <span class="hljs-comment"># 连接数据库,此前在数据库中创建数据库TESTDB</span><br>    db = pymysql.connect(host=<span class="hljs-string">&quot;localhost&quot;</span>, user=<span class="hljs-string">&quot;root&quot;</span>, password=<span class="hljs-string">&quot;417020&quot;</span>, database=<span class="hljs-string">&quot;flask&quot;</span>,charset=<span class="hljs-string">&quot;utf8&quot;</span>)<br>    <span class="hljs-comment"># 使用cursor()方法获取操作游标</span><br>    cursor = db.cursor()<br>    <span class="hljs-comment"># SQL 查询语句</span><br>    sql = <span class="hljs-string">&quot;select * from user where user=&quot;</span> + request.args.get(<span class="hljs-string">&#x27;user&#x27;</span>) + <span class="hljs-string">&quot; and password=&quot;</span> + request.args.get(<br>        <span class="hljs-string">&#x27;password&#x27;</span>) + <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 执行sql语句</span><br>        cursor.execute(sql)<br>        results = cursor.fetchall()<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(results))<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(results) == <span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;登录成功&#x27;</span>       <span class="hljs-comment">#返回需要跳转的页面或需要显示的字符串</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;用户名或密码不正确&#x27;</span><br>        <span class="hljs-comment"># 提交到数据库执行</span><br>        db.commit()<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-comment"># 如果发生错误则回滚</span><br>        traceback.print_exc()<br>        db.rollback()<br>    <span class="hljs-comment"># 关闭数据库连接</span><br>    db.close()<br><br><br><span class="hljs-comment"># 使用__name__ == &#x27;__main__&#x27;是 Python 的惯用法，确保直接执行此脚本时才</span><br><span class="hljs-comment"># 启动服务器，若其他程序调用该脚本可能父级程序会启动不同的服务器</span><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Flask</tag>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pymysql.err.OperationalError: (1054, &#39;Unknown column &#39;aa&#39; in &#39;field list&#39;&#39;)</title>
    <link href="/2022/09/05/pymysql-err-OperationalError-1054-Unknown-column-aa-in-field-list/"/>
    <url>/2022/09/05/pymysql-err-OperationalError-1054-Unknown-column-aa-in-field-list/</url>
    
    <content type="html"><![CDATA[<h3 id="错误描述："><a href="#错误描述：" class="headerlink" title="错误描述："></a>错误描述：</h3><p>　　今天使用python连接mysql数据库进行数据添加时，出现报错”pymysql.err.OperationalError: (1054, “Unknown column ‘aa’ in ‘field list’”)“，经查询是由于pymysql在进行插入数据时，如果是vchar或string类型，需加单引号才能插入成功。</p><h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><p>使用Python中的repr()函数修改sql语句：</p><p>原sql语句：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">sql</span> = <span class="hljs-string">&quot;INSERT INTO student(name,sex,age,grade) VALUES (&quot;</span>+name+<span class="hljs-string">&quot;,&quot;</span>+sex+<span class="hljs-string">&quot;,&quot;</span>+age+<span class="hljs-string">&quot;,&quot;</span>+grade+<span class="hljs-string">&quot;)&quot;</span><br></code></pre></td></tr></table></figure><p>修改后的sql语句：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gcode">sql_<span class="hljs-number">0</span>=<span class="hljs-string">&quot;INSERT INTO student(name,sex,age,grade) VALUES (%s,%s,%s,%s)&quot;</span><br>sql=sql_<span class="hljs-number">0</span> <span class="hljs-meta">%</span> <span class="hljs-comment">(repr(name)</span>, repr<span class="hljs-comment">(sex)</span>,repr<span class="hljs-comment">(age)</span>,repr<span class="hljs-comment">(grade)</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>错误修正</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SyntaxError: Non-UTF-8 code starting with &#39;ï&#39; in file</title>
    <link href="/2022/09/05/SyntaxError-Non-UTF-8-code-starting-with-xef-in-file/"/>
    <url>/2022/09/05/SyntaxError-Non-UTF-8-code-starting-with-xef-in-file/</url>
    
    <content type="html"><![CDATA[<h3 id="错误原因："><a href="#错误原因：" class="headerlink" title="错误原因："></a>错误原因：</h3><p>python代码中出现了中文字符</p><h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><p>在python代码文件的第一行添加如下代码（随编码不同自行修改）：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta">#coding=utf-8</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>错误修正</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>阅读笔记——大道至简：软件工程实践者的思想</title>
    <link href="/2022/09/05/%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E5%A4%A7%E9%81%93%E8%87%B3%E7%AE%80%EF%BC%9A%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5%E8%80%85%E7%9A%84%E6%80%9D%E6%83%B3/"/>
    <url>/2022/09/05/%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E5%A4%A7%E9%81%93%E8%87%B3%E7%AE%80%EF%BC%9A%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5%E8%80%85%E7%9A%84%E6%80%9D%E6%83%B3/</url>
    
    <content type="html"><![CDATA[<p>　　提起“软件工程“一词，很多人都不会感觉到陌生，对编程有所了解的人可能会首先想到程序员以及无穷无尽、成百上千行的程序代码，而对于编程一无所知的人可能就会联想到“黑客”以及各种IT精英，给人一种很高大上的感觉。在报考大学专业之前，我也是属于第二种——对编程一无所知的人，抱有着每天玩弄电脑成为IT精英的态度报考了软件工程专业，结果到了大学才发现“软件工程”并不是玩电脑那么简单，也并没有玩游戏那么有趣，几乎每天都运行着“Dev-C++”、“eclipse”，编写着几百、几千乃至及万行的代码，在这些代码之间包含着你对每个问题的了解，蕴含着各种复杂的逻辑思维。我曾经对编写代码这种工作很反感，觉得它枯燥无味而且很复杂，曾经多次为了一个程序运行了几十次仍然无法通过测试而感到苦恼。最后，在老师的推荐下抱着试一试的态度读了《大道至简：软件工程实践者的思想》这本书，读完之后发现编程和做工程其实并没有那么复杂，正如书中所说：“做工程其实很简单，只是大家把它想复杂了。” </p><p>​        在读过这本书之前，我对于软件工程的理解仅限于编写程序，或者说我仅仅了解到了编程这一小部分，认为编程就是软件工程的全部。而对于编程，我也经常抱有应付的态度，自己并不愿意去思考程序中所蕴含的逻辑，常常对着之前老师发过的程序模板“照猫画虎”。在读过这本书之后我才发现自己对于软件工程的了解是多么片面。 </p><p>​       《大道至简：软件工程实践者的思想》这本书的语言平易近人、通俗易懂，经常使用古文典故来达到清晰易懂的效果。该书的第一章便引用愚公移山的典故阐明了编程的本质——即顺序、选择和循环，说明了“程序&#x3D;算法+结构+方法”，并告诉我们“编程并不是一种结果，而是一个过程”的道理；第二章作者引用“蜀守冰凿离堆”的故事告诉我们编写程序一定要懂得创新，不要总是照抄模板。通过阅读第三章，我对“团队”有了更深层次的认识，同时我也初次了解了什么是“项目经理”以及他的职能。在第四章中，我认识到了沟通的重要性，作为开发者，一定要学会与客户沟通，否则工作将很难进行。第五章中作者说明了编程的最终目的——解决问题，这个最终目的在我学习的过程中经常忽略，我常常是为了提交作业而编程，却忽略了它的最终目的。第六、七章中作者介绍了语言在工程中所扮演的角色；第八章作者介绍了工具的本质；第九、十章作者利用现实生活中的例子介绍了软件工程，让我对“软件工程”有了更深的了解。第十一章作者再次强调了自我思考的重要性，使我选择摒弃“照抄模板”的想法，懂得自我思考，自我创新。 </p><p>​         通过阅读本书我认识到了自己“懒于思考”的问题，更重要的是对软件工程有了更深层次的了解，增强了编程的兴趣，我相信，只要善于思考，乐于学习，一定会在“软工人”的道路上越走越远。</p>]]></content>
    
    
    
    <tags>
      
      <tag>学习感想</tag>
      
      <tag>阅读笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>决策树——泰坦尼克号</title>
    <link href="/2022/09/05/%E5%86%B3%E7%AD%96%E6%A0%91%E2%80%94%E2%80%94%E6%B3%B0%E5%9D%A6%E5%B0%BC%E5%85%8B%E5%8F%B7/"/>
    <url>/2022/09/05/%E5%86%B3%E7%AD%96%E6%A0%91%E2%80%94%E2%80%94%E6%B3%B0%E5%9D%A6%E5%B0%BC%E5%85%8B%E5%8F%B7/</url>
    
    <content type="html"><![CDATA[<h2 id="具体步骤："><a href="#具体步骤：" class="headerlink" title="具体步骤："></a>具体步骤：</h2><p>①导入相关扩展包</p><figure class="highlight capnproto"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs capnproto"><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split  <span class="hljs-comment"># 划分数据集</span><br><span class="hljs-keyword">from</span> sklearn.feature_extraction <span class="hljs-keyword">import</span> DictVectorizer  <span class="hljs-comment">#字典特征值提取</span><br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeClassifier  <span class="hljs-comment"># 决策树</span><br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> export_graphviz  <span class="hljs-comment"># 决策树可视化</span><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br></code></pre></td></tr></table></figure><p>②获取数据</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">titanic</span><span class="hljs-operator">=</span>pd.read_csv(<span class="hljs-string">&quot;./train.csv&quot;</span>)<br></code></pre></td></tr></table></figure><p>③筛选特征值和目标值</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">x</span>=titanic[[<span class="hljs-string">&quot;Pclass&quot;</span>,<span class="hljs-string">&quot;Age&quot;</span>,<span class="hljs-string">&quot;Sex&quot;</span>]]        <span class="hljs-comment">#特征值</span><br><span class="hljs-attr">y</span>=titanic[<span class="hljs-string">&quot;Survived&quot;</span>]                   <span class="hljs-comment">#目标值</span><br></code></pre></td></tr></table></figure><p>特征值：</p><p><img src="/../img/2090353-20211020201156397-803507249.png" alt="img"></p><p> 目标值：</p><p><img src="/../img/2090353-20211020201235012-687432401.png" alt="img"></p><p> ④转化为字典</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">x</span><span class="hljs-operator">=</span>x.to_dict(orient<span class="hljs-operator">=</span><span class="hljs-string">&quot;records&quot;</span>)<br></code></pre></td></tr></table></figure><p>转化结果：</p><p><img src="/../img/2090353-20211020202200493-1629382657.png" alt="img"></p><p> ⑤字典特征值抽取</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">transfer</span>=DictVectorizer()<br><span class="hljs-attr">x_train</span>=transfer.fit_transform(x_train)<br><span class="hljs-attr">x_test</span>=transfer.transform(x_test)<br></code></pre></td></tr></table></figure><p>⑥决策树预估器(estimator)</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">estimator = DecisionTreeClassifier(criterion=<span class="hljs-string">&quot;entropy&quot;</span>)  <span class="hljs-meta"># criterion默认为<span class="hljs-string">&#x27;gini&#x27;</span>系数，也可选择信息增益熵<span class="hljs-string">&#x27;entropy&#x27;</span></span><br>estimator.fit(x_train, y_train)  <span class="hljs-meta"># 调用fit()方法进行训练,()内为训练集的特征值与目标值</span><br></code></pre></td></tr></table></figure><p>⑦模型评估</p><p>方法一：直接对比真实值和预测值</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">y_predict = estimator.predict(x_test)  # 传入测试集特征值，预测所给测试集的目标值<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;y_predict:\n&quot;</span>, y_predict)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;直接对比真实值和预测值：\n&quot;</span>, y_test == y_predict)<br></code></pre></td></tr></table></figure><p>方法二：计算准确率</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">score</span> = estimator.score(x_test, y_test)  <span class="hljs-comment"># 传入测试集的特征值和目标值</span><br></code></pre></td></tr></table></figure><p>⑧决策树可视化</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">export<span class="hljs-constructor">_graphviz(<span class="hljs-params">estimator</span>, <span class="hljs-params">out_file</span>=<span class="hljs-string">&quot;titanic_tree.dot&quot;</span>, <span class="hljs-params">feature_names</span>=<span class="hljs-params">transfer</span>.<span class="hljs-params">get_feature_names</span>()</span>)<br></code></pre></td></tr></table></figure><p>主要代码：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs routeros">def titanic_demo():<br>    # 1.获取数据<br>    <span class="hljs-attribute">titanic</span>=pd.read_csv(&quot;./train.csv&quot;)<br><br>    # 2.筛选特征值和目标值<br>    <span class="hljs-attribute">x</span>=titanic[[<span class="hljs-string">&quot;Pclass&quot;</span>,<span class="hljs-string">&quot;Age&quot;</span>,<span class="hljs-string">&quot;Sex&quot;</span>]]        #特征值<br>    <span class="hljs-attribute">y</span>=titanic[<span class="hljs-string">&quot;Survived&quot;</span>]                   #目标值<br>    # <span class="hljs-built_in">print</span>(x.head())<br>    # <span class="hljs-built_in">print</span>(y.head())<br><br>    # 3.数据处理（缺失值处理，特征值——&gt;字典类型）<br>        #缺失值处理<br>    x[<span class="hljs-string">&quot;Age&quot;</span>].fillna(x[<span class="hljs-string">&quot;Age&quot;</span>].mean(),<span class="hljs-attribute">inplace</span>=<span class="hljs-literal">True</span>)<br>    # <span class="hljs-built_in">print</span>(x)<br>        #转换为字典<br>    <span class="hljs-attribute">x</span>=x.to_dict(orient=&quot;records&quot;)<br>    # <span class="hljs-built_in">print</span>(x)<br><br>    # 4.划分数据集<br>    x_train,x_test,y_train,<span class="hljs-attribute">y_test</span>=train_test_split(x,y,random_state=22)<br><br>    # 5.字典特征抽取<br>    <span class="hljs-attribute">transfer</span>=DictVectorizer()<br>    <span class="hljs-attribute">x_train</span>=transfer.fit_transform(x_train)<br>    <span class="hljs-attribute">x_test</span>=transfer.transform(x_test)<br><br>    # 6.决策树预估器(estimator)<br>    estimator = DecisionTreeClassifier(<span class="hljs-attribute">criterion</span>=<span class="hljs-string">&quot;entropy&quot;</span>)  # criterion默认为<span class="hljs-string">&#x27;gini&#x27;</span>系数，也可选择信息增益熵<span class="hljs-string">&#x27;entropy&#x27;</span><br>    estimator.fit(x_train, y_train)  # 调用fit()方法进行训练,()内为训练集的特征值与目标值<br><br>    # 7.模型评估<br>    # 方法一：直接对比真实值和预测值<br>    y_predict = estimator.predict(x_test)  # 传入测试集特征值，预测所给测试集的目标值<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;y_predict:\n&quot;</span>, y_predict)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;直接对比真实值和预测值：\n&quot;</span>, y_test == y_predict)<br><br>    # 方法二：计算准确率<br>    score = estimator.score(x_test, y_test)  # 传入测试集的特征值和目标值<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;准确率为：\n&quot;</span>, score)<br><br>    # 8.决策树可视化<br>    export_graphviz(estimator, <span class="hljs-attribute">out_file</span>=<span class="hljs-string">&quot;titanic_tree.dot&quot;</span>, <span class="hljs-attribute">feature_names</span>=transfer.get_feature_names())<br><br><br>    return None<br></code></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/../img/2090353-20211020204153382-770249907.png" alt="img"></p><p> 可视化结果（因图规模过大导致截图展示不完整）：</p><p><img src="/../img/2090353-20211020204315743-1885826451.png" alt="img"></p>]]></content>
    
    
    
    <tags>
      
      <tag>决策树</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>中文分词</title>
    <link href="/2022/09/05/%E4%B8%AD%E6%96%87%E5%88%86%E8%AF%8D/"/>
    <url>/2022/09/05/%E4%B8%AD%E6%96%87%E5%88%86%E8%AF%8D/</url>
    
    <content type="html"><![CDATA[<blockquote><p>中文分词并将结果存入数据库</p></blockquote><h2 id="核心步骤："><a href="#核心步骤：" class="headerlink" title="核心步骤："></a>核心步骤：</h2><ul><li>创建数据库连接</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_conn</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    获取连接和游标</span><br><span class="hljs-string">    :return:</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn=pymysql.connect(host=<span class="hljs-string">&quot;127.0.0.1&quot;</span>,<br>                         user=<span class="hljs-string">&quot;root&quot;</span>,<br>                         password=<span class="hljs-string">&quot;000000&quot;</span>,<br>                         db=<span class="hljs-string">&quot;news&quot;</span>,<br>                         charset=<span class="hljs-string">&quot;utf8&quot;</span>)<br>    cursor=conn.cursor()<br>    <span class="hljs-keyword">return</span> conn,cursor<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">close_conn</span>(<span class="hljs-params">conn, cursor</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    关闭连接和游标</span><br><span class="hljs-string">    :param conn:</span><br><span class="hljs-string">    :param cursor:</span><br><span class="hljs-string">    :return:</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> cursor:<br>        cursor.close()<br>    <span class="hljs-keyword">if</span> conn:<br>        conn.close()<br></code></pre></td></tr></table></figure><ul><li>读取文件</li></ul><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">fn = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;F:\\PyCharm\\newsProject\\file\\youxi.txt&#x27;</span>, <span class="hljs-string">&#x27;rt&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)  <span class="hljs-comment"># 打开文件</span><br>string_data = fn.<span class="hljs-built_in">read</span>()  <span class="hljs-comment"># 读出整个文件</span><br>fn.<span class="hljs-built_in">close</span>()  <span class="hljs-comment"># 关闭文件</span><br></code></pre></td></tr></table></figure><ul><li>文本预处理</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">pattern = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">u&#x27;\t|\n|\.|-|:|;|\)|\(|\?|&quot;&#x27;</span>)  <span class="hljs-comment"># 定义正则表达式匹配模式</span><br>string_data = re.sub(pattern, <span class="hljs-string">&#x27;&#x27;</span>, string_data)  <span class="hljs-comment"># 将符合模式的字符去除</span><br></code></pre></td></tr></table></figure><ul><li>文本分词</li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">seg_list_exact</span> = jieba.cut(string_data, cut_all=<span class="hljs-literal">False</span>)  <span class="hljs-comment"># 精确模式分词</span><br><span class="hljs-attr">object_list</span> = []<br></code></pre></td></tr></table></figure><ul><li>去除停用词（停用词文件：stopword.txt）</li></ul><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">remove_words = <span class="hljs-built_in">set</span>()<br>fr = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;F:\\PyCharm\\newsProject\\stopword\\stopword.txt&#x27;</span>, encoding = <span class="hljs-string">&#x27;UTF-8&#x27;</span>)<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">word</span> <span class="hljs-keyword">in</span> fr:<br>    remove_words.<span class="hljs-built_in">add</span>(str(<span class="hljs-built_in">word</span>).strip())<br>fr.<span class="hljs-built_in">close</span>()<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">word</span> <span class="hljs-keyword">in</span> seg_list_exact:  <span class="hljs-comment"># 循环读出每个分词</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">word</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> remove_words:  <span class="hljs-comment"># 如果不在去除词库中</span><br>        object_list.append(<span class="hljs-built_in">word</span>)  <span class="hljs-comment"># 分词追加到列表</span><br></code></pre></td></tr></table></figure><ul><li>词频统计并导入数据库</li></ul><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">word_counts = collections.<span class="hljs-constructor">Counter(<span class="hljs-params">object_list</span>)</span>  # 对分词做词频统计<br>word_counts_top10 = word_counts.most<span class="hljs-constructor">_common(100)</span>  # 获取前<span class="hljs-number">10</span>最高频的词<br>print(word_counts_top10)  # 输出检查<br>conn,course= get<span class="hljs-constructor">_conn()</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> word_counts_top10:<br>    sql=<span class="hljs-string">&quot;insert into result_game (name,values_data) values(%s,%s)&quot;</span><br>    course.execute(sql,i)<br>conn.commit<span class="hljs-literal">()</span><br>close<span class="hljs-constructor">_conn(<span class="hljs-params">conn</span>,<span class="hljs-params">course</span>)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>中文分词</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件测试核心要点</title>
    <link href="/2022/09/05/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E6%A0%B8%E5%BF%83%E8%A6%81%E7%82%B9/"/>
    <url>/2022/09/05/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E6%A0%B8%E5%BF%83%E8%A6%81%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<h2 id="软件测试介绍"><a href="#软件测试介绍" class="headerlink" title="软件测试介绍"></a>软件测试介绍</h2><p>软件测试目的：发现软件中的缺陷和错误。</p><ul><li>软件缺陷</li></ul><p>　　至少满足以下5个规则之一，才称为发生一个软件缺陷：</p><p>　　1.软件未实现产品说明书要求的功能——功能缺失</p><p>　　2.软件出现了产品说明书指明不应该出现的错误——错误、缺陷</p><p>　　3.软件实现了产品说明书未提到的功能——功能多余</p><p>　　4.软件未实现产品说明书虽未明确提及但应该实现的目标——对隐性需求的把握，同时发现需求遗漏 </p><p>　　5.软件难以理解，不易使用，运行缓慢——用户体验角度</p><p>软件产品规格说明书为什么是软件缺陷存在最多的地方？</p><ul><li>原因：<ul><li>软件产品还没有设计、开发、完全靠想象去描述系统的实现结果，所以有些特性还不够清晰</li><li>需求不断变换</li><li>对规格说明书不够重视</li><li>沟通不充分</li></ul></li></ul><p>软件测试根本目的：提高软件质量，降低软件风险</p><p>软件风险分为内部风险和外部风险。</p><p>内部风险：如在即将销售发现重大错误，延迟发布，失去市场机会</p><p>外部风险：产品上线后，用户发现问题，引起索赔、产生法律纠纷、客户拒绝支付费用、甚至失去客户的风险</p><p>软件测试关键：如何合理地设计测试用例</p><p>测试用例是为某个特殊目标而编制的一组测试输入、执行条件以及预期结果</p><p>软件测试不等于程序测试</p><p>回归测试：黑盒、白盒</p><p>冒烟测试：单元、集成、系统、验收</p><p>随机测试：功能、性能</p><p>黑盒测试：完全不考虑程序内部结构和内部特性的情况下进行。只要进行一些输入，就能得到某种输出结果。</p><p>白盒测试：软件测试员可以访问程序员的代码，并通过检查代码来协助测试</p><p><strong>静态测试</strong></p><ul><li>特点：<ul><li>不必运行程序</li><li>无需条件，易展开</li></ul></li><li>方法：<ul><li>代码审查（与设计的一致性、标准、可读性，表达式逻辑、结构合理性）</li><li>代码检查（与审查类似，但不如审查检查范围广）</li><li>桌面检查（阅读自己程序，效率低）</li><li>静态分析（借助于测试工具）</li><li>数据流、控制流、接口分析、表达式分析</li></ul></li></ul><h5 id="动态测试"><a href="#动态测试" class="headerlink" title="动态测试"></a>动态测试</h5><ul><li>特点<ul><li>要求在代码实现的前提下进行</li><li>运行被测试的程</li><li>要进行测试数据准备</li></ul></li><li>方法<ul><li>白盒测试</li><li>黑盒测试</li><li>灰盒测试</li></ul></li></ul><p>软件测试原则：</p><ul><li>尽早和及时的测试</li><li>准备好测试数据和预期结果</li><li>输入数据包括合理输入条件和不合理输入条件</li></ul><h2 id="软件需求验证"><a href="#软件需求验证" class="headerlink" title="软件需求验证"></a>软件需求验证</h2><h3 id="需求验证"><a href="#需求验证" class="headerlink" title="需求验证"></a>需求验证</h3><h4 id="需求验证概述"><a href="#需求验证概述" class="headerlink" title="需求验证概述"></a>需求验证概述</h4><ol><li>需求验证是软件需求的<strong>最后</strong>一个环节。</li><li>目标：尽可能发现存在的错误。</li><li>主要手段：需求评审</li><li>需求验证是专指在需求规格说明完成之后，对需求规格说明文档进行的验证活动。</li></ol><h4 id="需求验证方法"><a href="#需求验证方法" class="headerlink" title="需求验证方法"></a>需求验证方法</h4><p>需求验证的主要方法是评审。</p><h2 id="黑盒测试"><a href="#黑盒测试" class="headerlink" title="黑盒测试"></a>黑盒测试</h2><p>测试用例是为特定的目的而设计的一组测试输入、执行条件和预期的结果。测试用例是执行的最小实体。</p><p>测试用例设计要素：</p><ul><li>用例ID</li><li>用例概述：对该用例设计的目的进行描述</li><li>用例优先级</li><li>前置条件（可选）：用例必须满足的前提条件</li><li>操作步骤</li><li>测试数据</li><li>预期结果</li><li>备注（可选）</li><li>BUG-ID</li></ul><p>测试用例评审</p><ul><li>目的：确保用例更全面、结构更清晰、提高用例质量</li><li>评审时间：用例初步设计之后、全部用例完成之后</li></ul><p>黑盒测试目的</p><ul><li>检查程序功能能否按需求规格说明书的规定正常使用，测试各个功能是否有遗漏，检测性能等特性要求是否满足。</li><li>检测人机交互是否错误，检测数据结构或外部数据库访问是否错误，程序是否能适当地接收输入数据而产生正确的输出结果，并保持外部信息（如数据库或文件）的完整</li><li>检测程序初始化和终止方面的错误。</li></ul><p>优点：</p><ul><li>有针对性地寻找问题，并且定位问题更准确。</li><li>黑盒测试可以证明产品是否达到用户要求的功能，符合用户的工作要求。</li><li>能重复执行相同的动作，测试工作中最枯燥的部分可交由机器完成。</li></ul><p>缺点：</p><ul><li>需要充分了解产品用到的技术，测试人员需要具有较多经验。</li><li>在测试过程中很多是手工测试操作。</li><li>测试人员要负责大量文档、报表的编制和整理工作。</li></ul><p>静态黑盒测试：文档测试</p><p>动态黑盒测试：功能测试、验收测试、性能测试</p><h3 id="黑盒测试方法：PPT03"><a href="#黑盒测试方法：PPT03" class="headerlink" title="黑盒测试方法：PPT03"></a>黑盒测试方法：PPT03</h3><ul><li><p>等价类划分法</p><p>划分等价类：寻找输入条件、划分为多个等价类、形成互不相交子集</p></li></ul><p>例：</p><p><img src="/../img/2090353-20220516202626221-1756413933.png" alt="img"></p><p><img src="/../img/2090353-20220516202635992-1615740833.png" alt="img"></p><p><img src="/../img/2090353-20220516202648464-1839815070.png" alt="img"></p><h3 id="边界值分析"><a href="#边界值分析" class="headerlink" title="边界值分析"></a>边界值分析</h3><p>边界值分析法就是对输入或输出的边界值进行测试的一种黑盒测试方法。通常边界值分析法是作为对等价类划分法的补充，这种情况下，其测试用例来自等价类的边界</p><p>边界值分析法利用<strong>输入变量的最小值、略大于最小值、输入值域内的任意值、略小于最大值和最大值</strong>来设计测试用例</p><p>例：</p><p><img src="/../img/2090353-20220516203121080-393514117.png" alt="img"></p><p>等价类划分：</p><p><img src="/../img/2090353-20220516203127715-1805684740.png" alt="img"></p><p><img src="/../img/2090353-20220516203137472-652692340.png" alt="img"></p><p>边界值分析：</p><p><img src="/../img/2090353-20220516203147264-1416779506.png" alt="img"></p><h3 id="判定表测试"><a href="#判定表测试" class="headerlink" title="判定表测试"></a>判定表测试</h3><p>在所有的黑盒测试方法中，基于判定表的测试是最为严格、最具有逻辑性的测试方法。</p><p>判定表由4部分组成，即条件桩、动作桩、条件项、动作项，及规则。</p><ul><li>条件桩：条件</li><li>动作桩：问题规定可能采取的操作</li><li>条件项：条件下的取值</li><li>动作项：条件下采取的操作</li><li>规则：判定表中贯穿条件项和动作项的一列就是一条规则。</li></ul><blockquote><p>有n个条件的判定表有2的n次方个规则</p></blockquote><p>例：</p><p><img src="/../img/2090353-20220516203159338-146243009.png" alt="img"></p><h3 id="因果图"><a href="#因果图" class="headerlink" title="因果图"></a>因果图</h3><p>定义：利用图解法分析输入的各种组合情况，从而设计测试用例的方法</p><p><img src="/../img/2090353-20220516203208232-756791774.png" alt="img"></p><p>因果图中的4种基本关系</p><p>在因果图的基本符号中，图中的左结点ci表示输入状态（或称原因），右结点ei表示输出状态（或称结果）。ci 与 ei 取值0或1，0表示某状态不出现，1则表示某状态出现。</p><ul><li>恒等：若 c1 是1，则 e1 也为1，否则 e1 为0</li><li>非：若 c1 是1，则 e1 为0，否则e1为1</li><li>或：若 c1 或 c2 或 c3 是1，则 e1 为1，否则 e1 为0</li><li>与：若 c1 和 c2 都是1，则 e1 为1，否则 e1 为0</li></ul><p>因果图中的约束</p><p>在实际问题中输入状态相互之间、输出状态相互之间可能存在某些依赖关系，称为“约束”。对于输入条件的约束有E、I、O、R四种约束，对于输出条件的约束只有M约束。</p><ul><li>E约束(互斥)：原因a和原因b中最多有一个可能成立，即a和b不会同时成立。</li><li>I约束(包含)：a、b、c这三个原因中至少有一个必须成立。</li><li>O约束(唯一)：原因a和b有且仅有一个成立。</li><li>R约束(要求)：原因a出现时，原因b也必须出现。</li><li>M约束(强制)：若结果a为1，则结果b强制为0。当a为0，b的值不确定</li></ul><p><img src="/../img/2090353-20220516203222389-365686960.png" alt="img"></p><p>案例：</p><p><img src="/../img/2090353-20220516203231125-1208625057.png" alt="img"></p><p><img src="/../img/2090353-20220516203242648-1118355756.png" alt="img"></p><p><img src="/../img/2090353-20220516203252882-1427905807.png" alt="img"></p><p><img src="/../img/2090353-20220516203301157-722540377.png" alt="img"></p><h3 id="错误推测法"><a href="#错误推测法" class="headerlink" title="错误推测法"></a>错误推测法</h3><p>定义：列举出程序中所有可能有的错误和容易发生错误的特殊情况，根据他们选择测试用例。</p><h3 id="正交试验法"><a href="#正交试验法" class="headerlink" title="正交试验法"></a>正交试验法</h3><ul><li><strong>指标：</strong>通常把判断试验结果优劣的标准叫做试验的指标</li><li><strong>因子：</strong>影响实验指标的条件称为因子</li><li><strong>因子的状态：</strong>影响实验因子的条件</li></ul><p>案例：</p><p><img src="/../img/2090353-20220516203311293-1433169450.png" alt="img"></p><p><img src="/../img/2090353-20220516203320336-1437466812.png" alt="img"></p><p><img src="/../img/2090353-20220516203327942-376604768.png" alt="img"></p><h3 id="场景法"><a href="#场景法" class="headerlink" title="场景法"></a>场景法</h3><p>案例：</p><p><img src="/../img/2090353-20220516203339371-1099953136.png" alt="img"></p><p><img src="/../img/2090353-20220516203434365-1696765090.png" alt="img"></p><p><img src="/../img/2090353-20220516203443985-1154935360.png" alt="img"></p><p><img src="/../img/2090353-20220516203452273-285220403.png" alt="img"></p><p><img src="/../img/2090353-20220516203501892-928871466.png" alt="img"></p><h2 id="白盒测试"><a href="#白盒测试" class="headerlink" title="白盒测试"></a>白盒测试</h2><h3 id="基本路径测试"><a href="#基本路径测试" class="headerlink" title="基本路径测试"></a>基本路径测试</h3><p>根据程序的控制流图找出一个模块所需测试的基本路径，根据这些基本路径设计构造相应的测试用例。</p><p><img src="/../img/2090353-20220516203515970-1487482789.png" alt="img"></p><p>设计步骤：</p><ul><li>根据模块逻辑构造<strong>控制流图</strong>（如上图）</li><li>计算控制流图的<strong>环复杂度</strong></li><li>列出<strong>包含起始节点和终止节点的基本路径</strong></li><li>检查一下列出的基本路径数目<strong>是否超过</strong>控制流图的环复杂度</li><li>设计覆盖这些基本路径的测试用例</li></ul><p>环复杂度：用V(G)表示，用来衡量一个模块判定结构的复杂程度，在数量上表现为独立的路径条数，是需要测试的基本路径数目的上限</p><ul><li>计算公式：<ul><li>V(G) &#x3D;闭合区域的数目</li><li><strong>V(G) &#x3D;边的数目-节点的数目 + 2</strong></li></ul></li></ul><p>案例：</p><p><img src="/../img/2090353-20220516203525064-1121880078.png" alt="img"></p><p><img src="/../img/2090353-20220516203534152-255734333.png" alt="img"></p><p><img src="/../img/2090353-20220516203543250-984665675.png" alt="img"></p><p><img src="/../img/2090353-20220516203553336-1199385281.png" alt="img"></p><p><strong>采用白盒测试方法必须遵循以下几条原则，才能达到测试的目的：</strong></p><ul><li>保证一个模块中的所有独立路径<strong>至少被测试一次</strong>。</li><li>所有逻辑值均需测试真 (true) 和假 (false) 两种情况。</li><li>检查程序的内部数据结构，保证其结构的有效性。</li><li>在上下边界及可操作范围内运行所有循环。</li></ul><h2 id="白盒测试——覆盖测试"><a href="#白盒测试——覆盖测试" class="headerlink" title="白盒测试——覆盖测试"></a>白盒测试——覆盖测试</h2><h3 id="测试覆盖率"><a href="#测试覆盖率" class="headerlink" title="测试覆盖率"></a>测试覆盖率</h3><p>测试覆盖率：用于确定测试所执行到的覆盖项的百分比。其中的覆盖项是指作为测试基础的一个入口或属性，比如语句、分支、条件等。</p><p>$$<br>覆盖率&#x3D;至少被执行一次的item数&#x2F;item的总数<br>$$</p><blockquote><p>一个程序总代码为100行，使用测试用例运行一次，执行了75行代码，则代码覆盖率＝75％</p></blockquote><p>测试覆盖率包括功能点覆盖率和结构覆盖率。</p><ul><li>功能点覆盖率：用于表示软件已经实现的功能与软件需要实现的功能之间的比例关系。</li><li>结构覆盖率包括语句覆盖率、分支覆盖率、循环覆盖率、路径覆盖率等等。</li></ul><h3 id="逻辑覆盖法"><a href="#逻辑覆盖法" class="headerlink" title="逻辑覆盖法"></a>逻辑覆盖法</h3><p>根据覆盖目标的不同，逻辑覆盖又可分为语句覆盖、判定覆盖、条件覆盖、判定&#x2F;条件覆盖、组合覆盖和路径覆盖。</p><ul><li>语句覆盖：选择足够多的测试用例，使得程序中的<strong>每个可执行语句</strong>至少执行一次。</li><li>判定覆盖：通过执行足够的测试用例，使得程序中的<strong>每个判定</strong>至少都获得一次“真”值和“假”值， 也就是使程序中的每个取“真”分支和取“假”分支至少均经历一次，也称为“分支覆盖”。</li><li>条件覆盖：设计足够多的测试用例，使得程序中<strong>每个判定包含的每个条件的可能取值（真&#x2F;假）</strong>都至少满足一次。</li><li>判定&#x2F;条件覆盖：设计足够多的测试用例，使得程序中<strong>每个判定包含的每个条件的所有情况</strong>（真&#x2F;假）至少出现一次，并且<strong>每个判定本身的判定结果</strong>（真&#x2F;假）也至少出现一次。</li></ul><blockquote><p>满足判定&#x2F;条件覆盖的测试用例一定同时满足判定覆盖和条件覆盖。</p></blockquote><ul><li>组合覆盖：通过执行足够的测试用例，使得程序中每个判定的所有可能的条件取值组合都至少出现一次。</li></ul><blockquote><p>满足组合覆盖的测试用例一定满足判定覆盖、条件覆盖和判定&#x2F;条件覆盖。</p></blockquote><ul><li>路径覆盖：设计足够多的测试用例，要求覆盖程序中所有可能的路径。</li></ul><p><img src="/../img/2090353-20220516203629384-149500777.png" alt="img"></p><h4 id="语句覆盖"><a href="#语句覆盖" class="headerlink" title="语句覆盖"></a>语句覆盖</h4><p>优点：直观、简单，易自动化</p><p>缺点：发现错误能力很弱</p><h4 id="判定覆盖"><a href="#判定覆盖" class="headerlink" title="判定覆盖"></a>判定覆盖</h4><p>优点：发现错误能力比语句覆盖强</p><p>缺点：对<strong>复合条件判断</strong>，只判定整个最终结果，而忽略每个条件的取值情况，必然会遗漏部分测试路径。</p><h4 id="条件覆盖"><a href="#条件覆盖" class="headerlink" title="条件覆盖"></a>条件覆盖</h4><p>优点：发现错误的能力比语句覆盖强</p><p>缺点：条件覆盖不能保证判定覆盖，对复合条件，条件覆盖只能保证每个条件至少有一次为真，而不考虑所有的判定结果。</p><h4 id="判定条件覆盖"><a href="#判定条件覆盖" class="headerlink" title="判定条件覆盖"></a>判定条件覆盖</h4><p>$$<br>判定条件覆盖率&#x3D;条件操作数值或判定结果至少被评价一次的数量&#x2F;（条件操作数值总数+判定结果总数）<br>$$</p><h4 id="组合覆盖"><a href="#组合覆盖" class="headerlink" title="组合覆盖"></a>组合覆盖</h4><p>$$<br>组合覆盖率&#x3D;条件操作数值结果组合的数量&#x2F;条件操作数值总组合数<br>$$</p><h4 id="路径覆盖"><a href="#路径覆盖" class="headerlink" title="路径覆盖"></a>路径覆盖</h4><p>根据路径覆盖的基本思想，在满足组合覆盖的测试用例中<strong>修改其中一个测试用例</strong>，则可以实现路径覆盖。</p><p>满足路径覆盖的测试用例并不一定满足组合覆盖</p><blockquote><p>逻辑覆盖并不能真正做到无遗漏。</p></blockquote><h3 id="数据流测试"><a href="#数据流测试" class="headerlink" title="数据流测试"></a>数据流测试</h3><p>如果程序中某一语句i的执行能改变某程序变量V的值，则称V被语句i定义,可记作Def（V，i）。</p><p>如果某一语句j的执行<strong>引用</strong>了内存中变量V的值，则称变量V被语句j使用，可记作Use（V，j）。</p><p>案例：</p><p><img src="/../img/2090353-20220516203643734-1578892095.png" alt="img"></p><p><img src="/../img/2090353-20220516203651645-428783374.png" alt="img"></p><blockquote><p>给一个变量赋值时才算该变量被定义</p></blockquote><h3 id="最少测试用例数"><a href="#最少测试用例数" class="headerlink" title="最少测试用例数"></a>最少测试用例数</h3><p><img src="/../img/2090353-20220516203700716-1909194510.png" alt="img"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>常用的白盒测试方法包括<strong>基本路径测试、分支-条件测试和循环测试</strong>。</p><p>覆盖准则可以作为测试停止或&#x2F;和选取测试数据的标准。</p><p>基于控制流的覆盖准则是被工业界广泛采用的覆盖标准之一。按照覆盖率从低到高的顺序，基于控制流的覆盖准则包括语句覆盖、分支覆盖、条件覆盖、分支-条件覆盖和多条件覆盖。</p><h2 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h2><p>定义：是对软件基本组成单元进行的测试。是检验程序最小单位，即检查<strong>模块</strong>有无错误， 它是在编码完成后<strong>必须进行</strong>的测试工作。</p><p>目的：验证这段代码的行为是否与我们期望的一致。</p><p>步骤：编译运行程序（查看能否正确运行）→静态测试（检查代码是否符合规范）→动态测试（深入检查代码的正确性，容错性和边界值等）</p><h3 id="单元测试通过准则"><a href="#单元测试通过准则" class="headerlink" title="单元测试通过准则"></a>单元测试通过准则</h3><p>（1）功能与设计说明一致；</p><p>（2）性能达到软件设计指标；</p><p>（3）命名和编码符合规则；</p><p>（4）逻辑测试达到规定的覆盖率，若达不到规定指标，应在测试报告中给出合理解释；</p><p>（5）对发现的问题已进行修改并通过回归测试。</p><h3 id="单元测试主要任务"><a href="#单元测试主要任务" class="headerlink" title="单元测试主要任务"></a>单元测试主要任务</h3><p>单元测试针对每个程序的模块，主要测试如下5方面： 模块接口、局部数据结构、边界条件、路径测试和错误处理。</p><p>模块接口：</p><ul><li>对模块接口进行测试，检查进出程序单元的数据流是否正确。须在其它测试之前进行。</li></ul><blockquote><p>主要关注单元中的输入和输出。</p></blockquote><p>局部数据结构：</p><ul><li>测试模块内部的数据能否保持完整性，包括内部数据的内容、形式及相互关系不发生错误。</li></ul><p>路径测试：针对程序路径进行测试</p><p>边界条件：边界值分析法进行测试</p><p>出错处理：模块在工作中发生错误时，出错处理设施是否有效。</p><h3 id="单元测试执行过程"><a href="#单元测试执行过程" class="headerlink" title="单元测试执行过程"></a>单元测试执行过程</h3><ol><li>驱动模块：模拟被测试模块的上一级模块，相当于被测模块的主程序。</li><li>桩模块：模拟被测模块工作过程中所调用的模块。它们一般只进行很少的数据处理。</li><li>驱动模块、桩模块——案例</li></ol><p><img src="/../img/2090353-20220516203712630-1990832312.png" alt="img"></p><p><img src="/../img/2090353-20220516203734204-625465892.png" alt="img"></p><p> <img src="/../img/2090353-20220516203803580-681685902.png" alt="img"></p><p> <img src="/../img/2090353-20220516203809887-1062940393.png" alt="img"></p><h2 id="集成测试"><a href="#集成测试" class="headerlink" title="集成测试"></a>集成测试</h2><p>定义：集成测试又称组装测试，是在单元测试的基础上，将所有模块按照设计要求组装成 子系统或系统进行的测试活动。又称子系统测试、联合测试。</p><p>目的：确保各单元组合在一起后能够按既定意图协作运行，并确保增量的行为正确，所测试的内容包括单元间的接口以及集成后的功能。</p><p>集成测试需要考虑的问题：</p><ol><li>在把各个模块连接起来的时候，穿越模块接口的数据是否会丢失；</li><li>各个子功能组合起来，能否达到预期要求的父功能；</li><li>一个模块的功能是否会对另一个模块的功能产生不利的影响；</li><li>全局数据结构是否有问题</li><li>单个模块的误差积累起来，是否会放大，从而达到不可接受的程度。</li></ol><p>集成测试的层次：</p><ol><li>模块内集成测试。</li><li>子系统内集成测试：先测试子系统内的功能模块，然后将各个功能模块组合起来确认子系统的功能是否达到预期要求。</li><li>子系统间集成测试：测试的单元是子系统之间的接口。子系统是可单独运行的程序或进程。</li></ol><p>集成测试方法</p><ol><li>静态测试技术——针对概要设计的测试</li><li>动态测试技术——灰盒测试</li></ol><p>灰盒测试的优点：</p><ol><li>能够进行基于需求的测试和基于路径的覆盖测试。</li><li>可深入被测对象的内部，便于错误的识别分析和解决。</li><li>能够保证设计的黑盒测试用例的完整性，防止功能或功能组合的遗漏。</li><li>能够减小需求或设计不详细或不完整性对测试有效性造成影响。</li></ol><p>集成策略：</p><ol><li><p>非增量式集成策略：一步到位（适合小系统）</p><ul><li>优点：①方法简单 ②允许多测试人员同时并行工作，人力物力资源利用率较高。</li><li>缺点：①必须为每个模块准备相应的驱动模块和桩模块，测试成本较高 ②一旦集成后包含多种错误，难以纠正。</li></ul><blockquote><p>在非增量式集成测试时，应当确定关键模块，对这些关键模块及早进行测试。</p></blockquote></li><li><p>增量式集成策略：逐步实现</p><p>分类：</p><p>自顶向下增量式测试</p><ul><li>深度优先方式：首先集成在结构中的一个主控路径下的所有模块，主控路径的选择是任意的。</li><li>广度优先方式：首先沿着水平方向，把每一层中所有直接隶属于上一层的模块集成起来，直到底层。</li><li>优点：<ul><li>较早地验证了主要控制和判断点；</li><li>功能较早证实；</li><li>只需一个驱动；</li><li>支持故障隔离；</li></ul></li><li>缺点：<ul><li>桩的开发量大；</li><li>底层验证被推迟；</li><li>底层组件测试不充分；</li></ul></li></ul><p>自底向上增量式测试</p><ul><li>优点：<ul><li>对底层组件行为较早验证；</li><li>工作最初可以并行集成；</li><li>减少了桩的工作量；</li><li>能较好锁定软件故障所在位置；</li></ul></li><li>缺点：<ul><li>驱动的开发工作量大；</li><li>对高层的验证被推迟，设计上的错误不能被及时发现；</li></ul></li></ul><p>三明治增量式测试（混合增量式测试）</p><ul><li>优点：集合了自顶向下和自底向上两种策略的优点</li><li>缺点：中间层测试不充分</li><li>案例1：</li></ul><p><img src="/../img/2090353-20220516203830691-1262138159.png" alt="img"></p><p> <img src="/../img/2090353-20220516203840091-970036967.png" alt="img"></p></li></ol><ul><li>案例2</li></ul><p><img src="/../img/2090353-20220516203853849-1668356872.png" alt="img"></p><ul><li>案例3</li></ul><p><img src="/../img/2090353-20220516203903140-761176991.png" alt="img"></p><p>集成策略框图</p><p><img src="/../img/2090353-20220516203911255-182962395.png" alt="img"></p><h2 id="系统测试"><a href="#系统测试" class="headerlink" title="系统测试"></a>系统测试</h2><p>测试方法：黑盒测试</p><p>目的：发现软件与系统定义不符合或与之矛盾的地方，测试用例应根据需求分析说明书来设计，并在实际使用环境下运行</p><p>对象：项目级→软件（也可能包含硬件） 产品级→软件+硬件</p><p>系统测试的层次：</p><ol><li>用户层测试<ul><li>用户支持测试</li><li>用户界面测试</li><li>安全性测试</li><li>可维护测试</li></ul></li><li>应用层测试<ul><li>系统性能</li><li>系统可靠性、稳定性</li><li>版本兼容性</li><li>系统安装升级</li></ul></li><li>功能层测试</li><li>指标&#x2F;协议层测试</li></ol><h3 id="功能测试"><a href="#功能测试" class="headerlink" title="功能测试"></a>功能测试</h3><p>定义：功能测试是系统测试中最基本的测试。</p><p>分类：</p><ol><li>逻辑功能测试</li><li>界面测试</li><li>易用性测试</li><li>安装测试</li><li>兼容性测试</li></ol><h3 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h3><p>定义：保证系统发布后，产品的性能满足用户要求。</p><p>软件性能指标</p><ol><li>响应时间</li><li>并发用户数</li><li>吞吐量</li><li>资源占用率</li></ol><p>分类：</p><ol><li>一般性能测试：被测系统在正常的软硬件环境下运行，不向其施加任何压力的性能测试。</li><li>稳定性能测测：连续运行被测系统，检查系统运行时的稳定程度</li><li>负载测试：让被测系统在其能忍受的压力的极限范围之内连续运行，来测试系统的稳定性。</li><li>压力测试：通常持续不断地给被测系统增加压力，直到被测系统压垮为止，来测试系统所能承受的最大压力。</li></ol><h3 id="验收测试"><a href="#验收测试" class="headerlink" title="验收测试"></a>验收测试</h3><p>目的：确保软件系统可以正式投入运行。</p><p>α测试</p><ul><li>目的：评价软件产品的FLURPS（功能、局域化、可使用性、可靠性、性能和支持）。</li></ul><p>β测试：由软件的多个用户在一个或多个用户的实际使用环境下进行的测试。</p>]]></content>
    
    
    
    <tags>
      
      <tag>软件测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>全国疫情可视化展示</title>
    <link href="/2022/09/03/%E5%85%A8%E5%9B%BD%E7%96%AB%E6%83%85%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B1%95%E7%A4%BA/"/>
    <url>/2022/09/03/%E5%85%A8%E5%9B%BD%E7%96%AB%E6%83%85%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B1%95%E7%A4%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="一、全国疫情数据爬取"><a href="#一、全国疫情数据爬取" class="headerlink" title="一、全国疫情数据爬取"></a><strong>一、全国疫情数据爬取</strong></h2><p>1.数据表共有两个，分别为details和history，表结构如下：</p><p><img src="/../img/2090353-20210411154815824-8950330-16621759477641.png" alt="img"></p><p> <img src="/../img/2090353-20210411154855102-879433005-16621759477653.png" alt="img"></p><p> 2.爬取全国疫情数据代码如下：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><code class="hljs vim">import requests<br>import json<br>import time<br>import pymysql<br>import traceback<br><br>def get_details():<br>    url = <span class="hljs-string">&#x27;https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5&amp;callback=jQuery34102848205531413024_1584924641755&amp;_=1584924641756&#x27;</span><br>    headers =&#123;<br>            <span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3741.400 QQBrowser/10.5.3863.400&#x27;</span><br>        &#125;<br>    <span class="hljs-keyword">res</span> = requests.<span class="hljs-built_in">get</span>(url,headers=headers)<br>        #输出全部信息<br>        # <span class="hljs-keyword">print</span>(<span class="hljs-keyword">res</span>.text)<br>    response_data = json.loads(<span class="hljs-keyword">res</span>.text.replace(<span class="hljs-string">&#x27;jQuery34102848205531413024_1584924641755(&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)[:-<span class="hljs-number">1</span>])<br>    #输出这个字典的键值 dict_keys([<span class="hljs-string">&#x27;ret&#x27;</span>, <span class="hljs-string">&#x27;data&#x27;</span>])<span class="hljs-keyword">ret</span>是响应值，<span class="hljs-number">0</span>代表请求成功，data里是我们需要的数据<br>#     <span class="hljs-keyword">print</span>(response_data.<span class="hljs-built_in">keys</span>())<br>    <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;上面已经转化过一次字典，然后获取里面的data，因为data是字符串，所以需要再次转化字典</span><br>        <span class="hljs-keyword">print</span>(json.loads(reponse_data[<span class="hljs-string">&#x27;data&#x27;</span>]).<span class="hljs-built_in">keys</span>())<br>        结果：<br>        dict_keys([<span class="hljs-string">&#x27;lastUpdateTime&#x27;</span>, <span class="hljs-string">&#x27;chinaTotal&#x27;</span>, <span class="hljs-string">&#x27;chinaAdd&#x27;</span>, <span class="hljs-string">&#x27;isShowAdd&#x27;</span>, <span class="hljs-string">&#x27;showAddSwitch&#x27;</span>,<br>        <span class="hljs-string">&#x27;areaTree&#x27;</span>, <span class="hljs-string">&#x27;chinaDayList&#x27;</span>, <span class="hljs-string">&#x27;chinaDayAddList&#x27;</span>, <span class="hljs-string">&#x27;dailyNewAddHistory&#x27;</span>, <span class="hljs-string">&#x27;dailyHistory&#x27;</span>,<br>        <span class="hljs-string">&#x27;wuhanDayList&#x27;</span>, <span class="hljs-string">&#x27;articleList&#x27;</span>])<br>        lastUpdateTime是最新更新时间，chinaTotal是全国疫情总数，chinaAdd是全国新增数据，<br>        isShowAdd代表是否展示新增数据，showAddSwitch是显示哪些数据，areaTree中有全国疫情数据<br>    <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;</span><br>    areaTree_data = json.loads(response_data[<span class="hljs-string">&#x27;data&#x27;</span>])[<span class="hljs-string">&#x27;areaTree&#x27;</span>]<br>    temp=json.loads(response_data[<span class="hljs-string">&#x27;data&#x27;</span>])<br>#     <span class="hljs-keyword">print</span>(temp.<span class="hljs-built_in">keys</span>())<br>#     <span class="hljs-keyword">print</span>(areaTree_data[<span class="hljs-number">0</span>].<span class="hljs-built_in">keys</span>())<br>    <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;</span><br>    获取上一级字典里的areaTree<br>    然后查看里面中国键值<br>    <span class="hljs-keyword">print</span>(areaTree_data[<span class="hljs-number">0</span>].<span class="hljs-built_in">keys</span>())<br>    dict_keys([<span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-string">&#x27;today&#x27;</span>, <span class="hljs-string">&#x27;total&#x27;</span>, <span class="hljs-string">&#x27;children&#x27;</span>])<br>    name代表国家名称，today代表今日数据，total代表总数,children里有全国各地数据，我们需要获取全国各地数据，查看children数据<br>    <span class="hljs-keyword">print</span>(areaTree_data[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;children&#x27;</span>])<br>    这里面是<br>    name是地区名称，today是今日数据，total是总数，children是市级数据，<br>    我们通过这个接口可以获取每个地区的总数据。我们遍历这个列表，取出name，这个是省级的数据，还需要获取市级数据，<br>    需要取出name，children（市级数据）下的name、total(历史总数)下的<span class="hljs-keyword">confirm</span>、heal、dead，today(今日数据)下的<span class="hljs-keyword">confirm</span>（增加数），<br>    这些就是我们需要的数据<br>    <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;</span><br>        # <span class="hljs-keyword">print</span>(areaTree_data[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;children&#x27;</span>])<br>    #     <span class="hljs-keyword">for</span> province_data in areaTree_data[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;children&#x27;</span>]:<br>        #     <span class="hljs-keyword">print</span>(province_data)<br><br>    <span class="hljs-keyword">ds</span>= temp[<span class="hljs-string">&#x27;lastUpdateTime&#x27;</span>]<br>    details=[]<br>    <span class="hljs-keyword">for</span> pro_infos in areaTree_data[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;children&#x27;</span>]:<br>        province_name = pro_infos[<span class="hljs-string">&#x27;name&#x27;</span>]  # 省名<br>        <span class="hljs-keyword">for</span> city_infos in pro_infos[<span class="hljs-string">&#x27;children&#x27;</span>]:<br>            city_name = city_infos[<span class="hljs-string">&#x27;name&#x27;</span>]  # 市名<br>            <span class="hljs-keyword">confirm</span> = city_infos[<span class="hljs-string">&#x27;total&#x27;</span>][<span class="hljs-string">&#x27;confirm&#x27;</span>]#历史总数<br>            confirm_add = city_infos[<span class="hljs-string">&#x27;today&#x27;</span>][<span class="hljs-string">&#x27;confirm&#x27;</span>]#今日增加数<br>            heal = city_infos[<span class="hljs-string">&#x27;total&#x27;</span>][<span class="hljs-string">&#x27;heal&#x27;</span>]#治愈<br>            dead = city_infos[<span class="hljs-string">&#x27;total&#x27;</span>][<span class="hljs-string">&#x27;dead&#x27;</span>]#死亡<br>#             <span class="hljs-keyword">print</span>(<span class="hljs-keyword">ds</span>,province_name,city_name,<span class="hljs-keyword">confirm</span>,confirm_add,heal,dead)<br>            details.<span class="hljs-keyword">append</span>([<span class="hljs-keyword">ds</span>,province_name,city_name,<span class="hljs-keyword">confirm</span>,confirm_add,heal,dead])<br>    <span class="hljs-keyword">return</span> details<br><br>def get_history():<br>    url = <span class="hljs-string">&#x27;https://view.inews.qq.com/g2/getOnsInfo?name=disease_other&amp;callback=jQuery341026745307075030955_1584946267054&amp;_=1584946267055&#x27;</span><br>    headers =&#123;<br>        <span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3741.400 QQBrowser/10.5.3863.400&#x27;</span><br>    &#125;<br>    <span class="hljs-keyword">res</span> = requests.<span class="hljs-built_in">get</span>(url,headers=headers)<br>#     <span class="hljs-keyword">print</span>(<span class="hljs-keyword">res</span>.text)<br>    response_data = json.loads(<span class="hljs-keyword">res</span>.text.replace(<span class="hljs-string">&#x27;jQuery341026745307075030955_1584946267054(&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)[:-<span class="hljs-number">1</span>])<br>#     <span class="hljs-keyword">print</span>(response_data)<br>    data = json.loads(response_data[<span class="hljs-string">&#x27;data&#x27;</span>])<br>#     <span class="hljs-keyword">print</span>(data.<span class="hljs-built_in">keys</span>())<br>    chinaDayList = data[<span class="hljs-string">&#x27;chinaDayList&#x27;</span>]#历史记录<br>    chinaDayAddList = data[<span class="hljs-string">&#x27;chinaDayAddList&#x27;</span>]#历史新增记录<br>    <span class="hljs-keyword">history</span> = &#123;&#125;<br>    <span class="hljs-keyword">for</span> i in chinaDayList:<br>        <span class="hljs-keyword">ds</span> = <span class="hljs-string">&#x27;2021.&#x27;</span> + i[<span class="hljs-string">&#x27;date&#x27;</span>]#时间<br>        tup = time.strptime(<span class="hljs-keyword">ds</span>,<span class="hljs-string">&#x27;%Y.%m.%d&#x27;</span>)<br>        <span class="hljs-keyword">ds</span> = time.<span class="hljs-built_in">strftime</span>(<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>,tup)#改变时间格式，插入数据库<br>        <span class="hljs-keyword">confirm</span> = i[<span class="hljs-string">&#x27;confirm&#x27;</span>]<br>        suspect = i[<span class="hljs-string">&#x27;suspect&#x27;</span>]<br>        heal = i[<span class="hljs-string">&#x27;heal&#x27;</span>]<br>        dead = i[<span class="hljs-string">&#x27;dead&#x27;</span>]<br>        <span class="hljs-keyword">history</span>[<span class="hljs-keyword">ds</span>] = &#123;<span class="hljs-string">&#x27;confirm&#x27;</span>:<span class="hljs-keyword">confirm</span>,<span class="hljs-string">&#x27;suspect&#x27;</span>:suspect,<span class="hljs-string">&#x27;heal&#x27;</span>:heal,<span class="hljs-string">&#x27;dead&#x27;</span>:dead&#125;<br>    <span class="hljs-keyword">for</span> i in chinaDayAddList:<br>        <span class="hljs-keyword">ds</span> = <span class="hljs-string">&#x27;2021.&#x27;</span> + i[<span class="hljs-string">&#x27;date&#x27;</span>]#时间<br>        tup = time.strptime(<span class="hljs-keyword">ds</span>,<span class="hljs-string">&#x27;%Y.%m.%d&#x27;</span>)<br>        <span class="hljs-keyword">ds</span> = time.<span class="hljs-built_in">strftime</span>(<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>,tup)#改变时间格式，插入数据库<br>        confirm_add = i[<span class="hljs-string">&#x27;confirm&#x27;</span>]<br>        suspect_add = i[<span class="hljs-string">&#x27;suspect&#x27;</span>]<br>        heal_add = i[<span class="hljs-string">&#x27;heal&#x27;</span>]<br>        dead_add = i[<span class="hljs-string">&#x27;dead&#x27;</span>]<br>        <span class="hljs-keyword">history</span>[<span class="hljs-keyword">ds</span>].<span class="hljs-keyword">update</span>(&#123;<span class="hljs-string">&#x27;confirm_add&#x27;</span>:confirm_add,<span class="hljs-string">&#x27;suspect_add&#x27;</span>:suspect_add,<span class="hljs-string">&#x27;heal_add&#x27;</span>:heal_add,<span class="hljs-string">&#x27;dead_add&#x27;</span>:dead_add&#125;)<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">history</span><br><br>def get_conn():<br>    <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;</span><br>    :<span class="hljs-keyword">return</span>: 连接，游标<br>    <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;</span><br>    # 创建连接<br>    conn = pymysql.connect(host=<span class="hljs-string">&quot;127.0.0.1&quot;</span>,<br>                    user=<span class="hljs-string">&quot;root&quot;</span>,<br>                    password=<span class="hljs-string">&quot;417020&quot;</span>,<br>                    db=<span class="hljs-string">&quot;db&quot;</span>,<br>                    charset=<span class="hljs-string">&quot;utf8&quot;</span>)<br>    # 创建游标<br>    <span class="hljs-built_in">cursor</span> = conn.<span class="hljs-built_in">cursor</span>()  # 执行完毕返回的结果集默认以元组显示<br>    <span class="hljs-keyword">return</span> conn, <span class="hljs-built_in">cursor</span><br>def close_conn(conn, <span class="hljs-built_in">cursor</span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">cursor</span>:<br>        <span class="hljs-built_in">cursor</span>.<span class="hljs-keyword">close</span>()<br>    <span class="hljs-keyword">if</span> conn:<br>        conn.<span class="hljs-keyword">close</span>()<br><br>def update_details():<br>    <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;</span><br>    更新 details 表<br>    :<span class="hljs-keyword">return</span>:<br>    <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;</span><br>    <span class="hljs-built_in">cursor</span> = None<br>    conn = None<br>    <span class="hljs-keyword">try</span>:<br>        li = get_details()<br>        conn, <span class="hljs-built_in">cursor</span> = get_conn()<br>        sql = <span class="hljs-string">&quot;insert into details(update_time,province,city,confirm,confirm_add,heal,dead) values(%s,%s,%s,%s,%s,%s,%s)&quot;</span><br>        sql_query = <span class="hljs-string">&#x27;select %s=(select update_time from details order by id desc limit 1)&#x27;</span> #对比当前最大时间戳<br>        <span class="hljs-built_in">cursor</span>.<span class="hljs-keyword">execute</span>(sql_query,li[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>])<br>        <span class="hljs-keyword">if</span> not <span class="hljs-built_in">cursor</span>.fetchone()[<span class="hljs-number">0</span>]:<br>            <span class="hljs-keyword">print</span>(<span class="hljs-keyword">f</span><span class="hljs-string">&quot;&#123;time.asctime()&#125;开始更新最新数据&quot;</span>)<br>            <span class="hljs-keyword">for</span> item in li:<br>                <span class="hljs-built_in">cursor</span>.<span class="hljs-keyword">execute</span>(sql, item)<br>            conn.commit()  # 提交事务 <span class="hljs-keyword">update</span> <span class="hljs-keyword">delete</span> <span class="hljs-keyword">insert</span>操作<br>            <span class="hljs-keyword">print</span>(<span class="hljs-keyword">f</span><span class="hljs-string">&quot;&#123;time.asctime()&#125;更新最新数据完毕&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">print</span>(<span class="hljs-keyword">f</span><span class="hljs-string">&quot;&#123;time.asctime()&#125;已是最新数据！&quot;</span>)<br>    except:<br>        traceback.print_exc()<br>    <span class="hljs-keyword">finally</span>:<br>        close_conn(conn, <span class="hljs-built_in">cursor</span>)<br><br>        def insert_history():<br>            <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;</span><br>                插入历史数据<br>            :<span class="hljs-keyword">return</span>:<br>            <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;</span><br>            <span class="hljs-built_in">cursor</span> = None<br>            conn = None<br>            <span class="hljs-keyword">try</span>:<br>                dic = get_history()<br>                <span class="hljs-keyword">print</span>(<span class="hljs-keyword">f</span><span class="hljs-string">&quot;&#123;time.asctime()&#125;开始插入历史数据&quot;</span>)<br>                conn, <span class="hljs-built_in">cursor</span> = get_conn()<br>                sql = <span class="hljs-string">&quot;insert into history values(%s,%s,%s,%s,%s,%s,%s,%s,%s)&quot;</span><br>                <span class="hljs-keyword">for</span> <span class="hljs-keyword">k</span>, v in dic.<span class="hljs-built_in">items</span>():<br>                    # item 格式 &#123;<span class="hljs-string">&#x27;2021-01-13&#x27;</span>: &#123;<span class="hljs-string">&#x27;confirm&#x27;</span>: <span class="hljs-number">41</span>, <span class="hljs-string">&#x27;suspect&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;heal&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;dead&#x27;</span>: <span class="hljs-number">1</span>&#125;<br>                    <span class="hljs-built_in">cursor</span>.<span class="hljs-keyword">execute</span>(sql, [<span class="hljs-keyword">k</span>, v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;confirm&quot;</span>), v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;confirm_add&quot;</span>), v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;suspect&quot;</span>),<br>                                         v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;suspect_add&quot;</span>), v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;heal&quot;</span>), v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;heal_add&quot;</span>),<br>                                         v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;dead&quot;</span>), v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;dead_add&quot;</span>)])<br><br>                conn.commit()  # 提交事务 <span class="hljs-keyword">update</span> <span class="hljs-keyword">delete</span> <span class="hljs-keyword">insert</span>操作<br>                <span class="hljs-keyword">print</span>(<span class="hljs-keyword">f</span><span class="hljs-string">&quot;&#123;time.asctime()&#125;插入历史数据完毕&quot;</span>)<br>            except:<br>                traceback.print_exc()<br>            <span class="hljs-keyword">finally</span>:<br>                close_conn(conn, <span class="hljs-built_in">cursor</span>)<br><br>def insert_history():<br>    <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;</span><br>        插入历史数据<br>    :<span class="hljs-keyword">return</span>:<br>    <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;</span><br>    <span class="hljs-built_in">cursor</span> = None<br>    conn = None<br>    <span class="hljs-keyword">try</span>:<br>        dic = get_history()<br>        <span class="hljs-keyword">print</span>(<span class="hljs-keyword">f</span><span class="hljs-string">&quot;&#123;time.asctime()&#125;开始插入历史数据&quot;</span>)<br>        conn, <span class="hljs-built_in">cursor</span> = get_conn()<br>        sql = <span class="hljs-string">&quot;insert into history values(%s,%s,%s,%s,%s,%s,%s,%s,%s)&quot;</span><br>        <span class="hljs-keyword">for</span> <span class="hljs-keyword">k</span>, v in dic.<span class="hljs-built_in">items</span>():<br>            # item 格式 &#123;<span class="hljs-string">&#x27;2021-01-13&#x27;</span>: &#123;<span class="hljs-string">&#x27;confirm&#x27;</span>: <span class="hljs-number">41</span>, <span class="hljs-string">&#x27;suspect&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;heal&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;dead&#x27;</span>: <span class="hljs-number">1</span>&#125;<br>            <span class="hljs-built_in">cursor</span>.<span class="hljs-keyword">execute</span>(sql, [<span class="hljs-keyword">k</span>, v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;confirm&quot;</span>), v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;confirm_add&quot;</span>), v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;suspect&quot;</span>),<br>                                 v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;suspect_add&quot;</span>), v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;heal&quot;</span>), v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;heal_add&quot;</span>),<br>                                 v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;dead&quot;</span>), v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;dead_add&quot;</span>)])<br><br>        conn.commit()  # 提交事务 <span class="hljs-keyword">update</span> <span class="hljs-keyword">delete</span> <span class="hljs-keyword">insert</span>操作<br>        <span class="hljs-keyword">print</span>(<span class="hljs-keyword">f</span><span class="hljs-string">&quot;&#123;time.asctime()&#125;插入历史数据完毕&quot;</span>)<br>    except:<br>        traceback.print_exc()<br>    <span class="hljs-keyword">finally</span>:<br>        close_conn(conn, <span class="hljs-built_in">cursor</span>)<br><br>def update_history():<br>    <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;</span><br>    更新历史数据<br>    :<span class="hljs-keyword">return</span>:<br>    <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;</span><br>    <span class="hljs-built_in">cursor</span> = None<br>    conn = None<br>    <span class="hljs-keyword">try</span>:<br>        dic = get_history()<br>        <span class="hljs-keyword">print</span>(<span class="hljs-keyword">f</span><span class="hljs-string">&quot;&#123;time.asctime()&#125;开始更新历史数据&quot;</span>)<br>        conn, <span class="hljs-built_in">cursor</span> = get_conn()<br>        sql = <span class="hljs-string">&quot;insert into history values(%s,%s,%s,%s,%s,%s,%s,%s,%s)&quot;</span><br>        sql_query = <span class="hljs-string">&quot;select confirm from history where ds=%s&quot;</span><br>        <span class="hljs-keyword">for</span> <span class="hljs-keyword">k</span>, v in dic.<span class="hljs-built_in">items</span>():<br>            # item 格式 &#123;<span class="hljs-string">&#x27;2020-01-13&#x27;</span>: &#123;<span class="hljs-string">&#x27;confirm&#x27;</span>: <span class="hljs-number">41</span>, <span class="hljs-string">&#x27;suspect&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;heal&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;dead&#x27;</span>: <span class="hljs-number">1</span>&#125;<br>            <span class="hljs-keyword">if</span> not <span class="hljs-built_in">cursor</span>.<span class="hljs-keyword">execute</span>(sql_query, <span class="hljs-keyword">k</span>):<br>                <span class="hljs-built_in">cursor</span>.<span class="hljs-keyword">execute</span>(sql, [<span class="hljs-keyword">k</span>, v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;confirm&quot;</span>), v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;confirm_add&quot;</span>), v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;suspect&quot;</span>),<br>                                     v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;suspect_add&quot;</span>), v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;heal&quot;</span>), v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;heal_add&quot;</span>),<br>                                     v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;dead&quot;</span>), v.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;dead_add&quot;</span>)])<br>        conn.commit()  # 提交事务 <span class="hljs-keyword">update</span> <span class="hljs-keyword">delete</span> <span class="hljs-keyword">insert</span>操作<br>        <span class="hljs-keyword">print</span>(<span class="hljs-keyword">f</span><span class="hljs-string">&quot;&#123;time.asctime()&#125;历史数据更新完毕&quot;</span>)<br>    except:<br>        traceback.print_exc()<br>    <span class="hljs-keyword">finally</span>:<br>        close_conn(conn, <span class="hljs-built_in">cursor</span>)<br><br>update_history()<br>insert_history()<br>update_details()<br></code></pre></td></tr></table></figure><h2 id="二、完整项目代码"><a href="#二、完整项目代码" class="headerlink" title="二、完整项目代码"></a><strong>二、完整项目代码</strong></h2><h3 id="1-项目结构："><a href="#1-项目结构：" class="headerlink" title="1.项目结构："></a>1.项目结构：</h3><p><img src="/../img/2090353-20210411155248015-1336042747-16621759477655.png" alt="img"></p><h3 id="2-js文件"><a href="#2-js文件" class="headerlink" title="2.js文件"></a>2.<strong>js文件</strong></h3><h4 id="ec-center-js"><a href="#ec-center-js" class="headerlink" title="ec_center.js"></a><strong>ec_center.js</strong></h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">var ec_center=echarts.init(document.getElementById(<span class="hljs-string">&#x27;c2&#x27;</span>),&quot;dark&quot;);<br><br>var mydata=[&#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;上海&#x27;</span>,<span class="hljs-string">&#x27;value&#x27;</span>:<span class="hljs-number">318</span>&#125;,&#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;云南&#x27;</span>,<span class="hljs-string">&#x27;value&#x27;</span>:<span class="hljs-number">162</span>&#125;]<br><br>var ec_center_option=&#123;<br>    title:&#123;<br>        <span class="hljs-type">text</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>        subtext: <span class="hljs-string">&#x27;&#x27;</span>,<br>        x: <span class="hljs-string">&#x27;left&#x27;</span><br>    &#125;,<br>    tooltip:&#123;<br>        <span class="hljs-keyword">trigger</span>:<span class="hljs-string">&#x27;item&#x27;</span><br>    &#125;,<br>    //左侧小导航图标<br>    visualMap:&#123;<br>        <span class="hljs-keyword">show</span>:<span class="hljs-keyword">true</span>,<br>        x:<span class="hljs-string">&#x27;left&#x27;</span>,<br>        y:<span class="hljs-string">&#x27;bottom&#x27;</span>,<br>        textStyle:&#123;<br>            fontSize:<span class="hljs-number">8</span>,<br>        &#125;,<br>        splitList: [&#123;<span class="hljs-keyword">start</span>:<span class="hljs-number">1</span>,<span class="hljs-keyword">end</span>:<span class="hljs-number">9</span>&#125;,<br>            &#123;<span class="hljs-keyword">start</span>:<span class="hljs-number">10</span>,<span class="hljs-keyword">end</span>:<span class="hljs-number">99</span>&#125;,<br>            &#123;<span class="hljs-keyword">start</span>:<span class="hljs-number">100</span>,<span class="hljs-keyword">end</span>:<span class="hljs-number">999</span>&#125;,<br>            &#123;<span class="hljs-keyword">start</span>:<span class="hljs-number">1000</span>,<span class="hljs-keyword">end</span>:<span class="hljs-number">9999</span>&#125;,<br>            &#123;<span class="hljs-keyword">start</span>:<span class="hljs-number">1000000</span>&#125;],<br>        color:[<span class="hljs-string">&#x27;#8A3310&#x27;</span>,<span class="hljs-string">&#x27;#C64918&#x27;</span>,<span class="hljs-string">&#x27;#E55B25&#x27;</span>,<span class="hljs-string">&#x27;#F2AD92&#x27;</span>,<span class="hljs-string">&#x27;#F9DCD1&#x27;</span>]                <br>    &#125;,<br>    series:[&#123;<br>        <span class="hljs-type">name</span>:<span class="hljs-string">&#x27;累计确诊人数&#x27;</span>,<br>        <span class="hljs-keyword">type</span>:<span class="hljs-string">&#x27;map&#x27;</span>,<br>        mapType:<span class="hljs-string">&#x27;china&#x27;</span>,<br>        roam:<span class="hljs-keyword">false</span>,<br>        itemStyle:&#123;<br>            normal:&#123;<br>                borderWidth:<span class="hljs-number">.5</span>,//区域边框宽度<br>                borderColor:<span class="hljs-string">&#x27;#009fe8&#x27;</span>,//区域边框颜色<br>                areaColor:<span class="hljs-string">&#x27;#ffefd5&#x27;</span>,//区域颜色<br>            &#125;,<br>            emphasis:&#123;//鼠标划过地图高亮<br>                borderWidth:<span class="hljs-number">.5</span>,<br>                borderColor:<span class="hljs-string">&#x27;#4b0082&#x27;</span>,<br>                areaColor:&quot;#fff&quot;,<br>            &#125;<br>        &#125;,<br>        label:&#123;<br>            normal:&#123;<br>                <span class="hljs-keyword">show</span>:<span class="hljs-keyword">true</span>,<br>                fontSize:<span class="hljs-number">8</span>,<br>            &#125;,<br>            emphasis:&#123;<br>                <span class="hljs-keyword">show</span>:<span class="hljs-keyword">true</span>,<br>                fontSize:<span class="hljs-number">8</span>,<br>            &#125;<br>        &#125;,<br>        data:mydata//数据<br>    &#125;]<br>&#125;;<br>ec_center.setOption(ec_center_option)<br></code></pre></td></tr></table></figure><h4 id="controller-js"><a href="#controller-js" class="headerlink" title="controller.js:"></a><strong>controller.js:</strong></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">gettime</span>(<span class="hljs-params"></span>)&#123;<br>    $.<span class="hljs-title function_">ajax</span>(&#123;<br>        <span class="hljs-attr">url</span>:<span class="hljs-string">&quot;/time&quot;</span>,<br>        <span class="hljs-attr">timeout</span>:<span class="hljs-number">10000</span>,<br>        <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) &#123;<br>            $(<span class="hljs-string">&quot;#time&quot;</span>).<span class="hljs-title function_">html</span>(data)<br>            &#125;,<br>            <span class="hljs-attr">error</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">xhr,type,errorThrowm</span>)&#123;<br><br>            &#125;<br>    &#125;);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_c1_data</span>(<span class="hljs-params"></span>)&#123;<br>    $.<span class="hljs-title function_">ajax</span>(&#123;<br>        <span class="hljs-attr">url</span>:<span class="hljs-string">&quot;/c1&quot;</span>,<br>        <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) &#123;<br>            $(<span class="hljs-string">&quot;.num h1&quot;</span>).<span class="hljs-title function_">eq</span>(<span class="hljs-number">0</span>).<span class="hljs-title function_">text</span>(data.<span class="hljs-property">confirm</span>)<br>            $(<span class="hljs-string">&quot;.num h1&quot;</span>).<span class="hljs-title function_">eq</span>(<span class="hljs-number">1</span>).<span class="hljs-title function_">text</span>(data.<span class="hljs-property">suspect</span>)<br>            $(<span class="hljs-string">&quot;.num h1&quot;</span>).<span class="hljs-title function_">eq</span>(<span class="hljs-number">2</span>).<span class="hljs-title function_">text</span>(data.<span class="hljs-property">heal</span>)<br>            $(<span class="hljs-string">&quot;.num h1&quot;</span>).<span class="hljs-title function_">eq</span>(<span class="hljs-number">3</span>).<span class="hljs-title function_">text</span>(data.<span class="hljs-property">dead</span>)<br>        &#125;,<br>        <span class="hljs-attr">error</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">xhr,type,errorThrowm</span>)&#123;<br><br>        &#125;<br>    &#125;)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_c2_data</span>(<span class="hljs-params"></span>)&#123;<br>    $.<span class="hljs-title function_">ajax</span>(&#123;<br>        <span class="hljs-attr">url</span>:<span class="hljs-string">&quot;/c2&quot;</span>,<br>        <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) &#123;<br>            ec_center_option.<span class="hljs-property">series</span>[<span class="hljs-number">0</span>].<span class="hljs-property">data</span>=data.<span class="hljs-property">data</span><br>            ec_center.<span class="hljs-title function_">setOption</span>(ec_center_option)<br>        &#125;,<br>        <span class="hljs-attr">error</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">xhr,type,errorThrowm</span>)&#123;<br><br>        &#125;<br>    &#125;)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_l1_data</span>(<span class="hljs-params"></span>)&#123;<br>    $.<span class="hljs-title function_">ajax</span>(&#123;<br>        <span class="hljs-attr">url</span>:<span class="hljs-string">&quot;/l1&quot;</span>,<br>        <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) &#123;<br>            ec_left1_Option.<span class="hljs-property">xAxis</span>[<span class="hljs-number">0</span>].<span class="hljs-property">data</span>=data.<span class="hljs-property">day</span><br>            ec_left1_Option.<span class="hljs-property">series</span>[<span class="hljs-number">0</span>].<span class="hljs-property">data</span>=data.<span class="hljs-property">confirm</span><br>            ec_left1_Option.<span class="hljs-property">series</span>[<span class="hljs-number">1</span>].<span class="hljs-property">data</span>=data.<span class="hljs-property">suspect</span><br>            ec_left1_Option.<span class="hljs-property">series</span>[<span class="hljs-number">2</span>].<span class="hljs-property">data</span>=data.<span class="hljs-property">heal</span><br>            ec_left1_Option.<span class="hljs-property">series</span>[<span class="hljs-number">3</span>].<span class="hljs-property">data</span>=data.<span class="hljs-property">dead</span><br>            ec_left1.<span class="hljs-title function_">setOption</span>(ec_left1_Option)<br>        &#125;,<br>        <span class="hljs-attr">error</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">xhr,type,errorThrowm</span>)&#123;<br><br>        &#125;<br>    &#125;)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_l2_data</span>(<span class="hljs-params"></span>)&#123;<br>    $.<span class="hljs-title function_">ajax</span>(&#123;<br>        <span class="hljs-attr">url</span>:<span class="hljs-string">&quot;/l2&quot;</span>,<br>        <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) &#123;<br>            ec_left2_Option.<span class="hljs-property">xAxis</span>[<span class="hljs-number">0</span>].<span class="hljs-property">data</span>=data.<span class="hljs-property">day</span><br>            ec_left2_Option.<span class="hljs-property">series</span>[<span class="hljs-number">0</span>].<span class="hljs-property">data</span>=data.<span class="hljs-property">confirm_add</span><br>            ec_left2_Option.<span class="hljs-property">series</span>[<span class="hljs-number">1</span>].<span class="hljs-property">data</span>=data.<span class="hljs-property">suspect_add</span><br>            ec_left2.<span class="hljs-title function_">setOption</span>(ec_left2_Option)<br>        &#125;,<br>        <span class="hljs-attr">error</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">xhr,type,errorThrowm</span>)&#123;<br><br>        &#125;<br>    &#125;)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_r1_data</span>(<span class="hljs-params"></span>)&#123;<br>    $.<span class="hljs-title function_">ajax</span>(&#123;<br>        <span class="hljs-attr">url</span>:<span class="hljs-string">&quot;/r1&quot;</span>,<br>        <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) &#123;<br>            ec_right1_Option.<span class="hljs-property">xAxis</span>.<span class="hljs-property">data</span>=data.<span class="hljs-property">city</span>;<br>            ec_right1_Option.<span class="hljs-property">series</span>[<span class="hljs-number">0</span>].<span class="hljs-property">data</span>=data.<span class="hljs-property">confirm</span>;<br>            ec_right1.<span class="hljs-title function_">setOption</span>(ec_right1_Option);<br>        &#125;<br>    &#125;)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_r2_data</span>(<span class="hljs-params"></span>)&#123;<br>    $.<span class="hljs-title function_">ajax</span>(&#123;<br>        <span class="hljs-attr">url</span>:<span class="hljs-string">&quot;/r2&quot;</span>,<br>        <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) &#123;<br>            ec_right2_Option.<span class="hljs-property">xAxis</span>.<span class="hljs-property">data</span>=data.<span class="hljs-property">city</span>;<br>            ec_right2_Option.<span class="hljs-property">series</span>[<span class="hljs-number">0</span>].<span class="hljs-property">data</span>=data.<span class="hljs-property">confirm</span>;<br>            ec_right2.<span class="hljs-title function_">setOption</span>(ec_right2_Option);<br>        &#125;<br>    &#125;)<br>&#125;<br><span class="hljs-title function_">gettime</span>()<br><span class="hljs-title function_">get_c1_data</span>()<br><span class="hljs-title function_">get_c2_data</span>()<br><span class="hljs-title function_">get_l1_data</span>()<br><span class="hljs-title function_">get_l2_data</span>()<br><span class="hljs-title function_">get_r1_data</span>()<br><span class="hljs-title function_">get_r2_data</span>()<br><span class="hljs-comment">//setInterval(gettime,1000)</span><br><span class="hljs-comment">//setInterval(get_c1_data,1000)</span><br></code></pre></td></tr></table></figure><h4 id="ec-left1-js"><a href="#ec-left1-js" class="headerlink" title="ec_left1.js"></a>ec_left1.js</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">var</span> <span class="hljs-string">ec_left1</span> <span class="hljs-string">=</span> <span class="hljs-string">echarts.init(document.getElementById(&#x27;l1&#x27;),</span> <span class="hljs-string">&quot;dark&quot;</span><span class="hljs-string">);</span><br><span class="hljs-string">var</span> <span class="hljs-string">ec_left1_Option</span> <span class="hljs-string">=</span> &#123;<br>    <span class="hljs-attr">title:</span> &#123;<br>        <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;全国累计趋势&quot;</span>,<br>        <span class="hljs-attr">textStyle:</span> &#123;<br>            <span class="hljs-string">//color:&#x27;white&#x27;</span>,<br>        &#125;,<br>        <span class="hljs-attr">left:</span> <span class="hljs-string">&#x27;left&#x27;</span>,<br>    &#125;,<br>    <span class="hljs-attr">tooltip:</span> &#123;<br>        <span class="hljs-attr">trigger:</span> <span class="hljs-string">&#x27;axis&#x27;</span>,<br>        <span class="hljs-attr">axisPointer:</span> &#123;<br>            <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;line&#x27;</span>,<br>            <span class="hljs-attr">lineStyle:</span> &#123;<br>                <span class="hljs-attr">color:</span> <span class="hljs-string">&#x27;#7171C6&#x27;</span><br>            &#125;<br>        &#125;,<br>    &#125;,<br>    <span class="hljs-attr">legend:</span> &#123;<br>        <span class="hljs-attr">data:</span> [<span class="hljs-string">&quot;累计确诊&quot;</span>, <span class="hljs-string">&quot;现有疑似&quot;</span>, <span class="hljs-string">&quot;累积治愈&quot;</span>, <span class="hljs-string">&quot;累计死亡&quot;</span>],<br>        <span class="hljs-attr">left:</span> <span class="hljs-string">&quot;right&quot;</span><br>    &#125;,<br>    <span class="hljs-string">//图形位置</span><br>    <span class="hljs-attr">grid:</span> &#123;<br>        <span class="hljs-attr">left:</span> <span class="hljs-string">&#x27;4%&#x27;</span>,<br>        <span class="hljs-attr">right:</span> <span class="hljs-string">&#x27;6%&#x27;</span>,<br>        <span class="hljs-attr">bottom:</span> <span class="hljs-string">&#x27;4%&#x27;</span>,<br>        <span class="hljs-attr">top:</span> <span class="hljs-number">50</span>,<br>        <span class="hljs-attr">containLabel:</span> <span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">xAxis:</span> [&#123;<br>        <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;category&#x27;</span>,<br>        <span class="hljs-attr">data:</span> [<span class="hljs-string">&#x27;01.24&#x27;</span>, <span class="hljs-string">&#x27;01.25&#x27;</span>, <span class="hljs-string">&#x27;01.26&#x27;</span>]<br>    &#125;],<br>    <span class="hljs-attr">yAxis:</span> [&#123;<br>        <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;value&#x27;</span>,<br>        <span class="hljs-attr">axisLabel:</span> &#123;<br>            <span class="hljs-attr">show:</span> <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">color:</span> <span class="hljs-string">&#x27;white&#x27;</span>,<br>            <span class="hljs-attr">fontSize:</span> <span class="hljs-number">12</span>,<br>            <span class="hljs-attr">formatter:</span> <span class="hljs-string">function(value)</span> &#123;<br>                <span class="hljs-string">if</span> <span class="hljs-string">(value</span> <span class="hljs-string">&gt;=</span> <span class="hljs-number">1000</span><span class="hljs-string">)</span> &#123;<br>                    <span class="hljs-string">value</span> <span class="hljs-string">=</span> <span class="hljs-string">value</span> <span class="hljs-string">/</span> <span class="hljs-number">1000</span> <span class="hljs-string">+</span> <span class="hljs-string">&#x27;k&#x27;</span><span class="hljs-string">;</span><br>                &#125;<br>                <span class="hljs-string">return</span> <span class="hljs-string">value;</span><br>            &#125;<br>        &#125;,<br>        <span class="hljs-string">//y轴线设置显示</span><br>        <span class="hljs-attr">axisLine:</span> &#123;<br>            <span class="hljs-attr">show:</span> <span class="hljs-literal">true</span><br>        &#125;,<br>        <span class="hljs-string">//与x轴平行的线样式</span><br>        <span class="hljs-attr">splitLine:</span> &#123;<br>            <span class="hljs-attr">show:</span> <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">lineStyle:</span> &#123;<br>                <span class="hljs-attr">color:</span> <span class="hljs-string">&#x27;#17273B&#x27;</span>,<br>                <span class="hljs-attr">width:</span> <span class="hljs-number">1</span>,<br>                <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;solid&#x27;</span>,<br>            &#125;<br>        &#125;<br>    &#125;],<br>    <span class="hljs-attr">series:</span> [&#123;<br>        <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;累计确诊&quot;</span>,<br>        <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;line&#x27;</span>,<br>        <span class="hljs-attr">smooth:</span> <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">data:</span> [<span class="hljs-number">260</span>, <span class="hljs-number">406</span>, <span class="hljs-number">529</span>]<br>    &#125;, &#123;<br>        <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;现有疑似&quot;</span>,<br>        <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;line&#x27;</span>,<br>        <span class="hljs-attr">smooth:</span> <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">data:</span> [<span class="hljs-number">54</span>, <span class="hljs-number">37</span>, <span class="hljs-number">3935</span>]&#125;,<br>        &#123;<br>        <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;累积治愈&quot;</span>,<br>        <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;line&#x27;</span>,<br>        <span class="hljs-attr">smooth:</span> <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">data:</span> [<span class="hljs-number">25</span>, <span class="hljs-number">25</span>, <span class="hljs-number">25</span>]<br>    &#125;,&#123;<br>        <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;累计死亡&quot;</span>,<br>        <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;line&#x27;</span>,<br>        <span class="hljs-attr">smooth:</span> <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">data:</span> [<span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">17</span>]<br>    &#125;]<br>&#125;<span class="hljs-string">;</span><br><span class="hljs-string">ec_left1.setOption(ec_left1_Option)</span><br></code></pre></td></tr></table></figure><h4 id="ec-left2-js"><a href="#ec-left2-js" class="headerlink" title="ec_left2.js"></a>ec_left2.js</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">var</span> <span class="hljs-string">ec_left2</span> <span class="hljs-string">=</span> <span class="hljs-string">echarts.init(document.getElementById(&#x27;l2&#x27;),</span> <span class="hljs-string">&quot;dark&quot;</span><span class="hljs-string">);</span><br><span class="hljs-string">var</span> <span class="hljs-string">ec_left2_Option</span> <span class="hljs-string">=</span> &#123;<br>    <span class="hljs-attr">tooltip:</span> &#123;<br>        <span class="hljs-attr">trigger:</span> <span class="hljs-string">&#x27;axis&#x27;</span>,<br>        <span class="hljs-string">//指示器</span><br>        <span class="hljs-attr">axisPointer:</span> &#123;<br>            <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;line&#x27;</span>,<br>            <span class="hljs-attr">lineStyle:</span> &#123;<br>                <span class="hljs-attr">color:</span> <span class="hljs-string">&#x27;#7171C6&#x27;</span><br>            &#125;<br>        &#125;,<br>    &#125;,<br>    <span class="hljs-attr">legend:</span> &#123;<br>        <span class="hljs-attr">data:</span> [<span class="hljs-string">&#x27;新增确诊&#x27;</span>, <span class="hljs-string">&#x27;新增疑似&#x27;</span>],<br>        <span class="hljs-attr">left:</span> <span class="hljs-string">&quot;right&quot;</span><br>    &#125;,<br>    <span class="hljs-string">//标题样式</span><br>    <span class="hljs-attr">title:</span> &#123;<br>        <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;全国新增趋势&quot;</span>,<br>        <span class="hljs-attr">textStyle:</span> &#123;<br>             <span class="hljs-string">color:&#x27;yellow&#x27;</span>,<br>            <span class="hljs-attr">fontSize:</span> <span class="hljs-number">16</span><br>        &#125;,<br>        <span class="hljs-attr">left:</span> <span class="hljs-string">&#x27;left&#x27;</span><br>    &#125;,<br>    <span class="hljs-string">//图形位置</span><br>    <span class="hljs-attr">grid:</span> &#123;<br>        <span class="hljs-attr">left:</span> <span class="hljs-string">&#x27;4%&#x27;</span>,<br>        <span class="hljs-attr">right:</span> <span class="hljs-string">&#x27;6%&#x27;</span>,<br>        <span class="hljs-attr">bottom:</span> <span class="hljs-string">&#x27;4%&#x27;</span>,<br>        <span class="hljs-attr">top:</span> <span class="hljs-number">50</span>,<br>        <span class="hljs-attr">containLabel:</span> <span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">xAxis:</span> [&#123;<br>        <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;category&#x27;</span>,<br>        <span class="hljs-string">//x轴坐标点开始与结束点位置都不在最边缘</span><br>        <span class="hljs-string">//</span> <span class="hljs-attr">boundaryGap :</span> <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">data:</span> []<br>    &#125;],<br>    <span class="hljs-attr">yAxis:</span> [&#123;<br>        <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;value&#x27;</span>,<br>        <span class="hljs-string">//y轴字体设置</span><br><br>        <span class="hljs-string">//y轴线设置显示</span><br>        <span class="hljs-attr">axisLine:</span> &#123;<br>            <span class="hljs-attr">show:</span> <span class="hljs-literal">true</span><br>        &#125;,<br>        <span class="hljs-attr">axisLabel:</span> &#123;<br>            <span class="hljs-attr">show:</span> <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">color:</span> <span class="hljs-string">&#x27;white&#x27;</span>,<br>            <span class="hljs-attr">fontSize:</span> <span class="hljs-number">12</span>,<br>            <span class="hljs-attr">formatter:</span> <span class="hljs-string">function(value)</span> &#123;<br>                <span class="hljs-string">if</span> <span class="hljs-string">(value</span> <span class="hljs-string">&gt;=</span> <span class="hljs-number">1000</span><span class="hljs-string">)</span> &#123;<br>                    <span class="hljs-string">value</span> <span class="hljs-string">=</span> <span class="hljs-string">value</span> <span class="hljs-string">/</span> <span class="hljs-number">1000</span> <span class="hljs-string">+</span> <span class="hljs-string">&#x27;k&#x27;</span><span class="hljs-string">;</span><br>                &#125;<br>                <span class="hljs-string">return</span> <span class="hljs-string">value;</span><br>            &#125;<br>        &#125;,<br>        <span class="hljs-string">//与x轴平行的线样式</span><br>        <span class="hljs-attr">splitLine:</span> &#123;<br>            <span class="hljs-attr">show:</span> <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">lineStyle:</span> &#123;<br>                <span class="hljs-attr">color:</span> <span class="hljs-string">&#x27;#17273B&#x27;</span>,<br>                <span class="hljs-attr">width:</span> <span class="hljs-number">1</span>,<br>                <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;solid&#x27;</span>,<br>            &#125;<br>        &#125;<br>    &#125;],<br>    <span class="hljs-attr">series:</span> [&#123;<br>        <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;新增确诊&quot;</span>,<br>        <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;line&#x27;</span>,<br>        <span class="hljs-attr">smooth:</span> <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">data:</span> []<br>    &#125;, &#123;<br>        <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;新增疑似&quot;</span>,<br>        <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;line&#x27;</span>,<br>        <span class="hljs-attr">smooth:</span> <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">data:</span> []<br>    &#125;]<br>&#125;<span class="hljs-string">;</span><br><br><span class="hljs-string">ec_left2.setOption(ec_left2_Option)</span><br></code></pre></td></tr></table></figure><h4 id="ec-right1-js"><a href="#ec-right1-js" class="headerlink" title="ec_right1.js"></a>ec_right1.js</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">var</span> ec_right1=echarts.init(document.getElementById(<span class="hljs-string">&#x27;r1&#x27;</span>),<span class="hljs-string">&quot;dark&quot;</span>);<br><span class="hljs-keyword">var</span> ec_right1_Option=&#123;<br>    title:&#123;<br>        text:<span class="hljs-string">&quot;非湖北地区城市确诊TOP5&quot;</span>,<br>        textStyle:&#123;<br>            color:<span class="hljs-string">&#x27;white&#x27;</span>,<br>        &#125;,<br>        left:<span class="hljs-string">&#x27;left&#x27;</span>,<br>    &#125;,<br>      color:[<span class="hljs-string">&#x27;#3398DB&#x27;</span>],<br>        tooltip:&#123;<br>            trigger:<span class="hljs-string">&#x27;axis&#x27;</span>,<br>            axisPointer:&#123;<br>                <span class="hljs-keyword">type</span>:<span class="hljs-string">&#x27;shadow&#x27;</span>,               <br>            &#125;<br>        &#125;,<br>    xAxis:&#123;<br>        <span class="hljs-keyword">type</span>:<span class="hljs-string">&#x27;category&#x27;</span>,<br>        data:[<span class="hljs-string">&#x27;东莞&#x27;</span>,<span class="hljs-string">&#x27;珠海&#x27;</span>,<span class="hljs-string">&#x27;境外输入&#x27;</span>,<span class="hljs-string">&#x27;邢台&#x27;</span>,<span class="hljs-string">&#x27;南京&#x27;</span>]<br>    &#125;,<br>    yAxis:&#123;<br>        <span class="hljs-keyword">type</span>:<span class="hljs-string">&#x27;value&#x27;</span>,<br>    &#125;,<br>    series:[&#123;<br>        data:[<span class="hljs-number">99</span>,<span class="hljs-number">98</span>,<span class="hljs-number">96</span>,<span class="hljs-number">94</span>,<span class="hljs-number">93</span>],<br>        <span class="hljs-keyword">type</span>:<span class="hljs-string">&#x27;bar&#x27;</span>,<br>        barMaxWidth:<span class="hljs-string">&quot;50%&quot;</span><br>    &#125;]<br>&#125;;<br>ec_right1.setOption(ec_right1_Option)<br></code></pre></td></tr></table></figure><h4 id="ec-right2-js"><a href="#ec-right2-js" class="headerlink" title="ec_right2.js"></a>ec_right2.js</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">var</span> ec_right2=echarts.init(document.getElementById(<span class="hljs-string">&#x27;r2&#x27;</span>),<span class="hljs-string">&quot;dark&quot;</span>);<br><span class="hljs-keyword">var</span> ec_right2_Option=&#123;<br>    title:&#123;<br>        text:<span class="hljs-string">&quot;湖北地区城市确诊TOP5&quot;</span>,<br>        textStyle:&#123;<br>            color:<span class="hljs-string">&#x27;white&#x27;</span>,<br>        &#125;,<br>        left:<span class="hljs-string">&#x27;left&#x27;</span>,<br>    &#125;,<br>      color:[<span class="hljs-string">&#x27;#3398DB&#x27;</span>],<br>        tooltip:&#123;<br>            trigger:<span class="hljs-string">&#x27;axis&#x27;</span>,<br>            axisPointer:&#123;<br>                <span class="hljs-keyword">type</span>:<span class="hljs-string">&#x27;shadow&#x27;</span>,               <br>            &#125;<br>        &#125;,<br>    xAxis:&#123;<br>        <span class="hljs-keyword">type</span>:<span class="hljs-string">&#x27;category&#x27;</span>,<br>        data:[<span class="hljs-string">&#x27;东莞&#x27;</span>,<span class="hljs-string">&#x27;珠海&#x27;</span>,<span class="hljs-string">&#x27;境外输入&#x27;</span>,<span class="hljs-string">&#x27;邢台&#x27;</span>,<span class="hljs-string">&#x27;南京&#x27;</span>]<br>    &#125;,<br>    yAxis:&#123;<br>        <span class="hljs-keyword">type</span>:<span class="hljs-string">&#x27;value&#x27;</span>,<br>    &#125;,<br>    series:[&#123;<br>        data:[<span class="hljs-number">99</span>,<span class="hljs-number">98</span>,<span class="hljs-number">96</span>,<span class="hljs-number">94</span>,<span class="hljs-number">93</span>],<br>        <span class="hljs-keyword">type</span>:<span class="hljs-string">&#x27;bar&#x27;</span>,<br>        barMaxWidth:<span class="hljs-string">&quot;50%&quot;</span><br>    &#125;]<br>&#125;;<br>ec_right2.setOption(ec_right2_Option)<br></code></pre></td></tr></table></figure><blockquote><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">（其余<span class="hljs-keyword">js</span>文件需从Echarts官网下载）<br></code></pre></td></tr></table></figure></blockquote><h3 id="3-html文件"><a href="#3-html文件" class="headerlink" title="3.html文件"></a>3.html文件</h3><h4 id="main-html"><a href="#main-html" class="headerlink" title="main.html"></a>main.html</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>疫情监控<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../static/js/jquery-3.5.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../static/js/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../static/js/echarts.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../static/js/china.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../static/css/main.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>全国疫情实时追踪<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;time&quot;</span>&gt;</span>我是时间<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;l1&quot;</span>&gt;</span>我是左1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;l2&quot;</span>&gt;</span>我是左2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;c1&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;num&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>123<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;num&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>123<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;num&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>123<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;num&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>123<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;txt&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>累计确诊<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;txt&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>剩余疑似<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;txt&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>累计治愈<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;txt&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>累计死亡<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;c2&quot;</span>&gt;</span>我是中2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;r1&quot;</span>&gt;</span>我是右1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;r2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../static/js/ec_center.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../static/js/ec_left1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../static/js/ec_left2.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../static/js/ec_right1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../static/js/ec_right2.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../static/js/controller.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="4-py文件"><a href="#4-py文件" class="headerlink" title="4.py文件"></a>4.py文件</h3><h4 id="main-py"><a href="#main-py" class="headerlink" title="main.py"></a>main.py</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs ruby">from flask import Flask<br>from flask import request<br>from flask import render_template<br>from flask import jsonify<br>import utils<br>app = Flask(__name__)<br><br><span class="hljs-variable">@app</span>.route(<span class="hljs-string">&quot;/&quot;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello_world</span>():<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;main.html&quot;</span>)<br><br><span class="hljs-variable">@app</span>.route(<span class="hljs-string">&quot;/c1&quot;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_c1_data</span>():<br>    data=utils.get_c1_data()<br>    <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&quot;confirm&quot;</span><span class="hljs-symbol">:data</span>[<span class="hljs-number">0</span>],<span class="hljs-string">&quot;suspect&quot;</span><span class="hljs-symbol">:data</span>[<span class="hljs-number">1</span>],<span class="hljs-string">&quot;heal&quot;</span><span class="hljs-symbol">:data</span>[<span class="hljs-number">2</span>],<span class="hljs-string">&quot;dead&quot;</span><span class="hljs-symbol">:data</span>[<span class="hljs-number">3</span>]&#125;)<br><br><span class="hljs-variable">@app</span>.route(<span class="hljs-string">&quot;/c2&quot;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_c2_data</span>():<br>    res=[]<br>    <span class="hljs-keyword">for</span> tup <span class="hljs-keyword">in</span> utils.get_c2_data():<br>        print(tup)<br>        res.append(&#123;<span class="hljs-string">&quot;name&quot;</span><span class="hljs-symbol">:tup</span>[<span class="hljs-number">0</span>],<span class="hljs-string">&quot;value&quot;</span><span class="hljs-symbol">:int</span>(tup[<span class="hljs-number">1</span>])&#125;)<br>    <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&quot;data&quot;</span><span class="hljs-symbol">:res</span>&#125;)<br><br><span class="hljs-variable">@app</span>.route(<span class="hljs-string">&quot;/l1&quot;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_l1_data</span>():<br>    data=utils.get_l1_data()<br>    day,confirm,suspect,heal,dead=[],[],[],[],[]<br>    <span class="hljs-keyword">for</span> a,b,c,d,e <span class="hljs-keyword">in</span> <span class="hljs-symbol">data:</span><br>        day.append(a.strftime(<span class="hljs-string">&quot;%m-%d&quot;</span>))<br>        confirm.append(b)<br>        suspect.append(c)<br>        heal.append(d)<br>        dead.append(e)<br>    <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&quot;day&quot;</span><span class="hljs-symbol">:day</span>,<span class="hljs-string">&quot;confirm&quot;</span><span class="hljs-symbol">:confirm</span>,<span class="hljs-string">&quot;suspect&quot;</span><span class="hljs-symbol">:suspect</span>,<span class="hljs-string">&quot;heal&quot;</span><span class="hljs-symbol">:heal</span>,<span class="hljs-string">&quot;dead&quot;</span><span class="hljs-symbol">:dead</span>&#125;)<br><br><span class="hljs-variable">@app</span>.route(<span class="hljs-string">&quot;/l2&quot;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_l2_data</span>():<br>    data=utils.get_l2_data()<br>    day,confirm_add,suspect_add=[],[],[]<br>    <span class="hljs-keyword">for</span> a,b,c <span class="hljs-keyword">in</span> <span class="hljs-symbol">data:</span><br>        day.append(a.strftime(<span class="hljs-string">&quot;%m-%d&quot;</span>))<br>        confirm_add.append(b)<br>        suspect_add.append(c)<br>    <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&quot;day&quot;</span><span class="hljs-symbol">:day</span>,<span class="hljs-string">&quot;confirm_add&quot;</span><span class="hljs-symbol">:confirm_add</span>,<span class="hljs-string">&quot;suspect_add&quot;</span><span class="hljs-symbol">:suspect_add</span>&#125;)<br><br><span class="hljs-variable">@app</span>.route(<span class="hljs-string">&quot;/r1&quot;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_r1_data</span>():<br>    data=utils.get_r1_data()<br>    city=[]<br>    confirm=[]<br>    <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> <span class="hljs-symbol">data:</span><br>        city.append(k)<br>        confirm.append(int(v))<br>    <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&quot;city&quot;</span><span class="hljs-symbol">:city</span>,<span class="hljs-string">&quot;confirm&quot;</span><span class="hljs-symbol">:confirm</span>&#125;)<br>    <br><span class="hljs-variable">@app</span>.route(<span class="hljs-string">&quot;/r2&quot;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_r2_data</span>():<br>    data=utils.get_r2_data()<br>    city=[]<br>    confirm=[]<br>    <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> <span class="hljs-symbol">data:</span><br>        city.append(k)<br>        confirm.append(int(v))<br>    <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&quot;city&quot;</span><span class="hljs-symbol">:city</span>,<span class="hljs-string">&quot;confirm&quot;</span><span class="hljs-symbol">:confirm</span>&#125;)<br><br><span class="hljs-variable">@app</span>.route(<span class="hljs-string">&#x27;/ajax&#x27;</span>,methods=[<span class="hljs-string">&quot;get&quot;</span>,<span class="hljs-string">&quot;post&quot;</span>])<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index3</span>():<br>    name=request.values.get(<span class="hljs-string">&quot;name&quot;</span>)<br>    score=request.values.get(<span class="hljs-string">&quot;score&quot;</span>)<br>    print(f<span class="hljs-string">&quot;name:&#123;name&#125;,score:&#123;score&#125;&quot;</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;10000&quot;</span><br><br><span class="hljs-variable">@app</span>.route(<span class="hljs-string">&quot;/time&quot;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_time</span>():<br>    <span class="hljs-keyword">return</span> utils.get_time()<br><br><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(debug=True)<br></code></pre></td></tr></table></figure><h4 id="utils-py"><a href="#utils-py" class="headerlink" title="utils.py"></a>utils.py</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs stata">import time<br>import pymysql<br>def get_time():<br>    time_str=time.strftime(<span class="hljs-string">&quot;%Y&#123;&#125;%m&#123;&#125;%d&#123;&#125; %X&quot;</span>)<br>    <span class="hljs-keyword">return</span> time_str.<span class="hljs-keyword">format</span>(<span class="hljs-string">&quot;年&quot;</span>,<span class="hljs-string">&quot;月&quot;</span>,<span class="hljs-string">&quot;日&quot;</span>)<br><br>def get_conn():<br>    conn=pymysql.connect(host=<span class="hljs-string">&quot;127.0.0.1&quot;</span>,<br>                         user=<span class="hljs-string">&quot;root&quot;</span>,<br>                         password=<span class="hljs-string">&quot;417020&quot;</span>,<br>                         <span class="hljs-keyword">db</span>=<span class="hljs-string">&quot;db&quot;</span>,<br>                         charset=<span class="hljs-string">&quot;utf8&quot;</span>)<br>    cursor=conn.cursor()<br>    <span class="hljs-keyword">return</span> conn,cursor<br><br>def close_conn(conn,cursor):<br>    cursor.<span class="hljs-keyword">close</span>()<br>    conn.<span class="hljs-keyword">close</span>()<br><br>def <span class="hljs-keyword">query</span>(sql,*<span class="hljs-keyword">args</span>):<br>    conn,cursor=get_conn()<br>    cursor.execute(sql,<span class="hljs-keyword">args</span>)<br>    res=cursor.fetchall()<br>    close_conn(conn,cursor)<br>    <span class="hljs-keyword">return</span> res<br><br>def get_c1_data():<br>    sql=<span class="hljs-string">&quot;select sum(confirm),&quot;</span> \<br>        <span class="hljs-string">&quot;(select suspect from history order by ds desc limit 1),&quot;</span> \<br>        <span class="hljs-string">&quot;sum(heal),&quot;</span> \<br>        <span class="hljs-string">&quot;sum(dead) &quot;</span> \<br>        <span class="hljs-string">&quot;from details &quot;</span> \<br>        <span class="hljs-string">&quot;where update_time=(select update_time from details order by update_time desc limit 1)&quot;</span><br>    res=<span class="hljs-keyword">query</span>(sql)<br>    <span class="hljs-keyword">return</span> res[0]<br>def get_c2_data():<br>    sql = <span class="hljs-string">&quot;select province,sum(confirm) from details &quot;</span>\<br>          <span class="hljs-string">&quot;where update_time=(select update_time from details &quot;</span>\<br>          <span class="hljs-string">&quot;order by update_time desc limit 1) &quot;</span>\<br>          <span class="hljs-string">&quot;group by province&quot;</span><br>    res=<span class="hljs-keyword">query</span>(sql)<br>    <span class="hljs-keyword">return</span> res<br>    <br>def get_l1_data():<br>    sql=<span class="hljs-string">&quot;select ds,confirm,suspect,heal,dead from history&quot;</span><br>    res = <span class="hljs-keyword">query</span>(sql)<br>    <span class="hljs-keyword">return</span> res<br>    <br>def get_l2_data():<br>    sql=<span class="hljs-string">&quot;select ds,confirm_add,suspect_add from history&quot;</span><br>    res = <span class="hljs-keyword">query</span>(sql)<br>    <span class="hljs-keyword">return</span> res<br>    <br>def get_r1_data():<br>    sql=&#x27;SELECT city,<span class="hljs-keyword">confirm</span> FROM &#x27;\<br>        &#x27;(select city,<span class="hljs-keyword">confirm</span> from details &#x27;\<br>        &#x27;where update_time=(select update_time from details <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> update_time <span class="hljs-keyword">desc</span> limit 1) &#x27;\<br>        &#x27;and province not <span class="hljs-keyword">in</span> (<span class="hljs-string">&quot;湖北&quot;</span>,<span class="hljs-string">&quot;北京&quot;</span>,<span class="hljs-string">&quot;上海&quot;</span>,<span class="hljs-string">&quot;天津&quot;</span>,<span class="hljs-string">&quot;重庆&quot;</span>) &#x27;\<br>        &#x27;union all &#x27;\<br>        &#x27;select province <span class="hljs-keyword">as</span> city,<span class="hljs-built_in">sum</span>(<span class="hljs-keyword">confirm</span>) <span class="hljs-keyword">as</span> <span class="hljs-keyword">confirm</span> from details &#x27;\<br>        &#x27;where update_time=(select update_time from details <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> update_time <span class="hljs-keyword">desc</span> limit 1) &#x27;\<br>        &#x27;and province <span class="hljs-keyword">in</span> (<span class="hljs-string">&quot;北京&quot;</span>,<span class="hljs-string">&quot;上海&quot;</span>,<span class="hljs-string">&quot;天津&quot;</span>,<span class="hljs-string">&quot;重庆&quot;</span>) group <span class="hljs-keyword">by</span> province) <span class="hljs-keyword">as</span> a &#x27;\<br>        &#x27;<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">confirm</span> <span class="hljs-keyword">DESC</span> LIMIT 5&#x27;<br>    res = <span class="hljs-keyword">query</span>(sql)<br>    <span class="hljs-keyword">return</span> res<br><br>def get_r2_data():<br>    sql=&#x27;SELECT city,<span class="hljs-keyword">confirm</span> FROM &#x27;\<br>        &#x27;(select city,<span class="hljs-keyword">confirm</span> from details &#x27;\<br>        &#x27;where update_time=(select update_time from details <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> update_time <span class="hljs-keyword">desc</span> limit 1) &#x27;\<br>        &#x27;and province  <span class="hljs-keyword">in</span> (<span class="hljs-string">&quot;湖北&quot;</span>) &#x27;\<br>        &#x27;union all &#x27;\<br>        &#x27;select province <span class="hljs-keyword">as</span> city,<span class="hljs-built_in">sum</span>(<span class="hljs-keyword">confirm</span>) <span class="hljs-keyword">as</span> <span class="hljs-keyword">confirm</span> from details &#x27;\<br>        &#x27;where update_time=(select update_time from details <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> update_time <span class="hljs-keyword">desc</span> limit 1) &#x27;\<br>        &#x27;and province <span class="hljs-keyword">in</span> (<span class="hljs-string">&quot;北京&quot;</span>,<span class="hljs-string">&quot;上海&quot;</span>,<span class="hljs-string">&quot;天津&quot;</span>) group <span class="hljs-keyword">by</span> province) <span class="hljs-keyword">as</span> a &#x27;\<br>        &#x27;<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">confirm</span> <span class="hljs-keyword">DESC</span> LIMIT 5&#x27;<br>    res = <span class="hljs-keyword">query</span>(sql)<br>    <span class="hljs-keyword">return</span> res<br>    <br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&quot;__main__&quot;</span>:<br><br>    <span class="hljs-keyword">print</span>(get_r1_data())<br>    <span class="hljs-keyword">print</span>(get_l1_data())<br>    <span class="hljs-keyword">print</span>(get_l2_data())<br></code></pre></td></tr></table></figure><h2 id="最终实现效果展示"><a href="#最终实现效果展示" class="headerlink" title="最终实现效果展示"></a>最终实现效果展示</h2><blockquote><p>（更新于2022年3月28日，由于数据爬取时间原因，与官方数据相比可能存在误差）：</p></blockquote><p><img src="/../img/2090353-20220328182438162-689703151-16621759477657.png" alt="img"></p><p> <strong>官方数据：</strong></p><p><img src="/../img/2090353-20220328182623697-1820504674-16621759477659.png" alt="img"></p>]]></content>
    
    
    
    <tags>
      
      <tag>疫情分析</tag>
      
      <tag>爬虫</tag>
      
      <tag>echarts</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QTP功能测试</title>
    <link href="/2022/09/03/QTP%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <url>/2022/09/03/QTP%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1 id="一、前言（课设目的及内容）"><a href="#一、前言（课设目的及内容）" class="headerlink" title="一、前言（课设目的及内容）"></a>一、前言（课设目的及内容）</h1><p>QTP是quicktest Professional的简称，是一种自动测试工具。使用QTP的目的是想用它来执行重复的手动测试，主要是用于回归测试和测试同一软件的新版本。因此你在测试前要考虑好如何对应用程序进行测试，例如要测试那些功能、操作步骤、输入数据和期望的输出数据等</p><h2 id="1-1-测试目的"><a href="#1-1-测试目的" class="headerlink" title="1.1   测试目的"></a>1.1   测试目的</h2><p>（1）  使学生能掌握网站功能测试的基本思路和方法，学会使用自动化测试工具QTP进行功能测试；</p><p>（2）  培养学生分析、解决问题的能力；</p><p>（3）  提高学生的创新思维能力与动手能力；</p><p>（4）  提高学生的科技论文写作能力。</p><h2 id="1-2-测试内容"><a href="#1-2-测试内容" class="headerlink" title="1.2 测试内容"></a>1.2 测试内容</h2><p>QTP进行功能测试的测试流程的五个步骤：</p><p>1.制定测试计划</p><p>自动测试的测试计划是根据被测项目的具体需求，以及所使用的测试工具而制定的，完全用于指导测试全工程。</p><p>2.创建测试脚本</p><p>当测试人员浏览站点或在应用程序上操作的时候，QTP的自动录制机制能够将测试人员的每一个操作步骤及被操作的对象记录下来，自动生成测试脚本语句。</p><p>3.增强测试脚本的功能</p><p>录制脚本只是为了实现创建或者设计脚本的第一步，基本的脚本录制完毕后，测试人员可以根据需要增加一些扩展功能，QTP允许测试人员通过在脚本中增加或更改测试步骤来修正或自定义测试流程。</p><p>4.运行测试</p><p>QTP从脚本的第一行开始执行语句，运行过程中会对设置的检查点进行验证，用实际数据代替参数值，并给出相应的输出结构信息。测试过程中测试人员还可以调试自己的脚本，直到脚本完全符合要求。</p><p>5.分析测试</p><p>运行结束后系统会自动生成一份详细完整的测试结果报告。<br>二、测试计划及测试需求</p><h2 id="2-1-测试原理分析"><a href="#2-1-测试原理分析" class="headerlink" title="2.1 测试原理分析"></a>2.1 测试原理分析</h2><p>QTP主要采用的是使用GUI模拟人的操作。它在模拟人的操作时会记录操作的对象及所做的操作和顺序，然后在回放时按记录顺序操作这些对象。而在这个模拟的过程中，最重要的莫过于界面对象（控件）的识别。</p><p>例如，在“用户名输入框”中输入“a用户”，伪代码如下：<br>WebEdit(“用户名输入框”).Set “a用户”，下面分析这个测试原理。</p><p>首先，QTP会通过“用户名输入框”这个名字到对象库的对象名中查找；</p><p>然后通过找到的对象名，找到对象名映射的属性包；</p><p>接着QTP就会通过这个属性包来匹配页面上的控件的属性，如果在页面上找到一个唯一与此属性包匹配的控件，那QTP就会认为此控件为要找的控件；</p><p>最后QTP根据“WebEdit”来确定控件的类型，并调用QTP对于此类控件内置的操作方法“Set”把“a用户”赋予了控件。</p><p>至于其他控件的识别和操作，基本原理和上面一样。</p><h2 id="2-2测试流程图"><a href="#2-2测试流程图" class="headerlink" title="2.2测试流程图"></a>2.2测试流程图</h2><p>根据测试原理的分析以及QTP测试的基本步骤可以设计如图2-1的测试流程图。</p><p> <img src="/../img/2090353-20220513094101515-1070407113-16621756129811.png" alt="img"></p><p>​       图2-1 测试流程图</p><p>·2.3 测试计划设计</p><p>根据测试原理分析与测试思想设计，设计如图2-2所示的测试过程计划流程图。</p><p><img src="/../img/2090353-20220513094154405-1628762981-16621756129813.png" alt="img"></p><p>图2-2 测试计划流程图</p><h2 id="2-4-测试需求分析"><a href="#2-4-测试需求分析" class="headerlink" title="2.4 测试需求分析"></a>2.4 测试需求分析</h2><p>对于一个网站系统，其链接的正确性和各个功能模块的功能实现的准确性是其测试的关键性环节。同时在最短的时间内开发出需求分析中的网站系统的软件产品，以最快的速度能先于其他竞争对手占领软件市场，从而获取最大的利益，所以测试速度也是至关重要的。</p><p>传统的软件测试是靠人进行手工测试，也就是现在各个公司的主流方法，我们称之为Manual test。测试部门每天都要计算在某个项目上Charge多少个人。这样的测试耗费时间、人力、物力以及成本。自动化测试的目的就是尽可能的减少在测试上的人力和财力的开销，以最便捷省时省事的方法完成同样的任务。</p><p>因此以QTP自动化测试工具对网站的链接正确性检查和各个功能模块的功能实现的准确性测试能够在满足测试需求的前提下加快测试进度。</p><h2 id="2-5-测试环境搭建"><a href="#2-5-测试环境搭建" class="headerlink" title="2.5 测试环境搭建"></a>2.5 测试环境搭建</h2><p>操作系统：Windows 10</p><p>语言：中文</p><p>浏览器：IE浏览器</p><p>网络：宽带连接</p><p>网站：<a href="http://127.0.0.1:5000/newstype">http://127.0.0.1:5000/newstype</a></p><p>软件：QuickTest Professional</p><p>其他软件需求：Microsoft Visio2007和Microsoft Word2016</p><p>三、测试用例的设计</p><h2 id="3-1-登录与注册测试用例"><a href="#3-1-登录与注册测试用例" class="headerlink" title="3.1 登录与注册测试用例"></a>3.1 登录与注册测试用例</h2><p>(1).注册测试用例设计如表3-1所示：</p><p>表3-1注册测试用例</p><table><thead><tr><th>前置条件</th><th>输入数据</th><th>预期结果</th><th>实际结果</th></tr></thead><tbody><tr><td>输入姓名：</td><td>小明</td><td>注册成功</td><td>注册成功</td></tr><tr><td>输入电话：</td><td>154567327890</td><td></td><td></td></tr><tr><td>输入密码：</td><td>******</td><td></td><td></td></tr></tbody></table><p>(2). 登录测试用例如表3-2所示：</p><p>表3-2 登录测试用例</p><table><thead><tr><th>前置条件</th><th>输入数据</th><th>预期结果</th><th>实际结果</th></tr></thead><tbody><tr><td>已注册用户</td><td></td><td>登录成功</td><td>登录成功</td></tr><tr><td>输入电话：</td><td>154567327890</td><td></td><td></td></tr><tr><td>输入密码：</td><td>******</td><td></td><td></td></tr></tbody></table><h2 id="3-2-查看新闻的测试用例"><a href="#3-2-查看新闻的测试用例" class="headerlink" title="3.2 查看新闻的测试用例"></a>3.2 查看新闻的测试用例</h2><p>(1). 查看新闻的测试用例如表3-3所示：</p><p>表3-3 查看新闻的测试用例</p><table><thead><tr><th>前置条件</th><th>输入数据</th><th>预期结果</th><th>实际结果</th></tr></thead><tbody><tr><td>点击想要查看的新闻类别</td><td>点击对应新闻类别链接</td><td>进入对应类别的新闻列表页面</td><td>进入对应类别的新闻列表页面</td></tr><tr><td>点击想要查看的新闻</td><td>点击对应新闻链接</td><td>进入对应新闻详情页面</td><td>进入对应新闻详情页面</td></tr></tbody></table><h2 id="3-3-关闭新闻返回新闻咨询页面的测试用例"><a href="#3-3-关闭新闻返回新闻咨询页面的测试用例" class="headerlink" title="3.3 关闭新闻返回新闻咨询页面的测试用例"></a>3.3 关闭新闻返回新闻咨询页面的测试用例</h2><p>(1). 关闭新闻返回新闻咨询页面的测试用例如表3-4所示：</p><p>表3-4 关闭新闻返回新闻咨询页面的测试用例</p><table><thead><tr><th>前置条件</th><th>输入数据</th><th>预期结果</th><th>实际结果</th></tr></thead><tbody><tr><td>关闭新闻详情页面</td><td>点击关闭页面按钮</td><td>新闻详情页面关闭进入新闻列表页面</td><td>新闻详情页面关闭进入新闻列表页面</td></tr><tr><td>点击导航栏中的“新闻首页”</td><td>点击导航栏中“新闻首页”链接</td><td>进入新闻咨询页面</td><td>进入新闻咨询页面</td></tr></tbody></table><h2 id="3-4-脚本"><a href="#3-4-脚本" class="headerlink" title="3.4 脚本"></a>3.4 脚本</h2><p>SBrowser(“Accordion Slider”).Page(“Accordion Slider”).Link(“登录|注册”).Click</p><p>Browser(“Accordion Slider”).Page(“注册或登录”).WebEdit(“WebEdit”).Set “15297323390”</p><p>Browser(“Accordion Slider”).Page(“注册或登录”).WebEdit(“WebEdit_2”).SetSecure “627c7a0e614001379ef301f87ebc5b3ea454”</p><p>Browser(“Accordion Slider”).Page(“注册或登录”).WebButton(“登录”).Drag 137,142</p><p>Browser(“Accordion Slider”).Page(“注册或登录”).WebButton(“登录”).Drop 137,142</p><p>Browser(“Accordion Slider”).Page(“Accordion Slider_2”).Link(“新闻资讯”).Click</p><p>Browser(“Accordion Slider”).Page(“新闻资讯”).Link(“旅游”).Click</p><p>Browser(“Accordion Slider”).Page(“旅游”).Link(“最火五一小长假将来临！这三座热门城市就别去了，火车票已秒光”).Click</p><p>Browser(“Accordion Slider”).Page(“旅游_2”).Link(“新闻首页”).Click</p><p>Browser(“Accordion Slider”).Page(“新闻资讯”).Link(“返回首页”).Click</p><h1 id="四、测试过程"><a href="#四、测试过程" class="headerlink" title="四、测试过程"></a>四、测试过程</h1><h2 id="4-1开始录制脚本："><a href="#4-1开始录制脚本：" class="headerlink" title="4.1开始录制脚本："></a>4.1开始录制脚本：</h2><p>点击打开QTP，创建一个Blank Test；</p><p> <img src="/../img/2090353-20220513094239504-1037138058-16621756129815.png" alt="img"></p><p> 　　　　　　　　　　　　　图4-1 创建空白测试</p><p>点击Record来录制一个脚本：</p><p> <img src="/../img/2090353-20220513094326174-221197351-16621756129817.png" alt="img"></p><p>　　　　　　　　　　　　图4-2 开始录制脚本</p><p>点击“确定”后进入新闻网站主页：</p><p> <img src="/../img/2090353-20220513094343711-24348268-16621756129819.png" alt="img"></p><p>　　　　　　　　　　　　图4-3 进入新闻网站主页</p><p>然后进入用户登录页面，如下图所示：</p><p> <img src="/../img/2090353-20220513094357427-1581079608-166217561298211.png" alt="img"></p><p>　　　　　　　　　　　　图4-4 进入用户登录页面</p><p>输入用户名和密码后，进入网站首页：</p><p> <img src="/../img/2090353-20220513094456351-2066260157-166217561298213.png" alt="img"></p><p>　　　　　　　　　　　　图4-5 进入网站首页</p><p>点击新闻资讯，进入新闻类别页面：</p><p> <img src="/../img/2090353-20220513094554304-1202620497-166217561298215.png" alt="img"></p><p> 　　　　　　　　　　　图4-6 新闻类别界面</p><p>点击想要查看的新闻类别进入新闻列表页面：</p><p> <img src="/../img/2090353-20220513094632432-244872926-166217561298217.png" alt="img"></p><p> 　　　　　　　　　　　图4-7 新闻列表界面</p><p>点击新闻链接进入新闻详情界面：</p><p> <img src="/../img/2090353-20220513094720466-797501180-166217561298219.png" alt="img"></p><p>　　　　　　　　　　　　 图4-8 新闻详情界面</p><p>返回新闻首页：</p><p> <img src="/../img/2090353-20220513094752505-1750372953-166217561298221.png" alt="img"></p><p> 　　　　　　　　　　　图4-9 返回新闻首页</p><p>进入QTP的Keyword视图：</p><p> <img src="/../img/2090353-20220513094922701-774495374-166217561298223.png" alt="img"></p><p>　　　　　　　　　　图4-10 进入QTP的Keyword视图</p><p>而下图是其Expert View（Expert就是代码视图，一般编写脚本都在这个区域）：</p><p> <img src="/../img/2090353-20220513094952301-993805214-166217561298225.png" alt="img"></p><p> 　　　　　　　　　图4-11进入QTP的Expert视图</p><h2 id="4-2-回放录制脚本："><a href="#4-2-回放录制脚本：" class="headerlink" title="4.2 回放录制脚本："></a>4.2 回放录制脚本：</h2><p>录制完成后，点击按钮，由于没有加入检查点，故而结果都是Done，出现如下图：</p><p> <img src="/../img/2090353-20220513095051779-1129550280-166217561298227.png" alt="img"></p><p> 　　　　　　　　　　　图4-12 脚本回放完成界面</p><h2 id="4-3-加入检查点"><a href="#4-3-加入检查点" class="headerlink" title="4.3 加入检查点"></a>4.3 加入检查点</h2><p>下面加入检查点，在用户页面的输入用户名时加入一个检查点，以检查输入的用户名是否正确：，</p><p> <img src="/../img/2090353-20220513095111654-757802340-166217561298229.png" alt="img"></p><p> 　　　　　　　　　　　图4-13 在用户名处加入检查点</p><p>然后设置检查点属性，检查点插入位置设为后，检查点超时设为2））：</p><p> <img src="/../img/2090353-20220513095130074-636747558-166217561298231.png" alt="img"></p><p>　　　　　　　　　　　　　　图4-14 设置检查点属性</p><p>插入检查点后效果：</p><p> <img src="/../img/2090353-20220513095146298-1674035012-166217561298333.png" alt="img"></p><p> 　　　　　　　　　　　图4-15 插入检查点后效果</p><p>Expert View：</p><p> <img src="/../img/2090353-20220513095202047-1249280818-166217561298335.png" alt="img"></p><p> 　　　　　　　　　图4-16 插入检查点后的Expert视图</p><h2 id="4-4-重新运行脚本"><a href="#4-4-重新运行脚本" class="headerlink" title="4.4 重新运行脚本"></a>4.4 重新运行脚本</h2><p>再次点击按钮，得到结果如下：</p><p> <img src="/../img/2090353-20220513095215623-933466238-166217561298337.png" alt="img"></p><p> 　　　　　　　　　　　图4-17 脚本回放完成界面</p><p>两个结果都是Passed，表示都通过了，功能验证测试完成。<br>五、测试结果分析</p><p>本次实验主要利用QTP的检查点功能来测试登录时输入用户名功能。在开始设置检查点的时候，我开始将检查点放在了输入用户名之前，导致用户名还没有输入就进行检查，所以一直失败，后来发现检查点位置放错了，应该放在输入用户名之后，修改之后测试通过。</p><p> <img src="/../img/2090353-20220513095236837-1411401006-166217561298339.png" alt="img"></p><p> 　　　　　　　　　　　　　图5-1 测试通过界面</p><h1 id="六、课设小结及心得体会"><a href="#六、课设小结及心得体会" class="headerlink" title="六、课设小结及心得体会"></a>六、课设小结及心得体会</h1><p>QTP是一款非常强大自动化测试工具，它的用途非常广泛，各项功能如对象库，同步点，检查点等也非常好用。通过本次的课程设计，使我对软件测试这门课程有了一个更加深入的了解，尤其是相对于小学期之前来说，使用QTP进行功能测试熟练了很多，尤其是插入检查点这一环节，之前做实验时对这一环节并没有完全理解，所以在这次测试过程中卡在了插入检查点这一环节，测试一直不通过，后来通过网上查找资料以及查看学习通的视频才对这一环节完全理解，测试过程中除了插入检查点之外，基本没有出现其他问题。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>软件过程与管理核心要义</title>
    <link href="/2022/09/01/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%AE%A1%E7%90%86%E6%A0%B8%E5%BF%83%E8%A6%81%E4%B9%89/"/>
    <url>/2022/09/01/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%AE%A1%E7%90%86%E6%A0%B8%E5%BF%83%E8%A6%81%E4%B9%89/</url>
    
    <content type="html"><![CDATA[<h2 id="概论"><a href="#概论" class="headerlink" title="概论"></a>概论</h2><ol><li><p>软件工程三要素</p><ol><li>过程</li><li>方法</li><li>工具</li></ol></li><li><p>软件过程的定义</p><blockquote><p><strong>软件过程</strong>是用于软件开发及维护的一系列<strong>活动、方法及实践</strong>。</p></blockquote></li><li><p>常见软件过程分类（五大类）</p><ol><li>客户-供应商过程：内部直接影响到客户、外部直接影响开发、向客户交付软件以及软件正确操作与使用的过程。</li><li>工程过程：软件系统、产品的定义、设计、实现以及维护的过程。</li><li>支持过程</li><li>管理过程：整个软件生命周期中为工程过程、支持过程和客户-供应商过程的实践活动提供指导、跟踪和监控的过程。</li><li>组织过程</li></ol></li><li><p>常见软件过程（主要列举管理过程）</p><ol><li>项目管理：计划、跟踪和协调项目执行及生产所需资源的管理过程。（主要关注时间、成本）</li><li>质量管理：对项目产品和服务的质量加以管理，从而获得最大的客户满意度。（主要关注质量）</li><li>风险管理：整个项目的生命周期中对风险不断的识别、诊断和分析，回避风险、降低风险或消除风险，并在项目以及组织层次上建立有效的风险管理机制。</li><li>子合同管理：选择合格的子合同商并对其进行管理的过程。</li></ol></li></ol><p><img src="/../img/image-20220521161238773.png" alt="image-20220521161238773"></p><h2 id="软件质量管理"><a href="#软件质量管理" class="headerlink" title="软件质量管理"></a>软件质量管理</h2><h3 id="软件质量"><a href="#软件质量" class="headerlink" title="软件质量"></a>软件质量</h3><ol><li>定义：软件质量是软件产品满足明确或隐含需要能力的性能和特性的总体。</li></ol><h3 id="ISO-x2F-IEC-9126"><a href="#ISO-x2F-IEC-9126" class="headerlink" title="ISO&#x2F;IEC 9126"></a>ISO&#x2F;IEC 9126</h3><ol><li>软件质量度量模型的组成：<ol><li>软件质量特性</li><li>软件质量子特性</li><li>软件质量度量评价标准</li></ol></li><li>六个一级质量特性<ol><li>功能性</li><li>可靠性</li><li>易用性</li><li>效率</li><li>可维护性</li><li>可移植性</li></ol></li><li>一级特性对应的二级特性（选择题）</li></ol><p><img src="/../img/image-20220521171203683.png" alt="image-20220521171203683"></p><h3 id="朱兰质量管理三部曲"><a href="#朱兰质量管理三部曲" class="headerlink" title="朱兰质量管理三部曲"></a>朱兰质量管理三部曲</h3><ol><li>质量计划：确定项目应达到的质量标准，以及如何满足质量标准的计划安排和方法。<ol><li>质量成本：为达到产品或服务质量而付出所有努力的总成本。<ul><li>预防成本</li><li>评价成本</li><li>失效成本</li></ul></li></ol></li><li>质量保证：确保项目达到有关标准而开展的有计划、有组织的工作活动。<ol><li>正规的质量评价：质量审计</li><li>总结性的质量评价：质量改进</li></ol></li><li>质量控制：确定项目结果与质量标准是否相符，并及时纠正产品缺陷的过程。<ol><li>静态方法：审计</li><li>动态方法：测试</li></ol></li></ol><h2 id="软件项目管理"><a href="#软件项目管理" class="headerlink" title="软件项目管理"></a><strong>软件项目管理</strong></h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><ol><li><p>项目：项目是为完成某一独特的<strong>产品</strong>、<strong>服务</strong>或<strong>成果</strong>所做的<strong>一次性</strong>努力。</p></li><li><p>项目管理：项目管理就是在项目活动中运用相关知识, 技能, 工具和技术满足项目的要求。</p></li><li><p>项目管理的五大过程组：启动、计划、执行、控制和收尾。</p></li><li><p>项目管理的十大知识领域：</p><ol><li>项目集成管理</li><li>项目范围管理</li><li>项目时间管理</li><li>项目成本管理</li><li>项目质量管理</li><li>项目人力资源管理</li><li>项目沟通管理</li><li>项目风险管理</li><li>项目采购管理</li><li>项目相关利益者管理</li></ol></li></ol><h3 id="可行性分析"><a href="#可行性分析" class="headerlink" title="可行性分析"></a>可行性分析</h3><ol><li><p>可行性分析——净现值</p><ol><li>定义：净现值是成本效益分析的有力工具之一。</li><li>优点：<ul><li>适用性强，能基本满足项目年限相同的互斥投资方案决策。</li><li>能灵活地考虑投资风险。</li></ul></li></ol></li></ol><h3 id="识别软件项目的活动"><a href="#识别软件项目的活动" class="headerlink" title="识别软件项目的活动"></a>识别软件项目的活动</h3><ol><li>WBS：WBS是面向可交付成果的对项目任务的分组,它组织并定义了整个项目范围。它是一个分级的树型结构，是对项目由粗到细的分解过程。</li></ol><h3 id="软件工作量估计方法"><a href="#软件工作量估计方法" class="headerlink" title="软件工作量估计方法"></a>软件工作量估计方法</h3><ol><li>算法模型</li><li>专家判断</li><li>类比</li><li>自顶向下</li><li>自底向上</li></ol><h3 id="软件项目的进度安排"><a href="#软件项目的进度安排" class="headerlink" title="软件项目的进度安排"></a>软件项目的进度安排</h3><ol><li><p>甘特图</p><ol><li>缺点：无法描述任务的逻辑关系</li></ol></li><li><p><strong>关键路径法（CPM）</strong></p><ol><li><p>定义</p><ul><li>关键路径：项目网络图中花费时间最长的活动路线叫做关键路径。</li><li>关键活动；组成关键路径的活动。</li><li>关键路径法的缺点：关键路径法中的活动周期是确定的，固定不变的，这与现实不太符合。</li></ul></li><li><p>关键路径的特点：</p><ul><li>关键路径上活动持续时间总和是项目的工期。</li><li>关键路径上任何一个活动的延迟都会导致整个项目完工时间延迟。</li><li>关键路径是相对的，也是变化的，非关键路径可能变为关键路径，关键路径也可能变为非关键路径。</li></ul></li><li><p>计算</p><ul><li><p>核心：正向求最早开始时间和最早结束时间，二者取大作为最早开始时间；反向求最晚开始时间和最晚结束时间，二者取小作为最晚结束时间。</p></li><li><p>$$<br>自由时差（空闲缓冲期）&#x3D;后续活动的最早开始时间-当前活动的最早完成时间<br>$$</p><p>$$<br>总时差（总缓冲期）&#x3D;最晚完成时间-最早完成时间<br>$$</p><p>$$<br>干预缓冲期&#x3D;总缓冲期-空闲缓冲期<br>$$</p></li><li><p><strong>例题1：</strong></p></li></ul><p><img src="/../img/image-20220522151823291.png" alt="image-20220522151823291"></p><p><img src="/../img/image-20220522151852491.png" alt="image-20220522151852491"></p><p><img src="/../img/image-20220522152508431.png" alt="image-20220522152508431"></p><ul><li><strong>例题2：</strong></li></ul><p><img src="/../img/image-20220522164030228.png" alt="image-20220522164030228"></p><p><strong>例题3：</strong></p><p><img src="/../img/image-20220522164753829.png" alt="image-20220522164753829"></p><p><strong>（DHC为关键路径）</strong></p></li></ol></li><li><p>PERT技术（工程评估评审技术）的步骤：</p><ul><li>估计每个活动的最可能的时间，乐观的时间，悲观的时间，计算活动的期望周期与标准偏差；</li><li>正向遍历得到期望达到事件的日期；</li><li>满足目标的可能性。</li></ul></li><li><p>关键链法（CCPM）步骤：</p><p><img src="/../img/image-20220522165929322.png" alt="image-20220522165929322"></p></li></ol><h3 id="软件项目的资源管理"><a href="#软件项目的资源管理" class="headerlink" title="软件项目的资源管理"></a>软件项目的资源管理</h3><ol><li>资源：资源是执行项目所需要的任何项和人。</li><li>资源分配直方图</li></ol><p><img src="/../img/image-20220522170508876.png" alt="image-20220522170508876"></p><h3 id="软件项目的风险管理"><a href="#软件项目的风险管理" class="headerlink" title="软件项目的风险管理"></a>软件项目的风险管理</h3><ol><li><p>风险的定义：一个不确定的事件或者情况，若其一旦发生，会对项目的目标，例如：进度、成本和质量，产生积极或消极的影响。</p></li><li><p>风险管理的框架</p><p><img src="/../img/image-20220522170747335.png" alt="image-20220522170747335"></p></li><li><p>风险处理方法</p><ul><li><p>风险处理的方法—接受风险，规避风险，降低风险，转移风险</p></li><li><p>风险的分类–4大类：参与者，技术，结构，任务</p></li></ul></li></ol><h3 id="软件项目的监督和控制"><a href="#软件项目的监督和控制" class="headerlink" title="软件项目的监督和控制"></a>软件项目的监督和控制</h3><ol><li><p>挣值分析（计算题）</p><ol><li><p>挣值：赋予每个任务一个“挣值”，表示完成这个任务需要的支出，一般用时间或金钱衡量。</p></li><li><p>赋值方法：0&#x2F;100</p></li><li><p>三个数值：</p><ul><li>计划价值（PV)：已计划工作的预测成本 </li><li>挣值(EV)：已执行工作的预测成本</li><li>实际成本(AC)：已执行工作的实际成本</li></ul></li><li><p>两个偏差：</p><ul><li><p>进度偏差（SV）：挣值与计划价值的差<br>$$<br>SV&#x3D;EV-PV<br>$$</p></li><li><p>成本偏差（CV）：挣值与实际成本的差</p></li></ul><p>$$<br>CV&#x3D;EV-AC<br>$$</p></li><li><p>两个性能比：</p><ul><li><p>进度性能指标（SPI）：SPI &lt; 1——进度落后<br>$$<br>SPI&#x3D;EV&#x2F;PV<br>$$</p></li><li><p>成本性能指标：CPI &lt; 1——成本超支<br>$$<br>CPI&#x3D;EV&#x2F;AC<br>$$</p></li></ul></li><li><p>完成时间的估计值（TEAC）：按照当前进度项目的完成时间估计</p><p>项目的计划周期（SAC）<br>$$<br>TEAC &#x3D; SAC &#x2F; SPI<br>$$<br>项目成本预算（EAC）：按照当前的进度，项目的总支出的估计</p><p>全部工作的预算（按照原计划，完成所有工作所需的预算成本）（BAC）<br>$$<br>EAC &#x3D; BAC &#x2F; CPI<br>$$</p></li></ol></li><li><p>例题1：</p><img src="../img/image-20220523160842621.png" alt="image-20220523160842621" style="zoom:80%;" /><img src="../img/image-20220523160815831.png" alt="image-20220523160815831" style="zoom:80%;" /></li><li><p>挣值法参数分析与对应措施表</p><table><thead><tr><th><strong>序号</strong></th><th>*</th><th><strong>三参数关系</strong></th><th><strong>分析（含义）</strong></th><th><strong>措施</strong></th></tr></thead><tbody><tr><td><strong>1</strong></td><td></td><td><strong>AC &gt; PV &gt; EV</strong>           <strong>SV&lt;0    CV&lt;O</strong></td><td><strong>效率低</strong>  <strong>速度较慢</strong>  <strong>投入超前</strong></td><td><strong>用工作效率高的人员更换一批工作效率低的人员</strong></td></tr><tr><td><strong>2</strong></td><td></td><td><strong>EV  &gt; PV &gt; AC</strong>      <strong>SV&gt;0  CV&gt;0</strong></td><td><strong>效率高</strong>  <strong>速度较快</strong>  <strong>投入延后</strong></td><td><strong>若偏离不大，维持现状</strong></td></tr><tr><td><strong>3</strong></td><td></td><td><strong>EV  &gt; AC &gt; PV</strong>      <strong>SV&gt;0  CV&gt;0</strong></td><td><strong>效率较高</strong>  <strong>速度快</strong>  <strong>投入超前</strong></td><td><strong>抽出部分人员，放慢进度</strong></td></tr><tr><td><strong>4</strong></td><td></td><td><strong>AC  &gt; EV &gt; PV</strong>      <strong>SV&gt;0  CV&lt;0</strong></td><td><strong>效率较低</strong>  <strong>速度较快</strong>  <strong>投入超前</strong></td><td><strong>抽出部分人员，增加少量骨干人员</strong></td></tr><tr><td><strong>5</strong></td><td></td><td><strong>PV  &gt; AC &gt; EV</strong>      <strong>SV&lt;0  CV&lt;0</strong></td><td><strong>效率较低</strong>  <strong>速度慢</strong>  <strong>投入延后</strong></td><td><strong>增加高效人员投入</strong></td></tr></tbody></table></li></ol><h3 id="软件项目的配置管理"><a href="#软件项目的配置管理" class="headerlink" title="软件项目的配置管理"></a>软件项目的配置管理</h3><ol><li>配置管理的任务<ul><li>标志变更</li><li>控制变更</li><li>确保变更正确实现</li><li>向受变更影响的组织和个人报告变更</li></ul></li><li>配置项：软件配置管理的对象，一个软件配置项是项目中一个特定的、可文档化的工作产品集。</li></ol><h2 id="经典的软件过程管理"><a href="#经典的软件过程管理" class="headerlink" title="经典的软件过程管理"></a><strong>经典的软件过程管理</strong></h2><h3 id="CMM"><a href="#CMM" class="headerlink" title="CMM"></a>CMM</h3><ol><li><p>CMM——软件过程能力成熟度模型</p></li><li><p>出发点：<strong>CMM描述软件组织一条从无序的、混乱的过程到成熟的、有纪律的过程的改进途径</strong>，描绘出软件组织如何增加对软件开发和维护的过程控制，如何向软件工程和管理的优秀文化演变等方面的指导 。</p></li><li><p>CMM不是过程，不是技术，不是方法，它是一种指导思想。</p></li><li><p>体系结构</p><img src="../img/image-20220523171439077.png" alt="image-20220523171439077" style="zoom:67%;" /><img src="../img/image-20220523171510128.png" alt="image-20220523171510128" style="zoom: 67%;" /><ul><li><p>CMM由5个成熟度级别组成。</p><ul><li>初始级：软件过程不稳定，项目执行无序、混乱，没有稳定的开发环境。</li><li>可重复级：规则化的</li><li>已定义级：标准的、一致的</li><li>已管理级：可预测的</li><li>优化级：不断改进</li></ul><img src="../img/image-20220523172046935.png" alt="image-20220523172046935" style="zoom:67%;" /></li><li><p>每个成熟度级别（除级别1）包含了实现该级别的若干个关键过程域（KPA）。</p></li><li><p>每一个KPA进一步被分为称为公共特征的5个部分：<strong>执行约定、执行能力、执行活动、测量和分析、验证实施</strong>。</p></li><li><p>这些公共特征包括了关键实践（KP），即每一个KPA包括5类KP，实现了这些KP后，就实现了关键过程域的目标。</p></li></ul></li><li><p>关键过程域</p><ol><li><p>定义：一系列相互关联的操作活动，标识了达到某个成熟度级别时所必须满足的条件。</p><blockquote><p>一个软件企业如果希望达到某一个成熟度级别，就必须完全满足该级别的关键过程域的要求，即满足每个关键过程域的目标。</p></blockquote></li><li><p>CMM共有18个KPA，每一级都有自己的KPA，KPA分为三大类：管理过程、组织过程和工程过程。</p></li></ol></li><li><p>关键实践</p><ol><li>定义：描述对KPA的有效实施和制度化起最重要作用的基础设施和活动。</li></ol></li></ol><h3 id="CMMI"><a href="#CMMI" class="headerlink" title="CMMI"></a>CMMI</h3><ol><li><p>CMMI的两种表示方法：</p><ul><li>阶段式表示法：作为整个组织已建立的一个过程域集合</li><li>连续式表示法：作为单一过程域或者过程域集合</li></ul></li><li><p>CMM和CMMI的区别与联系</p><ol><li><p>区别：</p><ul><li>CMM适用于软件的组织成熟度测评。CMMI适用于多种组织成熟度测评。CMMI相对CMM更完整，更适用于大环境。</li></ul></li><li><p>联系：CMMI有两种表示方法，一种就是与CMM一样的阶段式表现方法（把CMMI中的若干个过程区域分成5个成熟度级别）；</p><p>另一种是连续式的表现方法（将CMMI中过程区域分为四大类，过程管理，项目管理，工程以及支持）</p></li></ol></li></ol><h3 id="PSP"><a href="#PSP" class="headerlink" title="PSP"></a>PSP</h3><ol><li><p>体系结构</p><ol><li><p>PSP成熟度模型：PSP具有4个等级<strong>，</strong>7个台阶组成的成熟度框架 。4个等级分别为个体度量过程、个体计划过程、个体质量管理过程和个体循环过程。</p><img src="../img/image-20220523193430349.png" alt="image-20220523193430349" style="zoom:67%;" /></li><li><p>PSP过程框架：PSP过程由一系列方法、表格、脚本等组成，用以指导软件开发人员计划、度量和管理他们的工作。</p></li></ol></li><li><p>两种日志</p><ol><li>时间日志</li><li>缺陷日志</li></ol></li><li><p>评审比测试有效的原因：在评审时发现的错误比测试时发现的多；成本低。缺陷发现的越早，修复的花费越低；且避免缺陷比发现和修复缺陷更有效。</p></li><li><p>四个设计模板：</p><ol><li>操作规格模板（UML:用例图）：描述了系统与外界的交互；描述了用户与待设计系统的正常情况下和异常情况下的交互。</li><li>功能规格模板（UML:类图）：描述系统与外界的接口。</li><li>状态规格模板：可以精确定义程序的所有状态、状态之间转换以及伴随每次状态转换的动作。</li><li>逻辑规格模板：可以精确描述系统的内部逻辑状态。</li></ol></li></ol><h3 id="软件过程模型"><a href="#软件过程模型" class="headerlink" title="软件过程模型"></a>软件过程模型</h3><ol><li>瀑布模型<ol><li>特点：<ul><li>开发阶段严格按照线性方式进行</li><li>阶段间有因果关系</li><li>每个阶段需评审确认</li><li>允许反馈</li><li>强调文档</li></ul></li><li>适用场所：需求易于完善定义的软件</li><li>缺点：<ul><li>各个阶段的划分完全固定，阶段之间产生大量的文档，极大地增加了工作量</li><li>开发过程中很难响应客户的变更要求</li><li>早期的错误可能要等到开发后期的测试阶段才能发现，进而带来 严重的后果</li></ul></li></ol></li><li>快速原型模型<ol><li>优点：<ul><li>加强用户和软件人员之间的沟通，明确系统的需求</li><li>尽早得到系统可用性的反馈信息，及时修改以获得完整、正确需求</li></ul></li><li>缺点：<ul><li>用户会由于看到的原型系统不完善，而对产品产生怀疑</li><li>可能为了快速开发原型系统，而采用未经充分论证的技术（如操作系统平台、主要的算法）导致质量低下</li></ul></li></ol></li><li>增量模型<ol><li>优点：<ul><li>整个产品被分解成若干个构件逐步交付，用户可以不断地看到所开发软件的可运行中间版本</li><li>将早期增量作为原型有助于明确后期增量的需求</li><li>降低开发风险</li><li>重要功能被首先交付，从而使其得到最多的测试</li></ul></li><li>缺点：<ul><li>需要软件具备开放式的体系结构，以便各个构件逐步进入</li><li>需求难以在增量实现之前详细定义，因此增量与需求的准确映射以及所有增量的有效集成可能会比较困难，容易退化为边做边改方式，使软件过程的控制失去整体性</li></ul></li></ol></li><li>螺旋模型<ol><li>优点：（风险驱动）<ul><li>关注软件的重用</li><li>关注早期错误的消除</li><li>将质量目标放在首位</li><li>将开发阶段与维护阶段结合在一起</li></ul></li><li>缺点：<ul><li>需要风险评估的经验</li><li>只适应内部大规模软件开发</li></ul></li></ol></li><li>形式化方法模型<ol><li>优点：<ul><li>由于数学方法具有严密性和准确性，形式化方法开发过程所交付的软件系统具有较少的缺陷和较高的安全性</li></ul></li><li>缺点：<ul><li>开发人员需要具备一定技能并经过特殊训练</li><li>形式化描述和转换是一项费时费力的工作,成本高，质量不一定高</li><li>现实应用的系统大多数是交互性强的软件，但是这些系统难以用形式化方法进行描述</li></ul></li></ol></li><li>基于组件的开发模型<ol><li>优点：<ul><li>充分体现软件复用的思想</li><li>实现快速交付软件</li><li>利用开源组件与软件</li></ul></li><li>缺点：<ul><li>商业组件的修改受到限制，影响系统的演化</li></ul></li></ol></li></ol><h3 id="MSF"><a href="#MSF" class="headerlink" title="MSF"></a>MSF</h3><ol><li>六个角色：产品管理，程序管理，开发，测试，发布管理，用户体验</li><li>过程模型中的五个阶段：构思阶段，计划阶段，开发阶段，稳定阶段，部署阶段</li></ol><h3 id="RUP"><a href="#RUP" class="headerlink" title="RUP"></a>RUP</h3><ol><li>九个软件过程<ol><li>6个核心过程流：商业建模，需求，分析和设计，实现，测试，部署</li><li>3个辅助过程流：配置和变更管理，项目管理，环境</li></ol></li><li>四个阶段：<ul><li>初始阶段：里程碑：生命期目标</li><li>细化阶段：里程碑：生命期构架</li><li>构造阶段：里程碑：初始运作功能。构造阶段的结束是项目开发的<strong>第三个重要的里程碑</strong>。这个阶段产生的版本通常被称为β版。</li><li>交付阶段：里程碑：产品发布</li></ul></li><li>六大经验：迭代式开发，管理需求，基于组件的体系结构，可视化建模，验证软件质量，控制软件变更</li></ol><h2 id="敏捷软件开发"><a href="#敏捷软件开发" class="headerlink" title="敏捷软件开发"></a><strong>敏捷软件开发</strong></h2><ol><li>敏捷宣言<ul><li>注重个人及互动胜于过程和工具</li><li>注重可用的软件胜于详尽的文档</li><li>注重客户协作胜于合同谈判</li><li>注重响应变化胜于恪守计划</li></ul></li><li>Scrum：一个敏捷开发框架，是一个增量的、迭代的开发过程</li><li>极限编程（XP）：一种全新而快捷的软件开发方法。XP团队使用现场客户、特殊计划方法和持续测试来提供快速的反馈和全面的交流。这可以帮助团队最大化地发挥他们的价值。<ul><li>XP认为沟通是项目成功的关键</li><li>实践：现场客户，计划游戏，系统隐喻，简单设计，代码集体所有</li><li>XP特别适合于小型的有责任心的、自觉自励的团队开发需求不确定或者迅速变化的软件</li></ul></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
